[
    {
        "title": [
            "Create a GitHub Tracker with Push Notifications in Svelte"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss\"\n              title=\"Create a GitHub Tracker with Push Notifications in Svelte\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker.jpg\"\n        alt=\"Create a GitHub Tracker with Push Notifications in Svelte\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Push notifications reach more users than emails do. Learn how to build a GitHub tracker that sends push notifications of new issues and PRs.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss\">Create a GitHub Tracker with Push Notifications in Svelte</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-a-github-tracker-with-push-notifications-in-svelte/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=208635",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Aarnav Pai"
        ],
        "pubDate": [
            "Thu, 11 Nov 2021 02:00:15 GMT"
        ],
        "plainDescription": "Create a GitHub Tracker with Push Notifications in Svelte\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636590666push-notification-github-tracker.jpg]\n[https://www.sitepoint.com/create-a-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The Best Tools and Resources for Web Designers in 2022"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/the-best-tools-and-resources-for-web-designers-in-2022/?utm_source=rss\"\n              title=\"The Best Tools and Resources for Web Designers in 2022\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2.jpg\"\n        alt=\"The Best Tools and Resources for Web Designers in 2022\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Here's our latest selection of the best timesaving tools, resources and online apps for web designers in 2022.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/the-best-tools-and-resources-for-web-designers-in-2022/?utm_source=rss\">The Best Tools and Resources for Web Designers in 2022</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/the-best-tools-and-resources-for-web-designers-in-2022/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258828",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Tue, 15 Mar 2022 02:00:41 GMT"
        ],
        "plainDescription": "The Best Tools and Resources for Web Designers in 2022\n[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647303477web-design-tools2.jpg]\n[https://www.sitepoint.com/the-best-tools-and-resource...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "7 Learning Habits for Developers: Reach Skill Goals in Less Time"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/learning-habits-for-developers/?utm_source=rss\"\n              title=\"7 Learning Habits for Developers: Reach Skill Goals in Less Time\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            As a developer, it's important to learn continuously. We discuss seven good learning habits that every developer should master.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/learning-habits-for-developers/?utm_source=rss\">7 Learning Habits for Developers: Reach Skill Goals in Less Time</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/learning-habits-for-developers/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259272",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Career Advancement",
            "Entrepreneur",
            "Productivity"
        ],
        "dc:creator": [
            "Isabel Nyo"
        ],
        "pubDate": [
            "Mon, 28 Mar 2022 20:11:16 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648519378lhd.jpg]\n[https://www.sitepoint.com/learning-habits-for-developers/?utm_source=rss] As a\ndeveloper, it's important to learn continuo...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Collective #708"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-708/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 21 Apr 2022 10:13:56 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=63332",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>JavascriptDB * The Future of CSS: CSS Toggles * Loaders * The Front-End Developer's Guide to the Terminal</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-708/\">Collective #708</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.sherruble.rocks/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_WOTW.jpg\" alt=\"Collective 708 website of the week\" class=\"wp-image-63358\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.sherruble.rocks/\">Inspirational Website of the Week: Anna Sherruble</a></h2>\n<p class=\"ct-coll-p\">A fun an artsy web experience that shines with great colors and a 90ies vibe.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.sherruble.rocks/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item ct-coll-item--sponsor\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n        <a class=\"ct-coll-thumb\" href=\"https://srv.buysellads.com/ads/long/x/TCG4NMZ4TTTTTTDZQRQN6TTTTTTFTKLLKVTTTTTTA44MPYETTTTTTWIGQQ3UE54I27FFL7IN2T7WC2Z6QJMFK7SHPYBT\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"350\" height=\"300\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_kintone.jpg\" alt=\"Kintone\" class=\"wp-image-63359\"></a></p>\n<div class=\"ct-coll-sponsorship\">This content is <a target=\"_blank\" href=\"https://tympanus.net/codrops/advertise/\" rel=\"noopener\">sponsored</a> via <a target=\"_blank\" href=\"https://codrops.bsa-whitelabel.com/checkout/new\" rel=\"noopener\">BuySellAds</a></div>\n<h2><a href=\"https://srv.buysellads.com/ads/long/x/TCG4NMZ4TTTTTTDZQRQN6TTTTTTFTKLLKVTTTTTTA44MPYETTTTTTWIGQQ3UE54I27FFL7IN2T7WC2Z6QJMFK7SHPYBT\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">Experience Building Low-code Apps</a></h2>\n<p class=\"ct-coll-p\">Learn how to spend less time constructing the back-end, and more time designing the front-end.</p>\n<p>        <a class=\"ct-coll-link\" target=\"_blank\" href=\"https://srv.buysellads.com/ads/long/x/TCG4NMZ4TTTTTTDZQRQN6TTTTTTFTKLLKVTTTTTTA44MPYETTTTTTWIGQQ3UE54I27FFL7IN2T7WC2Z6QJMFK7SHPYBT\" rel=\"nofollow sponsored noopener\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.joshwcomeau.com/javascript/terminal-for-js-devs/\"><img loading=\"lazy\" width=\"350\" height=\"220\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_terminal.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63352\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.joshwcomeau.com/javascript/terminal-for-js-devs/\">The Front-End Developer&#8217;s Guide to the Terminal</a></h2>\n<p class=\"ct-coll-p\">An article covering all of the most important fundamentals to use the Terminal. By Josh W Comeau</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.joshwcomeau.com/javascript/terminal-for-js-devs/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://javascriptdb.com/\"><img loading=\"lazy\" width=\"350\" height=\"218\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_jsdb.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63345\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://javascriptdb.com/\">JavascriptDB</a></h2>\n<p class=\"ct-coll-p\">Create low code serverless applications: Arrays and Objects operations read and write into your database.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://javascriptdb.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2022/04/20/the-future-of-css-css-toggles/\"><img loading=\"lazy\" width=\"350\" height=\"300\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_toggle.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63353\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.bram.us/2022/04/20/the-future-of-css-css-toggles/\">The Future of CSS: CSS Toggles</a></h2>\n<p class=\"ct-coll-p\">Learn about an exciting new prototype for CSS Toggles in this article by Bramus Van Damme.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2022/04/20/the-future-of-css-css-toggles/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://uiball.com/loaders/\"><img loading=\"lazy\" width=\"350\" height=\"256\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_loaders.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63346\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://uiball.com/loaders/\">Loaders</a></h2>\n<p class=\"ct-coll-p\">Free loaders and spinners for your next project. Built with HTML, CSS and some SVG. By Griffin Johnston.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://uiball.com/loaders/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.youtube.com/watch?v=lcMCVWYpnrI\"><img loading=\"lazy\" width=\"350\" height=\"229\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_fiber.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63342\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.youtube.com/watch?v=lcMCVWYpnrI\">Create a 3D car show with React Three Fiber and Three.js</a></h2>\n<p class=\"ct-coll-p\">A fantastic introduction to React Three Fiber where you&#8217;ll learn how to quickly setup and create a stunning 3D scene in just about 300 lines of code. By Domenico Bruzzese.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.youtube.com/watch?v=lcMCVWYpnrI\">Watch it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ektogamat/threejs-andy-bolierplate\"><img loading=\"lazy\" width=\"350\" height=\"255\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_threeboiler.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63339\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/ektogamat/threejs-andy-bolierplate\">Ektogamat ThreeJS Boilerplate</a></h2>\n<p class=\"ct-coll-p\">Very simple threejs boilerplate in VanillaJS to start your projects. Check out this tweet for an <a href=\"https://twitter.com/Andersonmancini/status/1514656050238177290\">intro video</a>. By Anderson Mancini.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ektogamat/threejs-andy-bolierplate\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://persepolis.getty.edu/\"><img loading=\"lazy\" width=\"350\" height=\"255\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_persepolis.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63348\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://persepolis.getty.edu/\">Persepolis Reimagined</a></h2>\n<p class=\"ct-coll-p\">Explore the capital of ancient Persia at its height during the reign of King Xerxes. A new immersive web experience from Getty.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://persepolis.getty.edu/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/\"><img loading=\"lazy\" width=\"350\" height=\"241\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_forced.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63343\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/\">Forced colors explained: A practical guide</a></h2>\n<p class=\"ct-coll-p\">In this article you will learn all about forced colors, a CSS media query that when active radically changes the way your site looks, without any of your input.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://bjango.com/articles/svgpassthroughprecision/\"><img loading=\"lazy\" width=\"350\" height=\"149\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_precision.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63349\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://bjango.com/articles/svgpassthroughprecision/\">SVG passthrough precision</a></h2>\n<p class=\"ct-coll-p\">If an SVG is imported into a design tool, then immediately exported as another SVG, how much precision is kept? What’s added, removed, or altered? Find out in this article.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://bjango.com/articles/svgpassthroughprecision/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://letsbuildui.dev/articles/a-typing-text-effect-with-react-hooks\"><img loading=\"lazy\" width=\"350\" height=\"213\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_type.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63354\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://letsbuildui.dev/articles/a-typing-text-effect-with-react-hooks\">A Typing Text Effect with React Hooks</a></h2>\n<p class=\"ct-coll-p\">Build a hook that backspaces and types out an array of words. By Ryan Finni.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://letsbuildui.dev/articles/a-typing-text-effect-with-react-hooks\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://weektodo.me/\"><img loading=\"lazy\" width=\"350\" height=\"298\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_weekly.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63356\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://weektodo.me/\">WeekToDo</a></h2>\n<p class=\"ct-coll-p\">WeekToDo is a free minimalist weekly planner app focused on privacy. Available for Windows, Mac, Linux or online.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://weektodo.me/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://lab.john-beresford.com/experiments/skywalker\"><img loading=\"lazy\" width=\"350\" height=\"288\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_saber.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63350\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://lab.john-beresford.com/experiments/skywalker\">Skywalker</a></h2>\n<p class=\"ct-coll-p\">John Beresford created this great demo of Luke Skywalker&#8217;s lightsaber.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://lab.john-beresford.com/experiments/skywalker\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LuanRT/YouTube.js\"><img loading=\"lazy\" width=\"350\" height=\"261\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_youtubejs.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63357\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/LuanRT/YouTube.js\">YouTube.js</a></h2>\n<p class=\"ct-coll-p\">A full-featured wrapper around YouTube&#8217;s private API providing a simple and efficient way to interact with YouTube programmatically.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/LuanRT/YouTube.js\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/thiemoall/status/1516713360687087616\"><img loading=\"lazy\" width=\"350\" height=\"193\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_clothes.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63341\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://twitter.com/thiemoall/status/1516713360687087616\">Thread on &#8220;Photorealistic Monocular 3D Reconstruction of Humans Wearing Clothing&#8221;</a></h2>\n<p class=\"ct-coll-p\">A very interesting thread on a pre-print by Thiemo Alldieck on some super exciting 3D geometry construction.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/thiemoall/status/1516713360687087616\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.eatmy.art/\"><img loading=\"lazy\" width=\"350\" height=\"270\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_gif.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63338\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.eatmy.art/\">Arteater</a></h2>\n<p class=\"ct-coll-p\">Fun offline thing: Arteater digests your hand-drawn art and returns an animated GIF you can save and share.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.eatmy.art/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://voussoir.net/writing/browser_in_the_dark\"><img loading=\"lazy\" width=\"350\" height=\"280\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_flashlight.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63337\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://voussoir.net/writing/browser_in_the_dark\">Browser in the Dark: flashlights with CSS and canvas</a></h2>\n<p class=\"ct-coll-p\">A really interesting &#8220;flashlight&#8221; effect with CSS and Canvas by Ethan Dalool.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://voussoir.net/writing/browser_in_the_dark\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://indieblog.page/\"><img loading=\"lazy\" width=\"350\" height=\"238\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_indie.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63344\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://indieblog.page/\">Discover the IndieWeb, one blog post at a time</a></h2>\n<p class=\"ct-coll-p\">A website to randomly explore the IndieWeb. Simply click a button and you will be redirected to a random post from a personal blog.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://indieblog.page/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://daverupert.com/2022/04/7-web-component-tricks/\"><img loading=\"lazy\" width=\"350\" height=\"155\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_webcomponents.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63355\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://daverupert.com/2022/04/7-web-component-tricks/\">7 Web Component Tricks</a></h2>\n<p class=\"ct-coll-p\">Dave Rupert shares some tricks he learned when preparing his Web Components Course for Frontend Masters.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://daverupert.com/2022/04/7-web-component-tricks/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dail8859/NotepadNext\"><img loading=\"lazy\" width=\"350\" height=\"244\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_notepad.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63347\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/dail8859/NotepadNext\">NotepadNext</a></h2>\n<p class=\"ct-coll-p\">A cross-platform, reimplementation of Notepad++ available for Windows, Linux, and macOS.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dail8859/NotepadNext\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/16/awesome-demos-roundup-20/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_demosroundup.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63336\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/04/16/awesome-demos-roundup-20/\">Awesome Demos Roundup #20</a></h2>\n<p class=\"ct-coll-p\">A hand-picked collection of the most creative and interesting web experiments from the past times.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/16/awesome-demos-roundup-20/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/Sketches/015-custom-cursor-filter-3/\"><img loading=\"lazy\" width=\"350\" height=\"276\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_sketch.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63351\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/Sketches/015-custom-cursor-filter-3/\">Sketch 015: Custom Cursor (multiple circles with filter effect)</a></h2>\n<p class=\"ct-coll-p\">A custom SVG cursor with multiple circles and a filter effect on hover.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/Sketches/015-custom-cursor-filter-3/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C708_aviator2.jpg\" alt=\"Collective 708 item image\" class=\"wp-image-63340\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/\">How to Add More Fun to a Game: Extending &#8220;The Aviator&#8221;</a></h2>\n<p class=\"ct-coll-p\">A tutorial that explores some hands-on changes of &#8220;The Aviator&#8221; game to make it more fun and engaging.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/\">Check it out</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-708/\">Collective #708</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "JavascriptDB * The Future of CSS: CSS Toggles * Loaders * The Front-End\nDeveloper's Guide to the Terminal\n\nThe post Collective #708\n[https://tympanus.net/codrops/collective/collective-708/] appeared f...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Issue #500"
        ],
        "link": [
            "https://css-weekly.com/issue-500/"
        ],
        "pubDate": [
            "Thu, 14 Apr 2022 14:22:50 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-500/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how parent selector :has() works, how to create a dialog component, why you should switch to HSL, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Headlines</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/css-has-parent-selector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Parent Selector</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://ishadeed.com/article/css-has-parent-selector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/css-has-parent-selector.png\" alt=\"CSS Parent Selector\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed explains what problem <code>:has</code> solves, how it works, where and how you can use it, along with some use-cases and examples.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/css-has-parent-selector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-a-dialog-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building a Dialog Component</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://web.dev/building-a-dialog-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/building-a-dialog-component1.jpg\" alt=\"Building a Dialog Component\" /></a>\n\t\t\t\t\t\t<p>Adam Argyle gives a foundational overview of building color-adaptive, responsive, and accessible mini and mega modals with the <code>&lt;dialog&gt;</code> element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-a-dialog-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/retool-build-internal-tools\">Create a better interface for any business problem with Retool</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/retool-build-internal-tools\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/retool-build-internal-tools-remarkably-fast.jpg\" alt=\"Create a better interface for any business problem with Retool\" /></a>\n\t\t\t\t\t\t<p>You don&#8217;t have to be a frontend expert to build beautiful apps. Retool provides a powerful platform to build UI, connect to data, and publish your app 10x faster. Skip boilerplate code with 90+ pre-built components, and write code nearly anywhere to customize how your apps look and work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/retool-build-internal-tools\">Explore our component library here</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://www.youtube.com/c/CSSWeekly\" target=\"_blank\">From Our YouTube Channel</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/OqLquBs-bEg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Intro to CSS Parent Selector — :has()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://youtu.be/OqLquBs-bEg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/intro-to-css-parent-selector-has.png\" alt=\"Intro to CSS Parent Selector — :has()\" /></a>\n\t\t\t\t\t\t<p>Learn how <code>:has()</code> pseudo-class works and how you can use it to create an engaging &#8220;staircase&#8221; hover effect.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/OqLquBs-bEg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/VInSzHOeFkE?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Switch to HSL Color Format</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Find out why you should switch from HEX and RGBA color values to HSL, and how you can easily tweak colors (for accessibility, gradients or hover effects) when you&#8217;re using the HSL color format.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/VInSzHOeFkE?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://matthiasott.com/notes/css-has-a-parent-selector-now?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS :has() A Parent Selector Now</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Matthias Ott shares a short introduction to <code>:has()</code> pseudo-class.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://matthiasott.com/notes/css-has-a-parent-selector-now?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Add a CSS Lens Flare to Photos for a Bright Touch</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Shimin Zhang demonstrates how to create a lens flare effect using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.logrocket.com/exploring-css-color-module-level-5/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Exploring the new CSS color functions: CSS Color Module Level 5</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Nelson Michael created a reference guide for the new color specification methods available with CSS Color Module Level 5.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.logrocket.com/exploring-css-color-module-level-5/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-irl.info/animated-grid-tracks-with-has/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Animated Grid Tracks with :has()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker demonstrates an excellent use-case for <code>:has()</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-irl.info/animated-grid-tracks-with-has/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://hiddedevries.nl/en/blog/2022-04-12-common-accessibility-issues-that-you-can-fix-today?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Common Accessibility Issues That You Can Fix Today</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Hidde de Vries outlines some common accessibility problems that you can fix quickly.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://hiddedevries.nl/en/blog/2022-04-12-common-accessibility-issues-that-you-can-fix-today?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/css-day-conference\">Also prefer fundamental CSS knowledge over hypes?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/css-day-conference\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/cssday.png\" alt=\"Also prefer fundamental CSS knowledge over hypes?\" /></a>\n\t\t\t\t\t\t<p>You’re not alone, and we’ve got just the conference for you. CSS Day is a deep-diving, content-focused CSS conference in Amsterdam, NL. We ask our speakers to treat CSS &#038; design topics that they themselves, as well as our attendees, can geek out on. On June 9th &#038; 10th, after a two-year silence, we’ll host our 8th edition.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/css-day-conference\">See our line-up</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.joshwcomeau.com/gradient-generator/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Gradient Generator</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online tool that will help you generate lush, beautiful gradients you can use in CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.joshwcomeau.com/gradient-generator/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://fffuel.co/pppalette/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Pppalette</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Pppalette is an online generator that will help you create beautiful color palettes.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://fffuel.co/pppalette/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/wyattnolen/pen/zYPWrdg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Polygon Animal Morph [CSS Only]</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/wyattnolen/pen/zYPWrdg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/polygon-animal-morph-css-only.png\" alt=\"Polygon Animal Morph [CSS Only]\" /></a>\n\t\t\t\t\t\t<p>Wyatt Nolen created a fascinating animation that morphs between two polygon animals using stacking divs, clip-paths, and CSS animations.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/wyattnolen/pen/zYPWrdg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how parent selector :has() works, how to create a dialog component, why\nyou should switch to HSL, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "An Introduction to Cloud Computing and AWS Certification"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss\"\n              title=\"An Introduction to Cloud Computing and AWS Certification\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing.jpg\"\n        alt=\"An introduction to Cloud Computing and AWS Certification\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn about cloud computing options, how the many services offered by Amazon work, and what Amazon cloud certification is all about.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss\">An Introduction to Cloud Computing and AWS Certification</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/cloud-computing-aws-certification/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=232296",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Catalin Pit"
        ],
        "pubDate": [
            "Fri, 26 Nov 2021 02:00:21 GMT"
        ],
        "plainDescription": "An introduction to Cloud Computing and AWS Certification\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637906398aws-cloud-computing.jpg]\n[https://www.sitepoint.com/cloud-computing-aws-cer...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Create a Color Palette for Your Design System"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/color-palette-design-system/?utm_source=rss\"\n              title=\"How to Create a Color Palette for Your Design System\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-scaled.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-1536x807.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-2048x1076.jpg 2048w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            A color palette is one of the most important aspects of a design system. Designers can use them to create a visual hierarchy, a unified look and feel, and evoke emotions.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/color-palette-design-system/?utm_source=rss\">How to Create a Color Palette for Your Design System</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/color-palette-design-system/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=260535",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX",
            "Software",
            "Technology",
            "UI Design"
        ],
        "dc:creator": [
            "SitePoint Team"
        ],
        "pubDate": [
            "Tue, 03 May 2022 21:19:53 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651637815cpds-scaled.jpg]\n[https://www.sitepoint.com/color-palette-design-system/?utm_source=rss] A color\npalette is one of the most importan...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Get Started with Bubble, a No-code Tool for Building Serious Apps"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss\"\n              title=\"Get Started with Bubble, a No-code Tool for Building Serious Apps\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            You don't need to be a programmer to build apps. Learn how to create a CRUD app and set up your own server via drag and drop with Bubble.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss\">Get Started with Bubble, a No-code Tool for Building Serious Apps</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206927",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Low Code"
        ],
        "dc:creator": [
            "Wern Ancheta"
        ],
        "pubDate": [
            "Mon, 04 Oct 2021 02:00:07 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633373267bubble.jpg]\n[https://www.sitepoint.com/bubble-build-apps-no-code/?utm_source=rss] You don't\nneed to be a programmer to build apps. L...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "DuckDuckGo releases Mac browser"
        ],
        "link": [
            "https://frontendfoc.us/issues/537"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/122222/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 20px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>🇺🇦 #​537 — April 13, 2022 | <a href=\"https://frontendfoc.us/link/122223/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122224/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1649771707/eq5kla5vbfuol6kxzzn3.png\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122225/rss\" title=\"spreadprivacy.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">Introducing DuckDuckGo for Mac: A Private, Fast, and Secure Browsing App</a></span> — Mac-only, in beta, and invite only for now, but here’s a new browser app from the privacy-focused search engine DuckDuckGo. It uses WebKit under the hood, and boasts features such as private search, tracker blocking, automatic cookie pop-up management (<em>yes please</em>) and more.</p>\n  <p>Beah Burger-Lenehan (DuckDuckGo) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122226/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">Boost Resource Loading With <code>fetchpriority</code>, a New Priority Hint</a></span> — The new attribute helps us fine-tune relative <a href=\"https://frontendfoc.us/link/122227/rss\" style=\" color: #D94306;\">resource priority</a>, improve LCP performance, and deprioritize JavaScript fetch calls. This post digs into some potential use cases.</p>\n  <p>Adrian Bece </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122257/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/bbfe734d.jpg\" width=\"145\" height=\"145\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122257/rss\" title=\"frontendmasters.com\" style=\" color: #D94306;\">How to Build a Fullstack App from Scratch</a></span> — Join Scott Moss for this detailed course looking at modern app building. Get to grips with a stack of tools, including the likes of Next.js, TypeScript, Postgres, and React, plus you'll learn about data modeling, authentication, state management, testing and more.</p>\n  <p>Frontend Masters <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122238/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">Designing Better Breadcrumb-Based Navigation</a></span> — Explores how people navigate websites and how this prominent design pattern can assist us in our journeys.</p>\n  <p>Vitaly Friedman </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122228/rss\" title=\"ishadeed.com\" style=\" color: #D94306;\">CSS Parent Selector</a></span> — A deep-dive into the CSS <code>:has</code> parent selector, looking at how it works, with plenty of use-cases and visual examples.</p>\n  <p>Ahmad Shadeed </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n\n<ul>\n\n<li>Bramus Van Damme (<em>who recently <a href=\"https://frontendfoc.us/link/122232/rss\" style=\" color: #D94306; font-weight: 600;\">joined the Chrome Dev Relations team</a> btw</em>) reminds us of <a href=\"https://frontendfoc.us/link/122233/rss\" style=\" color: #D94306; font-weight: 600;\">just a few reasons to be excited</a> about the Media Queries level 4 spec.</li>\n\n<li>Michelle Barker rounds up some <a href=\"https://frontendfoc.us/link/122234/rss\" style=\" color: #D94306; font-weight: 600;\">recent CSS features</a> in this brief overview.</li>\n\n<li>John Oliver talks about data brokers, trackers, browsers, and web privacy in <a href=\"https://frontendfoc.us/link/122235/rss\" style=\" color: #D94306; font-weight: 600;\">this Last Week Tonight segment</a>.</li>\n\n<li>Neat! Microsoft Edge now <a href=\"https://frontendfoc.us/link/122231/rss\" style=\" color: #D94306; font-weight: 600;\">provides auto-generated image labels</a>.</li>\n\n\n</ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122229/rss\" title=\"webkit.org\" style=\" color: #D94306;\">Private Click Measurement: Conversion Fraud Prevention and Replacement For Tracking Pixels</a></span> — An update on the <a href=\"https://frontendfoc.us/link/122230/rss\" style=\" color: #D94306;\">proposed web standard</a> for measuring advertising in a privacy-preserving way.</p>\n  <p>John Wilander </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122236/rss\" title=\"blog.logrocket.com\" style=\" color: #D94306;\">A Deep Dive into CSS's <code>:where()</code></a></span> — A good primer on the <code>:where()</code> pseudo-class, showing how it can be used in production along with some specific use cases.</p>\n  <p>Pelumi Akintokun </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122237/rss\" title=\"austingil.com\" style=\" color: #D94306;\">Make Beautifully Resilient Apps with Progressive Enhancement</a></span> — Ignoring progressive enhancement could be seriously hurting your conversions. This article shows you how to build resiliency into your apps.</p>\n  <p>Austin Gil </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122239/rss\" title=\"retool.com\" style=\" color: #D94306;\">Retool Makes It 10x Faster to Build Custom Internal Tools for Any Company</a></span> — Build internal tools in minutes with Retool, where visual programming meets the power of real code.</p>\n  <p>Retool <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122240/rss\" title=\"developer.chrome.com\" style=\" color: #D94306;\">Performance Insights: Get Actionable Insights on Your Site's Performance</a></span> — Here’s a preview of the ‘Performance Insights’ panel, an upcoming Chrome feature that’s expected in version 102. It’s designed to surface actionable insights for your sites performance.</p>\n  <p>Jecelyn Yeen (Google) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122241/rss\" title=\"learnui.design\" style=\" color: #D94306;\">Identifying Fonts: The Complete Guide</a></span> — Having a good working knowledge of fonts is a handy skill to have when it comes to UI work. Here’s some handy pointers on identifying various typefaces in the wild.</p>\n  <p>Erik D. Kennedy </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122242/rss\" title=\"fontstand.com\" style=\" color: #D94306;\">Fonts in Use: Variable Fonts</a></span> — Four real-world examples of variable fonts being put to use.</p>\n  <p>Matthijs Sluiter </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122243/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Atomic 2.0: Revisiting the Atomic Design Method for Design Systems</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hannah Heinson</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122244/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Front End Engineer (Remote)</a></span> — Our profitable &amp; growing startup is looking for experienced FE engineers who are interested in working on complex UX challenges.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Sensor Tower</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122245/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Senior Technical Writer (Warsaw or Remote)</a></span> — The leading rich text editor used by global software companies and millions of users around the world. Join the CKEditor team.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">CKEditor</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122246/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools &amp; Resources</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122251/rss\" title=\"github.com\" style=\" color: #D94306;\">scroll-snap: A Customizable Scroll Snap Implementation</a></span> — Bit of an older project that’s still maintained. Uses <code>requestAnimationFrame()</code> for 60fps scrolling performance and doesn’t have any dependencies. <a href=\"https://frontendfoc.us/link/122252/rss\" style=\" color: #D94306;\">Try it here</a>.</p>\n  <p>Luca Falasco </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122253/rss\" title=\"styleguidefortailwind.com\" style=\" color: #D94306;\">Style Guide Generator for Tailwind CSS</a></span> — Generate a beautiful style guide based on your Tailwind configuration settings. You can do this via a URL to your GitHub repo or by pasting your config file directly.</p>\n  <p>beyondcode </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122249/rss\" title=\"bitmovin.com\" style=\" color: #D94306;\">APIs to Encode, Play &amp; Analyze Video. Start a Free Bitmovin Trial</a></span></p>\n  <p>Bitmovin Inc. <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122247/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1649842105/grxkhhboh2o0vafqmahv.png\" width=\"105\" height=\"\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122247/rss\" title=\"khushmeen.com\" style=\" color: #D94306;\">Doodle Icons: 400+ Free Hand-Drawn Icons</a></span> — These are quite nice and available in PNG and SVG formats and for Figma. 15 categories of icons and completely free for any kind of project. There's an associated <a href=\"https://frontendfoc.us/link/122248/rss\" style=\" color: #D94306;\">npm package here</a> too.</p>\n  <p>Khushmeen Sidhu </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122250/rss\" title=\"chalk.ist\" style=\" color: #D94306;\">Chalk.ist: Create Beautiful Images of Your Source Code</a></span> — Quickly turns your source code into nice sharable images. <a href=\"https://frontendfoc.us/link/122256/rss\" style=\" color: #D94306;\">Carbon</a> is another popular choice in this space.</p>\n  <p>Kasper Mikiewicz </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🖌 <strong> ..and finally</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122254/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1649843029/x2ue9v6vhbyvgxw2m543.png\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122254/rss\" title=\"sailorhg.com\" style=\" color: #D94306;\">home sweet homepage</a></span> — If you grew up in late 90s and used the likes of Geocities to build some of your very first websites then this webcomic about growing up online is a very sweet look at that side of web publishing and its wider impact on the individual. <em>There's a <a href=\"https://frontendfoc.us/link/122255/rss\" style=\" color: #D94306;\">text-only transcript</a> here too</em>.</p>\n  <p>Amy Wibowo </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/537/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 13 Apr 2022 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/537"
        ],
        "plainDescription": "[https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png]\n[https://frontendfoc.us/link/122222/rss]\n\nFrontend Focus\n\n🇺🇦 # 537 — April 13, 2022 | Read on the web\n[https://f...",
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/",
        "providerIdx": 5
    },
    {
        "title": [
            "Array.reduce() - for reducing an array to a single value"
        ],
        "dc:creator": [
            "Dillion Megida"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:08:50 +0000"
        ],
        "link": [
            "https://dev.to/dillionmegida/arrayreduce-for-reducing-an-array-to-a-single-value-31a6"
        ],
        "guid": [
            "https://dev.to/dillionmegida/arrayreduce-for-reducing-an-array-to-a-single-value-31a6"
        ],
        "description": [
            "<p>This article is the tenth of the <a href=\"https://dev.to/dillionmegida/series/17614\">Array Method Series</a>. In this article, I will explain what the <code>reduce</code> Array method is.</p>\n\n<h2>\n  \n  \n  What is the Reduce Method?\n</h2>\n\n<p>The <code>reduce</code> method of arrays is a higher-order function that basically reduces the values in an array to a single value. This single value could be a number, a string, an object, or even an array.</p>\n\n<p>This method goes through an iterative-loop process such that the returned value in a loop is applied to the next loop until the end of the array, and the final value is returned.</p>\n\n<p>This method does not modify the array.</p>\n\n<h2>\n  \n  \n  Syntax of the Reduce Method\n</h2>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"nx\">array</span><span class=\"p\">.</span><span class=\"nx\">reduce</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">previousValue</span><span class=\"p\">,</span> <span class=\"nx\">currentValue</span><span class=\"p\">,</span> <span class=\"nx\">currentIndex</span><span class=\"p\">,</span> <span class=\"nx\">array</span><span class=\"p\">){</span>\n  <span class=\"c1\">// do something with previousValue and currentValue</span>\n  <span class=\"c1\">// return a value</span>\n<span class=\"p\">},</span> <span class=\"nx\">initialValue</span><span class=\"p\">)</span>\n</code></pre>\n\n</div>\n\n\n\n<p>The <code>reduce</code> method receives two arguments: a callback function and an optional <code>initialValue</code>.</p>\n\n<p>The callbackFunction passed is applied to each item in the array. The arguments passed to the callback function in each loop are the <code>previousValue</code> from the previous loop, the <code>currentValue</code> in the current loop, the <code>index</code> of the current value, and the original <code>array</code>.</p>\n\n<h3>\n  \n  \n  How the previous value works\n</h3>\n\n<p>If you pass an <code>initialValue</code> argument, the <code>previousValue</code> in the first loop will be the <code>initialValue</code>, and the <code>currentValue</code> will be the first item in the array. In the second loop, the <code>previousValue</code> will be the returned value from the callback function in the first loop, and the <code>currentValue</code> will be the <strong>SECOND</strong> item in the array. And it goes like that, till the end.</p>\n\n<p>Suppose the <code>initialValue</code> argument is not provided. In that case, the <code>previousValue</code> in the first loop will be the first item in the array, and the <code>currentValue</code> will be the second item in the array. In the second loop, the <code>previousValue</code> will be the returned value from the callback function in the first loop, and the <code>currentValue</code> will be the <strong>THIRD</strong> item in the array.</p>\n\n<p>For an array of 5 elements, passing an <code>initialValue</code> argument makes it five loops (each loop for each item), but not giving an <code>initialValue</code> argument makes it four loops (first loop for the first two items, second loop for the third item, and so on)</p>\n\n<h2>\n  \n  \n  Without the Reduce Method\n</h2>\n\n<p>The <code>reduce</code> method is an abstracted function that does an iterative-loop process to reduce an array. Here's an example, imitating the <code>reduce</code> method.</p>\n\n<p>First, with an initial value:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">initialValue</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>\n<span class=\"kd\">let</span> <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">initialValue</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">array</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">previousValue</span> <span class=\"o\">=</span> <span class=\"nx\">finalValue</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">currentValue</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span>\n\n  <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">previousValue</span> <span class=\"o\">+</span> <span class=\"nx\">currentValue</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">finalValue</span><span class=\"p\">)</span>\n<span class=\"c1\">// 20</span>\n</code></pre>\n\n</div>\n\n\n\n<p>And without an initial value:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">array</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">previousValue</span> <span class=\"o\">=</span> <span class=\"nx\">finalValue</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">currentValue</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">]</span>\n\n  <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">previousValue</span> <span class=\"o\">+</span> <span class=\"nx\">currentValue</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">finalValue</span><span class=\"p\">)</span>\n<span class=\"c1\">// 15</span>\n</code></pre>\n\n</div>\n\n\n\n<p>The loop starts from the <code>1</code> index because the <code>0</code> indexed value has already been used as the initial value.</p>\n\n<p>This loop approach is similar to what the <code>reduce</code> method does in the background. It loops through each item in an iterative manner by feeding the following item with the value from the previous loop. The next item can use the previous value to do anything--add, multiply, concatenate to form an array, e.t.c</p>\n\n<h2>\n  \n  \n  With the Reduce Method\n</h2>\n\n<p>Here's how you achieve the previous result with <code>reduce</code>:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">.</span><span class=\"nx\">reduce</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">previousValue</span><span class=\"p\">,</span> <span class=\"nx\">currentValue</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"nx\">previousValue</span> <span class=\"o\">+</span> <span class=\"nx\">currentValue</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">finalValue</span><span class=\"p\">)</span>\n</code></pre>\n\n</div>\n\n\n\n<p>I did not pass an <code>initialValue</code>, so it only does four loops with the first item as the starting value.</p>\n\n<p>Using the <code>reduce</code> method makes things easier to read.</p>\n\n<p>You want to use this method to reduce an array of values to a single value. Remember that this single value can still be an array, or it could be an object.</p>\n\n<p>Here's an array single value example:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">const</span> <span class=\"nx\">array</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">]</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">finalValue</span> <span class=\"o\">=</span> <span class=\"nx\">array</span><span class=\"p\">.</span><span class=\"nx\">reduce</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">previousValue</span><span class=\"p\">,</span> <span class=\"nx\">currentValue</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"nx\">currentValue</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">].</span><span class=\"nx\">concat</span><span class=\"p\">(</span><span class=\"nx\">previousValue</span><span class=\"p\">)</span>\n<span class=\"p\">})</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">finalValue</span><span class=\"p\">)</span>\n<span class=\"c1\">// [ 10, 8, 6, 4, 1 ]</span>\n</code></pre>\n\n</div>\n\n\n\n<p>For the return value, I returned an array with the current value multiplied by 2, then concatenated it with the previous value, and you can see the single array result.</p>\n\n"
        ],
        "category": [
            "javascript"
        ],
        "plainDescription": "This article is the tenth of the Array Method Series\n[https://dev.to/dillionmegida/series/17614]. In this article, I will explain\nwhat the reduce Array method is.\n\n\nWHAT IS THE REDUCE METHOD?\n\nThe red...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "The Best Figma Plugins to Create & Manage Design Systems"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/figma-design-system-plugins/?utm_source=rss\"\n              title=\"The Best Figma Plugins to Create & Manage Design Systems\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Figma is a powerful tool for creating design systems. Learn about the best Figma plugins for design systems and managing complex projects.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/figma-design-system-plugins/?utm_source=rss\">The Best Figma Plugins to Create & Manage Design Systems</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/figma-design-system-plugins/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259096",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design & UX",
            "Web"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Fri, 25 Mar 2022 18:59:13 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1648239117featured.jpg]\n[https://www.sitepoint.com/figma-design-system-plugins/?utm_source=rss] Figma is\na powerful tool for creating design s...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Barry Pollard"
        ],
        "title": [
            "Performance Signals For Customizing Website UX"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/03/signals-customizing-website-user-experience/"
        ],
        "pubDate": [
            "Mon, 07 Mar 2022 10:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/03/signals-customizing-website-user-experience/"
        ],
        "description": [
            "Using signals to deliver less, or different, content is a form of progressive enhancement (or graceful degradation depending on how you look at it), whereby extraneous content is only loaded when necessary, but the core functionality of the website still works. In this article, we’ll look at some of the signals that can be used for this."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/03/signals-customizing-website-user-experience/\" />\n              <title>Performance Signals For Customizing Website UX</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Performance Signals For Customizing Website UX</h1>\n                  \n                    \n                    <address>Barry Pollard</address>\n                  \n                  <time datetime=\"2022-03-07T10:30:00&#43;00:00\" class=\"op-published\">2022-03-07T10:30:00+00:00</time>\n                  <time datetime=\"2022-03-07T10:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>In <a href=\"https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine/\">my last article</a>, I suggested using the SaveData API to deliver a different, more performant, experience to users that expressed that desire. This hopefully leads to a greater experience for all users. In this article, I want to spend a bit more time on this, and also look at other signals we can similarly use to help us make decisions on what to load on our websites.</p>\n\n<p>That’s not to say the extraneous content is pointless &mdash; enhanced design and user interfaces can have an important impact on the brand of a website, and delightful little extras can really impact your users&rsquo; relationship with your site. It’s when the cost of those “extras” starts to negatively impact your user’s experience of the site, then you should consider how essential they are, and if they can be turned off for some users.</p>\n\n<h2 id=\"save-data-api\">Save Data API</h2>\n\n<p>Let’s have a quick recap on the Save Data API. That user preference is available in two (hopefully soon to be three!) ways:</p>\n\n<ol>\n<li>A <code>Save-Data</code> header is sent on each HTTP request.<br />\nThis allows dynamic backends to change the HTML returned.</li>\n<li>The <code>NetworkInformation.saveData</code> JavaScript API.<br />\nThis allows client-side JavaScript to check this and act accordingly.</li>\n<li>The upcoming <code>prefers-reduced-data</code> media query, which allows CSS to set different options depending on this setting.<br />\nThis is available behind a flag in Chrome, but not yet on by default while it finishes standardization.</li>\n</ol>\n\n<p><strong>Note:</strong> <em>At the time of writing, the Save Data API, and in fact all the options we’ll talk about in this article, are only available in Chromium-based browsers (Chrome, Edge, Opera…etc.). This is a bit of a shame, as I believe they are useful for websites. If you believe the same, then let the other browsers know you want them to support this too. All of these are on various standard tracks rather than being proprietary Chrome APIs, so they can be implemented by other browsers (Safari and Firefox) if the demand is there. However, later in this article, I’ll explain why it’s perhaps more important that they are supported in Chromium-based browsers &mdash; and Chrome in particular.</em></p>\n\n<p>Perhaps confusingly, iOS does have a <strong>Low Data mode</strong>, though that is used by iOS itself to reduce background tasks using data, and it is not exposed to the browser to allow websites to take advantage of that (even for Chrome on iOS which is more a skin on top of Safari than the full Chrome browser).</p>\n\n<p>Websites can act on the Save Data preference to give a lighter website to… well.. . save the user’s data! This is helpful for those on poor or expensive networks, so they don’t have to pay an exorbitant cost just to visit your website. This setting is used by users in poorer countries but is also used by those with a capped data plan that might be running out <a href=\"https://twitter.com/yoavweiss/status/1195036487538003968?s=20&amp;t=IPXqYuqciWBXGDi1GAXZ3g\">just before your monthly cap renewal</a>, or those traveling where roaming charges can be a lot more expensive than at home.</p>\n\n<h2 id=\"and-is-it-used\">And Is It Used?</h2>\n\n<p>Again, <a href=\"https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine/#savedata-and-prefers-reduced-data\">I talked about this that previous article</a>, and the answer is a resounding yes! Approximately two-thirds of Indian mobile Chrome users of Smashing Magazine have this setting turned on, for example. Expanding that to look at the top-10 mobile users that support Save Data, by volume for this site, we see the following:</p>\n\n<table>\n    <thead>\n        <tr>\n            <th>Country</th>\n            <th>% Data Saver</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>India</td>\n            <td>63%</td>\n        </tr>\n    <tr>\n            <td>USA</td>\n            <td>10%</td>\n        </tr>\n    <tr>\n            <td>Philippines</td>\n            <td>49%</td>\n        </tr>\n    <tr>\n            <td>China</td>\n            <td>0%</td>\n        </tr>\n    <tr>\n            <td>UK</td>\n            <td>35%</td>\n        </tr>\n    <tr>\n            <td>Nigeria</td>\n            <td>55%</td>\n        </tr>\n    <tr>\n            <td>Russia</td>\n            <td>55%</td>\n        </tr>\n    <tr>\n            <td>Canada</td>\n            <td>38%</td>\n        </tr>\n    <tr>\n            <td>Germany</td>\n            <td>35%</td>\n        </tr>\n        <tr>\n            <td>Pakistan</td>\n            <td>51%</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>Now, there are a few things to note about this. First of all, it’s, perhaps, no surprise to see high usage of this setting for what are often considered “poorer” countries &mdash; over 50% of mobile users having this setting seems common. What’s, perhaps, more surprising is the relatively high usage of a third of users using this in the likes of the UK, Germany, and France. In short, this is not a niche setting.</p>\n\n<p>I’d love to know why China is so reluctant to use this if any readers know. Weirdly, they report as a range of browsers in our analytics including the Android WebView, Chrome and Safari (despite it&rsquo;s not supporting this!). Perhaps, these are imitation phones or other customized builds that do not expose this setting to the end-users to enable this. If you have any other theories or information on this &mdash; I’d love to know, so please drop a message in the comments below.</p>\n\n<p>However, the above table is not actually representative of total traffic, and that’s another point to note about this data. If we compare the top-10 countries that visit SmashingMagazine.com by number of users across four different segments, we see the following:</p>\n\n<table class=\"tablesaw break-out\">\n    <thead>\n        <tr>\n            <th></th>\n            <th>All users</th>\n      <th>Mobile user</th>\n      <th>Mobile SaveData support</th>\n      <th>Mobile SaveData on</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1</td>\n            <td>USA</td>\n      <td>USA</td>\n      <td>India</td>\n      <td>India</td>\n        </tr>\n    <tr>\n            <td>2</td>\n            <td>India</td>\n      <td>India</td>\n      <td>USA</td>\n      <td>Philippines</td>\n        </tr>\n    <tr>\n            <td>3</td>\n            <td>UK</td>\n      <td>UK</td>\n      <td>Philippines</td>\n      <td>Nigeria</td>\n        </tr>\n    <tr>\n            <td>4</td>\n            <td>Canada</td>\n      <td>Germany</td>\n      <td>China</td>\n      <td>UK</td>\n        </tr>\n    <tr>\n            <td>5</td>\n            <td>Germany</td>\n      <td>Philippines</td>\n      <td>UK</td>\n      <td>Russia</td>\n        </tr>\n    <tr>\n            <td>6</td>\n            <td>France</td>\n      <td>Canada</td>\n      <td>Nigeria</td>\n      <td>USA</td>\n        </tr>\n    <tr>\n            <td>7</td>\n            <td>Russia</td>\n      <td>China</td>\n      <td>Russia</td>\n      <td>Indonesia</td>\n        </tr>\n    <tr>\n            <td>8</td>\n            <td>Australia</td>\n      <td>France</td>\n      <td>Canada</td>\n      <td>Pakistan</td>\n        </tr>\n    <tr>\n            <td>9</td>\n            <td>Philippines</td>\n      <td>Nigeria</td>\n      <td>Germany</td>\n      <td>Brazil</td>\n        </tr>\n    <tr>\n            <td>10</td>\n            <td>Netherlands</td>\n      <td>Russia</td>\n      <td>Pakistan</td>\n      <td>Canada</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>All users, and mobile users are not too dissimilar. Though some of the “poorer” countries like the Philippines and Nigeria are higher up in the table on mobile (desktop support of this site seems higher in Western countries).</p>\n\n<p>However, looking at those with Save Data support (the same as the first table I showed), it is a completely different view; with India overtaking the USA at the top spot, and the Philippines shooting right up to number three. And finally looking at those with Save Data actually turned on, it’s an unrecognizable ordering compared to the first column.</p>\n\n<blockquote class=\"pull-quote\">\n  <p>\n    <a class=\"pull-quote__link\" aria-label=\"Share on Twitter\" href=\"https://twitter.com/share?text=%0a%20Using%20signals%20like%20Save%20Data%20allows%20you%20to%20help%20those%20users%20that%20need%20help%20the%20most,%20compared%20to%20traditional%20analytics%20of%20looking%20at%20all%20users%20or%20even%20segmenting%20by%20device%20type.%0a&url=https://smashingmagazine.com%2f2022%2f03%2fsignals-customizing-website-user-experience%2f\">\n      \n Using signals like Save Data allows you to help those users that need help the most, compared to traditional analytics of looking at all users or even segmenting by device type.\n\n    </a>\n  </p>\n  <div class=\"pull-quote__quotation\">\n    <div class=\"pull-quote__bg\">\n      <span class=\"pull-quote__symbol\">“</span></div>\n  </div>\n</blockquote>\n\n<p>I mentioned earlier that Save Data is only available in Chromium-based browsers, meaning we’re ignoring Safari users (a sizable proportion of mobile users), and Firefox. However, countless research (including the stats for our own site here, and <a href=\"https://infrequently.org/2021/03/the-performance-inequality-gap/\">others by the likes of Alex Russell</a>) has shown that <strong>Android devices are the platform of choice for poorer countries with slower networks</strong>. This is hardly surprising given the cost difference between Android and iOS devices, but using the signals offered only to those devices doesn&rsquo;t mean neglecting half of your user base, but instead concentrating on the users that need the most help.</p>\n\n<p>Additionally, as I mentioned in the previous article, the <strong>Core Web Vitals</strong> initiative being measured only in Chrome browsers (and not other Chromium browsers like Edge or Opera) is putting a spotlight on these users, while at the same time those are the users supporting this API and others to allow you to address them.</p>\n\n<p>So, while I wish there wasn’t this inequality in this world, and while I wish all browsers would support these options better, I still believe that using these options to customize the delivery better is the right thing to do, and the fact that they are only available in Chromium-based browsers at the moment is not a reason to ignore these options.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Web forms</strong> are at the center of every meaningful interaction, so they’re worth getting a firm handle on. Meet Adam Silver&rsquo;s <strong><a href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\">Form Design Patterns</a></strong>, a practical guide to designing and building forms for the web.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64e57b41-b7f1-4ae3-886a-806cce580ef9/form-design-patterns-shop-image-1-1.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51e0f837-d85d-4b28-bfab-1c9a47f0ce33/form-design-patterns-shop-image.png\"\n    alt=\"Feature Panel\"\n    width=\"481\"\n    height=\"698\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"how-to-act-upon-save-data\">How To Act Upon Save Data</h2>\n\n<p>How exactly websites use this information is entirely up to the website. In the past, Chrome used to perform changes to the website by proxying requests via their servers (similar to how Opera Mini works), but doing that is usually frowned upon these days. With the increase in the use of HTTPS, site content is more secured in part to avoid any interference (Chrome never performed these automatic optimizations on HTTPS sites, though as the browser they could in theory). Chrome will soon also be <a href=\"https://support.google.com/chrome/thread/151853370/sunsetting-chrome-lite-mode-in-m100-and-older?hl=en\">sunsetting this automatic altering of content on HTTP sites</a>. So, now it’s down to websites to do change as they see fit if they want to act upon this user signal.</p>\n\n<p>Websites should <strong>still deliver the core experience</strong> of the website, but drop optional extras. For Smashing Magazine, that involved dropping some of our web fonts. For others, it might involve using smaller images or not loading videos by default. Of course, for web performance reasons you should always use the smallest images you can, but in these days of high-density mobile screens, many prefer to give high-quality images to take advantage of those beautiful screens. If a user has indicated that its preference is to save data, you could use that as a signal to drop down a level there, even if it’s not quite as nice as a picture, but still gets the message across.</p>\n\n<p><a href=\"https://twitter.com/TimVereecke\">Tim Vereecke</a> gave a fantastic talk on some of the <a href=\"https://ldnwebperf.org/sessions/data-shaver-strategies/\">Data S(h)aver strategies</a> he uses on his site for users with this Save Data preference, including showing fewer articles by default, loading less on infinite scroll pages when reaching the bottom of the page, removing icon fonts, or reducing the number of ads, not auto-playing videos and loads more tips and tricks, some of which he’s <a href=\"https://calendar.perfplanet.com/2018/data-shaver-strategies/\">summarised in an accompanying article</a>.</p>\n\n<p>One important point that Tim noted is using Save Data might not always improve performance. Some of the techniques he uses like loading less or turning off prefetching of likely future pages will result in data saving, but with the downside of loading taking a bit longer if users do want to see that content. In general, however, reducing data usually results in web performance gains.</p>\n\n<h2 id=\"is-save-data-the-only-option\">Is Save Data The Only Option?</h2>\n\n<p>Save Data is a great API in my opinion, and I wish more sites used it, and more browsers supported it! The fact that the user has explicitly asked sites to send less data means doing that is acting upon their wishes.</p>\n\n<p>The downside of Save Data, however, is that users have to know to enable this. While many Smashing Magazine readers may be more technical and may know about this option or may be comfortable delving into the settings of their browsers, others may not. Additionally, with the aforementioned change of Chrome removing the Save Data browser option, and <a href=\"https://twitter.com/addyosmani/status/1487519616058331136?s=21\">perhaps switching to using the OS-level option</a>, we may see some changes in its usage (for better or worse!).</p>\n\n<p>So, what can we do to try to help users who don’t have this set? Well, there are a few more signals we can use, as they also might indicate users who might struggle with the full experience of the website. However, as we are making that decision for them (unlike Save Data which is an explicit user choice), <strong>we should tread carefully</strong> with any assumptions we make. We may even want to highlight to users that they are getting a different experience, and offer them a way of opting out of this. Perhaps this is a best practice even for those using Save Data, as perhaps they’re unaware or had forgotten that they turned this setting on, and so are getting a different experience.</p>\n\n<p>In a similar vein, it’s also possible to offer a Save Data-like experience to all users (even in browsers and operating systems that don’t support it) with a front end-setting and then perhaps saving this value to a cookie and acting upon that (another trick Tim mentioned in his talk).</p>\n\n<p>For the remainder of this article, I’d like to look at alternatives to Save Data that you can also act upon to customize your sites. In my opinion, these should be used in addition to Save Data, to squeeze a little more on top.</p>\n\n<h2 id=\"other-user-preference-signals\">Other User Preference Signals</h2>\n\n<p>First up we will look at preferences that, like Save Data, a user can turn on and off. A new breed of user preference CSS media queries have been launched recently, which are being standardized in the <a href=\"https://drafts.csswg.org/mediaqueries-5/#mf-user-preferences\">Media Queries Level 5 draft specification</a> and many are already available in browsers. These allow web developers to change their websites, based on various user preferences:</p>\n\n<ul>\n<li><code>prefers-reduced-motion</code><br />\nThis indicates the user would prefer fewer motions, perhaps due to vestibular motion disorders. <a href=\"https://twitter.com/argyleink/status/1469738251300843524?s=20&amp;t=yLKMDMU-iME_wF2zotiBNA\">Adam Argyle has made a point of highlighting</a> that reduced motion != no motion. Just tone it down a bit. If you were acting on the save data option, you wouldn’t hold back <em>all</em> data!</li>\n<li><code>prefers-reduced-transparency</code><br />\nTo aid readability for those that find it difficult to distinguish content with translucent backgrounds.</li>\n<li><code>prefers-contrast</code><br />\nSimilar to the above, this can be used as a request to increase the contrast between elements.</li>\n<li><code>forced-colors</code><br />\nThis indicates the user agent is using a reduced color pallet, typically for accessibility reasons, such as Windows High Contrast mode.</li>\n<li><code>prefers-color-scheme</code><br />\nThis can be set to <code>light</code> or <code>dark</code> to indicate the user&rsquo;s preferred color scheme.</li>\n<li><code>prefers-reduced-data</code><br />\nThe CSS media query version of Save Data mentioned above.</li>\n</ul>\n\n<p>Only some of these may have a different impact on web performance, which is my area of expertise, and the original starting point for this article with Save Data. However, they are important <strong>user preferences</strong> &mdash; particularly when considering the accessibility implications for motion sensitivity, and vision issues covered by the transparency, contrast, and even color scheme options. For more information, check out <a href=\"https://www.smashingmagazine.com/2021/10/respecting-users-motion-preferences/\">a previous Smashing Magazine article deep-diving into <code>prefers-reduce-motion</code></a> &mdash; the oldest and most well supported of these options.</p>\n\n<h2 id=\"network-signals\">Network Signals</h2>\n\n<p>Returning more to items to optimize web performance, the <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Effective_connection_type\">Effective Connection Type API</a> is a property of the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Network_Information_API\">Network Information API</a> and can be queried in JavaScript with the following code (again only in Chromium browsers for now):</p>\n\n<pre><code class=\"language-javascript\">navigator.connection.effectiveType;</code></pre>\n\n<p>This then returns one of four string values (<code>4g</code>, <code>3g</code>, <code>2g</code>, or <code>slow-2g</code>) &mdash; the theory being that you can reduce the network needs when the connection is slower and so give a faster experience even to those on slower networks. There are a few downsides to ECT. The main one is that the definitions of the 4 types are all fixed, and based on quite old network data. The result is that nearly all users now fall into the <code>4g</code> category, a few into the <code>3g</code>, and very few into the <code>2g</code> or <code>slow-2g</code> categories.</p>\n\n<p>Returning to our Indian mobile users, who <a href=\"https://www.smashingmagazine.com/2021/12/core-web-vitals-case-study-smashing-magazine/#the-india-connection\">we saw in the last article were getting much worse experiences</a>, 84.2% are reported as <code>4g</code>, 15.1% <code>3g</code>, 0.4% <code>2g</code>, and 0.3% <code>slow-2g</code>. It’s great that technology has advanced so that this is the case, but our dependency on it has grown too, and it does mean that its use as a differentiator of “slower” users is already limited and becoming more so as time goes on. Being able to identify the 16% of slowest users is not to be sniffed at, but it’s a far cry from the 63% of users asking us to Save Data in that region!</p>\n\n<p>There are other options available in the <code>navigator.connection</code> API, but without the simplicity of a small number of categories:</p>\n\n<pre><code class=\"language-javascript\">navigator.connection.rtt;\nnavigator.connection.downlink;</code></pre>\n\n<p><strong>Note</strong>: <em>For privacy reasons, these return a rounded number, rather than a precise number, to avoid them being used as a fingerprinting vector. This is why we can’t have nice things. Still, for the non-tracking purposes, an imprecise number is all we need anyway.</em></p>\n\n<p>The other downside of these APIs is that they are only available as a JavaScript API (where it’s thankfully very easy to use), or as a <strong>Client Hint HTTP Header</strong> (where it’s not as easy to use).</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"client-hints-http-headers\">Client Hints HTTP Headers</h2>\n\n<p>The <code>Save-Data</code> HTTP header is a simple HTTP Header sent for all requests when a user has this turned on. This makes it nice and easy for backends to use this. However, we can’t get other information like ECT in similar HTTP headers without severely bulking up all requests for web browsing when the vast majority of websites will not use it. It also introduces privacy risks by making available more than we strictly need about our users.</p>\n\n<p>Client Hints is a way to work around those limitations, by not sending any of this extra information by default, and instead of having websites “opting in” to this information when they will make use of this. They do this by letting browsers know, with the <code>Accept CH</code> HTTP Header, what Client Hint headers the page will make use of. For example, in the response to the initial request, we could include this HTTP Header:</p>\n\n<pre><code class=\"language-javascript\">accept-ch: ect, rtt, downlink</code></pre>\n\n<p>This can also be included in a meta element in the page contents:</p>\n\n<pre><code class=\"language-javascript\">&lt;meta http-equiv=\"Accept-CH\" content=\"ECT, RTT, Downlink\"&gt;</code></pre>\n\n<p>This then means that any future requests to this website, will include those Client Hint HTTP Headers, as well as the usual HTTP Headers:</p>\n\n<pre><code class=\"language-javascript\">downlink: 10\nect: 4g\nrtt: 50</code></pre>\n\n<p><strong>Important!</strong> <em>If making use of Client Hints and returning different results for the same URL based on these, do remember to include the client hint headers you are altering content based upon, in your <code>Vary</code> header, so any caches are aware of this and won’t serve the cached page for future visits unless they also have the same client hint headers set.</em></p>\n\n<p>You can view all the client hints available for your browser at <a href=\"https://browserleaks.com/client-hints\">https://browserleaks.com/client-hints</a> (hint: use a Chromium-based browser to view this website or you won’t see much!). This website opts into all the known Client Hints to show the potential information leaked by your browser but each site should only enable the hints they will use. Client Hints are also by default only sent on requests to the original origin and not to third-party requests loaded by the page (though <a href=\"https://github.com/w3c/webappsec-permissions-policy/blob/main/permissions-policy-client-hints.md\">this can be enabled through the use of Permission Policy header</a>).</p>\n\n<p>The main downside of this two-step process, which I agree is absolutely necessary for the reasons given above, is the very first request to a website does not get these client hints and this is in all likelihood the one that would benefit most from savings based on these client hints.</p>\n\n<p>The BrowserLeaks demo above actually cheats, by loading that data in an iframe rather than in the main document, to get around this. I wouldn’t recommend that option for most sites meaning you are either left with using the JavaScript APIs instead, only optimizing for non-first page visits, or using the Client Hint information independent requests (Media, CSS or JavaScript files). That’s not to say using them independent requests is not powerful, and <a href=\"https://www.smashingmagazine.com/2016/01/leaner-responsive-images-client-hints/\">is particularly useful for image CDNs</a>, but the fastest website is one that can start rendering all the critical content from the first response.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"device-capability-signals\">Device Capability Signals</h2>\n\n<p>Moving on from User and Network signals, we have the final category of device signals. These APIs explain the capabilities of the device, rather than the connection, including:</p>\n\n<table class=\"tablesaw break-out\">\n    <thead>\n        <tr>\n            <th>API</th>\n            <th>JavaScript API</th>\n            <th>Client Hint</th>\n            <th>Example Output</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>Number of processors</td>\n            <td><code>navigator.hardwareConcurrency</code></td>\n            <td><em>N/A</em></td>\n            <td>4</td>\n        </tr>\n        <tr>\n            <td>Device Pixel Ratio</td>\n            <td><code>devicePixelRatio</code></td>\n            <td><code>Sec-CH-DPR, DPR</code></td>\n            <td>3</td>\n        </tr>\n        <tr>\n            <td>Device Memory</td>\n            <td><code>navigator.deviceMemory</code></td>\n            <td><code>Sec-CH-Device-Memory</code>, <code>Device-Memory</code></td>\n            <td>8</td>\n        </tr>\n    </tbody>\n</table>\n\n<p>I’m not entirely convinced the first is that useful as nearly every device has multiple processors now, but it’s usually the power of those cores that are more important than the number, however, the next two have a lot of potential for optimizing for.</p>\n\n<p>DPR has <a href=\"https://www.smashingmagazine.com/2014/05/responsive-images-done-right-guide-picture-srcset/\">long been used to serve responsive images</a> - usually through <code>srcset</code> or media queries than above APIs, but the JavaScript and Client Hint header options have been utilized less by websites (though many image CDNs support sending different images based on Client Hints). Utilizing them more could lead to valuable optimizations for sites &mdash; beyond the static media use cases we’ve typically seen up until now.</p>\n\n<p>The one that I think could really be used as a performance indicator is Device Memory. Unlike the number of processors, or DPR, the amount of RAM a device has is often a great indicator as to whether it’s a “high end” device, or a cheaper, more limited device. I was encouraged to investigate how this correlated to Core Web Vitals by <a href=\"https://twitter.com/gilberto_cocchi\">Gilberto Cocchi</a> after my last article and the results are very interesting as shown in the graphs below. These were created with a customized version of the <a href=\"https://github.com/GoogleChromeLabs/web-vitals-report\">Web Vitals Report</a>, altered to allow reporting on 4 dimensions.</p>\n\n<p><strong>Largest Contentful Paint (LCP)</strong> showed a clear correlation between poor LCP and RAM, with the 1 GB and 2 GB RAM p75 scores being red and amber, but even though the higher RAM both had green scores, there was still a clear and noticeable difference, particularly shown on the graph.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"375\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of Web Vitals Report showing Mobile 1GB RAM p75 value has red LCP as 4843 milliseconds is greater than the 4-second threshold, Mobile 2GB RAM has Amber LCP as 3277 ms is greater than the 2.5-second threshold, and Mobile 4GB and 8GB RAM both have Green LCP as 2318 and 1830 ms respectively are both under 2.5 seconds threshold. There is a time-series graph beneath showing the values in each category are always greater than the next category.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Web Vitals Report shows a clear correlation between LCP and Device Memory. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/dade0928-b65b-4bcf-831a-dd5da4c8836a/1-signals-customizing-website-user-experience.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Whether this is directly caused by the lack of RAM, or that RAM is just a proxy measure of other factors (high end, versus low-end devices, device age, networks those devices are run on…etc.), doesn’t really matter at the end of the day. If it’s a good proxy that the experience is likely poorer for those users, then we can use that as a signal to optimize our site for them.</p>\n\n<p><strong>Cumulative Layout Shift (CLS)</strong> has some correlation, but even at the lowest memory is still showing green:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"380\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of Web Vitals Report showing Mobile 1GB, 2GB, 4GB and 8GB RAM all have Green CLS as the p75 values (0.072, 0.046, 0.004, and 0) are all below the green threshold of 0.1. There is a time series graph beneath showing the values in each category are usually greater than the next category but not always.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Web Vitals Report shows a no real correlation between CLS and Device Memory. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e48df14d-c473-4032-85c8-612f355d14c4/2-signals-customizing-website-user-experience.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>This is perhaps not so surprising since CLS can’t really be countered by the power of devices or networks. If a shift is going to happen the browser will notice — even if it happens so fast, that the user barely noticed.</p>\n\n<p>Interestingly, there’s much less correlation for <strong>First Input Delay (FID)</strong>. Note also that FID is often not measured, so can result in breaks in the chart when there are few users in that category &mdash; as shown by the 1GB devices series which has few data points.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"380\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Screenshot of Web Vitals Report showing Mobile 1GB has amber FID at 143 ms at p75 while 2GB, 4GB and 8GB RAM all have Green FIX as the p75 values (40, 23, and 17) are all below the threshold of 100ms. There is a time series graph beneath showing the values in each category are mixed over time with no clear correlation.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Web Vitals Report shows a no real correlation between FID and Device Memory. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b2a35504-b559-48b9-9f35-dd0246a31918/3-signals-customizing-website-user-experience.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>To be honest, I would have expected Device Memory to have a much bigger impact on FID (whether directly, or indirectly for the reasons as discussed in the LCP section above), and again perhaps reflects that this metric isn’t actually that difficult to pass for many sites, something <a href=\"https://web.dev/better-responsiveness-metric/\">the Chrome team is well aware of and are working on</a>.</p>\n\n<p>For privacy reasons, device memory is basically only reported as one of a capped, fixed set of floating-point numbers: 0.25, 0.5, 1, 2, 4, 8, so even if you have 32 GB of RAM that will be reported as 8. But again, that lack of precision is fine as we’re probably only interested in devices with 2 GB of RAM or less, based on the above stats &mdash; though best advice would be to measure your own web visitors and based your information on that. I just hope over time, as technology advances, we’re not put into a similar situation as ECT where everything migrates to the top category, making the signal less useful. On the plus side, this should be easier to change just by increasing the upper capping amount.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"measure-your-users\">Measure Your Users</h2>\n\n<p>The last section, on correlating Device Memory to Core Web Vitals, brings about an important topic: do not just take for granted that any of these options will prove useful for your site. Instead, <strong>measure your user population</strong> to see which of these options will be useful for your users.</p>\n\n<p>This could be as simple as logging the values for these options in a Google Analytics Custom Dimension. That’s what we did here at Smashing for a number of them, and how we were able to create the graphs above to see the correlation as we were then able to slice and dice these measures against other data in Google Analytics (including the Core Web Vitals, we already logged in Google Analytics using the <a href=\"https://github.com/GoogleChrome/web-vitals\">web-vitals library</a>).</p>\n\n<p>Alternatively, if you already use one of the many RUM solutions out there some, or all of these may already be being measured and you may already have the data to help start to make decisions as to whether to use these options or not. And if your RUM library of choice is not tracking these metrics, then maybe suggest that they do to benefit you and their other users.</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>I hope this article will convince you to consider these options for your own sites. Many of these options are easy to use if you know about them and can make a real difference to the users struggling the most. They also are not just for complicated web applications but can be used even on static article websites.</p>\n\n<p>I’ve already mentioned that this site, smashingmagazine.com makes use of the Save Data API to avoid loading web fonts. Additionally, it uses the <a href=\"https://instant.page/\">instant.page</a> library to prefetch articles on mouse hover &mdash; except for slow ECTs or when a user has specified the Save Data option.</p>\n\n<p>The <a href=\"https://almanac.httparchive.org/\">Web Almanac</a> (another site I work on), is another seemingly simple article website, where each chapter makes use of lots of graphs and other figures. These are initially loaded as lazy-loaded images and then upgraded to Google Sheet embeds, which have a handy hover effect to see the data points. The Google Sheet embeds are actually a little slow and resource-intensive, so <a href=\"https://almanac.httparchive.org/static/js/almanac.js\">this upgrade only happens for users that are likely to benefit from it</a>: those on Desktop viewport widths, when Save Data is not turned off, when we’re on a fast connection using ECT, and when a high-resolution canvas is supported (not covered in this article, but old iPads did not support this but claimed to).</p>\n\n<p>I encourage you to consider what parts of your website you should consider limiting to some users. Let us know in the comments how you’re using them.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Using signals to deliver less, or different, content is a form of progressive\nenhancement (or graceful degradation depending on how you look at it), whereby\nextraneous content is only loaded when nece...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "A Practical Guide to Creating Reusable React Components"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss\"\n              title=\"A Practical Guide to Creating Reusable React Components\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components.jpg\"\n        alt=\"A Practical Guide to Creating Reusable React Components\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            When's a good time to create reusable React components? Learn three key indicators for when they're needed, and three popular uses cases.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss\">A Practical Guide to Creating Reusable React Components</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/creating-reusable-react-components/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203273",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React"
        ],
        "dc:creator": [
            "Hanbyeol (Benny) Joo"
        ],
        "pubDate": [
            "Mon, 06 Sep 2021 09:00:04 GMT"
        ],
        "plainDescription": "A Practical Guide to Creating Reusable React Components\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630652265reusable-react-components.jpg]\n[https://www.sitepoint.com/creating-reusable-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Learn Quickly: 10 Proven Methods for Mastering Any Skill"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss\"\n              title=\"How to Learn Quickly: 10 Proven Methods for Mastering Any Skill\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly.jpg\"\n        alt=\"How to Learn Quickly: 10 Proven Methods for Mastering Any Skill\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Discover how to learn quickly, master any skill, and supercharge your personal growth with these ten simple, proven learning techniques.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss\">How to Learn Quickly: 10 Proven Methods for Mastering Any Skill</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-learn-quickly/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=205155",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Matthias Frank"
        ],
        "pubDate": [
            "Mon, 20 Sep 2021 02:00:09 GMT"
        ],
        "plainDescription": "How to Learn Quickly: 10 Proven Methods for Mastering Any Skill\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631777774learn-quickly.jpg]\n[https://www.sitepoint.com/how-to-learn-quickly/?...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "What Is a Unique Selling Proposition & How Do I Create One?"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/unique-selling-proposition/?utm_source=rss\"\n              title=\"What Is a Unique Selling Proposition & How Do I Create One?\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3.jpg\"\n        alt=\"Unique Selling Proposition\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Wondering how to create a unique selling proposition for your business? This guide will walk you through the what, why, and how of USPs.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/unique-selling-proposition/?utm_source=rss\">What Is a Unique Selling Proposition & How Do I Create One?</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/unique-selling-proposition/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258939",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Content Marketing",
            "Entrepreneur",
            "Marketing"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Fri, 18 Mar 2022 09:17:40 GMT"
        ],
        "plainDescription": "Unique Selling Proposition\n[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647605742USP3.jpg]\n[https://www.sitepoint.com/unique-selling-proposition/?utm_source=rss] Wondering\nhow to create ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #494"
        ],
        "link": [
            "https://css-weekly.com/issue-494/"
        ],
        "pubDate": [
            "Tue, 01 Mar 2022 15:34:42 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-494/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to optimize full-screen images, how to create an auto-filling grid, how to effectively animate newly added DOM elements, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://engineering.q42.nl/optimizing-full-screen-images?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Big Images, Blazingly Fast</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://engineering.q42.nl/optimizing-full-screen-images?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/optimizing-full-screen-images.jpg\" alt=\"Big Images, Blazingly Fast\" /></a>\n\t\t\t\t\t\t<p>Wouter Deenik and Erwin Verbruggen share an in-depth article on how their team optimized full-screen images for Rijksmuseum’s new story platform.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://engineering.q42.nl/optimizing-full-screen-images?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">An Auto-Filling CSS Grid With Max Columns of a Minimum Size</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/auto-filling-css-grid-with-max-columns.jpg\" alt=\"An Auto-Filling CSS Grid With Max Columns of a Minimum Size\" /></a>\n\t\t\t\t\t\t<p>Mike Herchel explains how to create an auto-filling grid.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/imagekit-css-image-effects\">CSS Image effects with ImageKit</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/imagekit-css-image-effects\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/creating-css-image-effects.png\" alt=\"CSS Image effects with ImageKit\" /></a>\n\t\t\t\t\t\t<p>Learn to create CSS image effects easily with simple techniques and find out what ImageKit&#8217;s advantages are over CSS to achieve the same effects.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/imagekit-css-image-effects\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://thinkdobecreate.com/articles/css-animating-newly-added-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Quick Tip: Animating In a Newly Added Element</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stephanie Eckles demonstrates how to effectively animate a newly added DOM element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://thinkdobecreate.com/articles/css-animating-newly-added-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.nicchan.me/blog/a-use-case-for-will-change/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">My White Whale: a Use Case for will-change</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Nic Chan shares how she fixed a rendering issue using <code>will-change</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.nicchan.me/blog/a-use-case-for-will-change/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/web-component-pseudo-classes-and-pseudo-elements/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Web Component Pseudo-Classes and Pseudo-Elements are Easier Than You Think</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>John Rhea closely examines <code>::part</code> and <code>::slotted</code> pseudo-elements, and the <code>:defined</code>, <code>:host</code>, and <code>:host-context</code> pseudo-classes.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/web-component-pseudo-classes-and-pseudo-elements/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/when-to-avoid-css-text-decoration-shorthand/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">When to Avoid the text-decoration Shorthand Property</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Šime Vidas reminds you that setting a shorthand property like &#8220;<code>text-decoration: underline</code>&#8221; reinitializes any missing parts in the value.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/when-to-avoid-css-text-decoration-shorthand/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.jim-nielsen.com/2022/inspecting-web-views-in-macos/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Inspecting Web Views in macOS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jim Nielsen shows how to inspect web views native macOS apps.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.jim-nielsen.com/2022/inspecting-web-views-in-macos/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/web-tools-weekly\">Web Tools Weekly</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/web-tools-weekly\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/web-tools-weekly.png\" alt=\"Web Tools Weekly\" /></a>\n\t\t\t\t\t\t<p>A weekly newsletter for <nobr>front-end</nobr> and <nobr>full-stack</nobr> developers featuring coding tips and a categorized list of tools for CSS, JavaScript, React, Vue, SVG, Git, CLI, and lots more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/web-tools-weekly\">Subscribe</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://fffuel.co/pppointed/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">pppointed</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online SVG arrow builder to make and customize arrows for your designs.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://fffuel.co/pppointed/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/soheilpro/mailwind?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Mailwind</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Mailwind is a tool that enables you to use Tailwind CSS to design HTML emails.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/soheilpro/mailwind?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/02/we-all-are-ukraine/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">We All Are Ukraine 🇺🇦</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2022/02/we-all-are-ukraine/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/we-all-are-ukraine.jpg\" alt=\"We All Are Ukraine 🇺🇦\" /></a>\n\t\t\t\t\t\t<p>Vitaly Friedman said it all. We can’t be silent in these times. We need to be united in our fight for peace, democracy, and a better world where everyone can feel free and safe.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/02/we-all-are-ukraine/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how to optimize full-screen images, how to create an auto-filling grid,\nhow to effectively animate newly added DOM elements, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "author": [
            "Jhey Tompkins"
        ],
        "title": [
            "A Guide To Audio Visualization With JavaScript And GSAP (Part 1)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part1/"
        ],
        "pubDate": [
            "Wed, 02 Mar 2022 13:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part1/"
        ],
        "description": [
            "What started as a case study turned into a guide to visualizing audio with JavaScript. Although the output demos are in React, Jhey Tompkins isn’t going to dwell on the React side of things too much. The underlying techniques work with or without React."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part1/\" />\n              <title>A Guide To Audio Visualization With JavaScript And GSAP (Part 1)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>A Guide To Audio Visualization With JavaScript And GSAP (Part 1)</h1>\n                  \n                    \n                    <address>Jhey Tompkins</address>\n                  \n                  <time datetime=\"2022-03-02T13:30:00&#43;00:00\" class=\"op-published\">2022-03-02T13:30:00+00:00</time>\n                  <time datetime=\"2022-03-02T13:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>A while back I got approached by friend <a href=\"https://twitter.com/kentcdodds\">Kent C. Dodds</a> to help out with his site rebuild. Besides adding a little whimsy here and there, there was one part, in particular, Kent wanted a hand with. And that was audio visualization. One feature of Kent’s site is being able to “<a href=\"https://kentcdodds.com/calls\">record a call</a>” and then he’d respond via a podcast episode.</p>\n\n<p>So today, we’re going to look at how you can visualize audio input with JavaScript. Although the output demos are in React, we aren’t going to dwell on the React side of things too much. The underlying techniques work with or without React. It’s the case that I needed to create this in React as Kent’s site uses <a href=\"https://remix.run/\">Remix</a>. We’ll focus on how you capture audio from a user and what you can do with that data.</p>\n\n<p><strong>Note</strong>: <em>To see the demos in action, you’ll need to open and test directly them on the CodePen website. Enjoy!</em></p>\n\n<p>Where do we start? Well, Kent kindly had a starting point already up and running for me. You can try it out here in this CodePen example:</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"MWOZgWb\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [1. Kent’s Starting Point](https://codepen.io/smashingmag/pen/MWOZgWb) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/MWOZgWb\">1. Kent’s Starting Point</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>You’re able to choose your input device and start recording your audio. And you’ll see a pretty cool audio wave visualization. You can pause and stop your recording and re-record. In fact, Kent set up a lot of the functionality here for me using <a href=\"https://xstate.js.org/\">XState</a> (XState is another article in itself).</p>\n\n<p>But, the part he wasn’t satisfied with was the visualization. He wanted an audio visualization like those on <a href=\"https://zencastr.com/\">Zencastr</a> or <a href=\"https://recorder.withgoogle.com/\">Google Recorder</a>. The side-scrolling audio bars style. To be honest, this is actually nicer to work with for reasons we will mention later.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\t\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Google Recorder Audio Visualization\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Google Recorder Audio Visualization (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/02908e3a-eeed-4585-8892-e0204ec41ea4/google-recorder-audio-visualization.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Before we begin to create that visualization, let’s break down that starting point.</p>\n\n<p>Now, in the starting point, Kent uses XState to process the different states of the audio recorder. But, we can cherry-pick the important parts you need to know. The main API at play is the <code>MediaRecorder</code> API and using <code>navigator.mediaDevices</code>.</p>\n\n<p>Let’s start with <code>navigator.mediaDevices</code>. This gives us access to any connected media devices like webcams and microphones. In the demo, we are filtering and returning the audio inputs returned from <code>enumerateDevices</code>. These are then stored in the demo state and shown as buttons if we choose to change from the default audio input. If we choose to use a different device from the default, this gets stored in the demo state.</p>\n\n<pre><code class=\"language-javascript\">getDevices: async () => {\n  const devices = await navigator.mediaDevices.enumerateDevices();\n  return devices.filter(({ kind }) => kind === \"audioinput\");\n},\n</code></pre>\n\n<p>Once we have an audio input device, it’s time to set up a <code>MediaRecorder</code> so we can capture that audio. Setting up a new <code>MediaRecorder</code> requires a <code>MediaStream</code> which we can get using <code>navigator.mediaDevices</code>.</p>\n\n<pre><code class=\"language-javascript\">// deviceId is stored in state if we chose something other than default\n// We got that list of devices from \"enumerateDevices\"\nconst audio = deviceId ? { deviceId: { exact: deviceId } } : true;\nconst stream = await navigator.mediaDevices.getUserMedia({ audio })\nconst recorder = new MediaRecorder(stream)\n</code></pre>\n\n<p>By passing <code>audio: true</code> to <code>getUserMedia</code>, we are falling back to using the “default” audio input device. But, we can pass a specific <code>deviceId</code> if we want to use a different device.</p>\n\n<p>Once we’ve created a <code>MediaRecorder</code>, we’re good to go! We have a <code>MediaRecorder</code> instance and access to a few self-explanatory methods.</p>\n\n<ul>\n<li><code>start</code></li>\n<li><code>stop</code></li>\n<li><code>pause</code></li>\n<li><code>resume</code></li>\n</ul>\n\n<p>That’s all good but we need to do something with the data that’s recorded. To handle this data, we are going to create an <code>Array</code> to store the &ldquo;chunks&rdquo; of audio data.</p>\n\n<pre><code class=\"language-javascript\">const chunks = []\n</code></pre>\n\n<p>And then we are going to push chunks to that Array when data is available. To hook into that event, we use <code>ondataavailable</code>. This event fires when the <code>MediaStream</code> gets stopped or ends.</p>\n\n<pre><code class=\"language-javascript\">recorder.ondataavailable = event => {\n  chunks.push(event.data)\n}\n</code></pre>\n\n<p><strong>Note</strong>: <em>The <code>MediaRecorder</code> can provide its current state with the <code>state</code> property. Where the state can be <code>paused</code>, <code>inactive</code>, or <code>paused</code>. This is useful for making interaction decisions in the UI.</em></p>\n\n<p>There is one final thing we need to do. When we stop the recording, we need to create an audio Blob. This will be the mp3 of our audio recording. In our demo, the audio blob gets stored in the demo state handled with XState. But, the important part is this part.</p>\n\n<pre><code class=\"language-javascript\">new Blob(chunks, { type: 'audio/mp3' })\n</code></pre>\n\n<p>With this <code>Blob</code>, we are able to playback our audio recording using an <code>audio</code> element.</p>\n\n<p>Check out this demo where all the React and XState code gets stripped out. This is all we need to record audio with the default audio input device.</p>\n\n<pre><code class=\"language-javascript\">const TOGGLE = document.querySelector('#toggle')\nconst AUDIO = document.querySelector('audio')\n\nlet recorder\nconst RECORD = () => {\n  const toggleRecording = async () => {\n    if (!recorder) {\n      // Reset the audio tag\n      AUDIO.removeAttribute('src')\n      const CHUNKS = []\n      const MEDIA_STREAM = await window.navigator.mediaDevices.getUserMedia({\n        audio: true\n      })\n      recorder = new MediaRecorder(MEDIA_STREAM)\n      recorder.ondataavailable = event => {\n        // Update the UI\n        TOGGLE.innerText = 'Start Recording'\n        recorder = null\n        // Create the blob and show an audio element\n        CHUNKS.push(event.data)\n        const AUDIO_BLOB = new Blob(CHUNKS, {type: \"audio/mp3\"})\n        AUDIO.setAttribute('src', window.URL.createObjectURL(AUDIO_BLOB))\n      }\n      TOGGLE.innerText = 'Stop Recording'\n      recorder.start()\n    } else {\n      recorder.stop()\n    }\n  }\n  toggleRecording()\n}\n\nTOGGLE.addEventListener('click', RECORD)\n</code></pre>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"rNYoNMQ\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [2. Barebones Audio Input](https://codepen.io/smashingmag/pen/rNYoNMQ) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/rNYoNMQ\">2. Barebones Audio Input</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p><strong>Note</strong>: <em>For a more in-depth look at setting up the MediaRecorder and using it, check out this MDN article: “<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API\">Using the MediaStream Recording API</a>”.</em></p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Web forms</strong> are at the center of every meaningful interaction, so they’re worth getting a firm handle on. Meet Adam Silver&rsquo;s <strong><a href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\">Form Design Patterns</a></strong>, a practical guide to designing and building forms for the web.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64e57b41-b7f1-4ae3-886a-806cce580ef9/form-design-patterns-shop-image-1-1.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51e0f837-d85d-4b28-bfab-1c9a47f0ce33/form-design-patterns-shop-image.png\"\n    alt=\"Feature Panel\"\n    width=\"481\"\n    height=\"698\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"visualization\">Visualization ✨</h2>\n\n<p>Right. Now we have an idea about how to record audio input from our users, we can get onto the fun stuff! Without any visualization, our audio recording UI isn’t very engaging. Also, nothing indicates to the user that the recording is working. Even a pulsing red circle would be better than nothing! But, we can do better than that.</p>\n\n<p>For our audio visualization, we are going to use HTML5 Canvas. But, before we get to that stage, we need to understand how to take the real-time audio data and make it usable. Once we create our <code>MediaRecorder</code>, we can access its <code>MediaStream</code> with the <code>stream</code> property.</p>\n\n<p>Once we have a <code>MediaStream</code>, we want to analyze it using the <code>AudioContext</code> API.</p>\n\n<pre><code class=\"language-javascript\">const STREAM = recorder.stream\nconst CONTEXT = new AudioContext() // Close it later\nconst ANALYSER = CONTEXT.createAnalyser() // Disconnect the analyser\nconst SOURCE = CONTEXT.createMediaStreamSource(STREAM) // disconnect the source\n\nSOURCE.connect(ANALYSER)\n</code></pre>\n\n<p>We start by creating a new <code>AudioContext</code>. Then, we create an <code>AnalyserNode</code>. This is what allows us to access audio time and frequency data. The last thing we need is a source to connect to. We can use <code>createMediaStreamSource</code> to create a <code>MediaStreamAudioSourceNode</code>. The last thing to do is connect this node to the analyzer making it the input for the analyzer.</p>\n\n<p>Now we’ve got that boilerplate set up, we can start playing with real-time data. To do this we can use <code>window.requestAnimationFrame</code> to collect data from the analyzer. This means that we will be able to process the data generally in line with our display’s refresh rate.</p>\n\n<p>On each analysis, we grab the analyzer data and use <code>getByteFrequencyData</code>. That method allows us to copy the data into a <code>Uint8Array</code> that’s the size of the <code>frequencyBinCount</code>. What’s the <code>frequencyBinCount</code>? It’s a read-only property that’s half the value of the analyzer’s <code>fftSize</code>. What’s the <code>fftSize</code>? I’m not a sound engineer by any means. But, think of this as the number of samples taken when obtaining the data. The <code>fftSize</code> must be a power of 2 and by default is 2048(Remember that game? Possible future article?). That means each time we call <code>getByteFrequencyData</code>, we get <code>2048</code> frequency data samples. And that means we get around <code>1024</code> values to play with for our visualization ✨</p>\n\n<p><strong>Note</strong> :<em>You may have noticed in Kent’s starting point, we use <code>getByteTimeDomainData</code>. This is because the original demo uses a waveform visualization. <code>getByteTimeDomainData</code> will return waveform(time-domain) data. Whereas <code>getByteFrequencyData</code> returns the decibel values for frequencies in a sample. This is more appropriate for equalizer style visualizations where we visualize input volume.</em></p>\n\n<p>OK. So what does the code look like for processing our frequency data? Let’s dig in. We can separate the concerns here by creating a function that takes a <code>MediaStream</code>.</p>\n\n<pre><code class=\"language-javascript\">const ANALYSE = stream => {\n  // Create an AudioContext\n  const CONTEXT = new AudioContext()\n  // Create the Analyser\n  const ANALYSER = CONTEXT.createAnalyser()\n  // Connect a media stream source to connect to the analyser\n  const SOURCE = CONTEXT.createMediaStreamSource(stream)\n  // Create a Uint8Array based on the frequencyBinCount(fftSize / 2)\n  const DATA_ARR = new Uint8Array(ANALYSER.frequencyBinCount)\n  // Connect the analyser\n  SOURCE.connect(ANALYSER)\n  // REPORT is a function run on each animation frame until recording === false\n  const REPORT = () => {\n    // Copy the frequency data into DATA_ARR\n    ANALYSER.getByteFrequencyData(DATA_ARR)\n    // If we are still recording, run REPORT again in the next available frame\n    if (recorder) requestAnimationFrame(REPORT)\n    else {\n      // Else, close the context and tear it down.\n      CONTEXT.close()\n    }\n  }\n  // Initiate reporting\n  REPORT()\n}\n</code></pre>\n\n<p>That’s the boilerplate we need to start playing with the audio data. But, this currently doesn’t do much apart from running in the background. You could throw a <code>console.info</code> or <code>debugger</code> in <code>REPORT</code> to see what’s happening.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"PoOXoWp\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [3. Sampling Input Data](https://codepen.io/smashingmag/pen/PoOXoWp) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/PoOXoWp\">3. Sampling Input Data</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>The eagle-eyed may have noticed something. Even when we stop recording, the recording icon remains in our browser tab. This isn’t ideal. Even though the <code>MediaRecorder</code> gets stopped, the <code>MediaStream</code> is still active. We need to <code>stop</code> all available tracks on <code>stop</code>.</p>\n\n<pre><code class=\"language-javascript\">// Tear down after recording.\nrecorder.stream.getTracks().forEach(t => t.stop())\nrecorder = null\n</code></pre>\n\n<p>We can add this into the <code>ondataavailable</code> callback function we defined earlier.</p>\n\n<p>Almost there. It’s time to convert our frequency data into a volume and visualize it. Let’s start by displaying the volume in a readable format to the user.</p>\n\n<pre><code class=\"language-javascript\">const REPORT = () => {\n  ANALYSER.getByteFrequencyData(DATA_ARR)\n  const VOLUME = Math.floor((Math.max(...DATA_ARR) / 255) * 100)\n  LABEL.innerText = `${VOLUME}%`\n  if (recorder) requestAnimationFrame(REPORT)\n  else {\n    CONTEXT.close()\n    LABEL.innerText = '0%'\n  }\n}\n</code></pre>\n\n<p>Why do we divide the greatest value by <code>255</code>. Because that’s the scale of frequency data returned by <code>getByteFrequencyData</code>. Each value in our sample can be from <code>0</code> to <code>255</code>.</p>\n\n<p>Well done! You’ve created your first audio visualization 🎉 Once you get past the boilerplate code, there isn’t much code required to start playing.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"LYOMYyY\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [4. Processing Data](https://codepen.io/smashingmag/pen/LYOMYyY) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/LYOMYyY\">4. Processing Data</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>Let’s start making this more “fancy”. 💅</p>\n\n<p>We’re going to bring GSAP into the mix. This brings with it a variety of benefits. The great thing with GSAP is that it’s much more than animating visual things. It’s about animating values and also provides so many great utilities. If you’ve not seen GSAP before, do not worry. We will walk through what it’s doing here.</p>\n\n<p>Let’s update our demo by making our label <code>scale</code> in size based on the volume. At the same time, we can change the color by animating a CSS custom property value.</p>\n\n<pre><code class=\"language-javascript\">let recorder\nlet report\nlet audioContext\n\nconst CONFIG = {\n  DURATION: 0.1,\n}\n\nconst ANALYSE = stream => {\n  audioContext = new AudioContext()\n  const ANALYSER = audioContext.createAnalyser()\n  const SOURCE = audioContext.createMediaStreamSource(stream)\n  const DATA_ARR = new Uint8Array(ANALYSER.frequencyBinCount)\n  SOURCE.connect(ANALYSER)\n  report = () => {\n    ANALYSER.getByteFrequencyData(DATA_ARR)\n    const VOLUME = Math.floor((Math.max(...DATA_ARR) / 255) * 100)\n    LABEL.innerText = `${VOLUME}%`\n    gsap.to(LABEL, {\n      scale: 1 + ((VOLUME * 2) / 100),\n      '--hue': 100 - VOLUME,\n      duration: CONFIG.DURATION,\n    })\n  }\n  gsap.ticker.add(report)\n}\n</code></pre>\n\n<p>On each frame of our GSAP code, is animating our <code>LABEL</code> element using <code>gsap.to</code>. We are telling GSAP to animate the <code>scale</code> and <code>--hue</code> of the element with a configured <code>duration</code>.</p>\n\n<pre><code class=\"language-javascript\">gsap.to(LABEL, {\n  scale: 1 + ((VOLUME * 2) / 100),\n  '--hue': 100 - VOLUME,\n  duration: CONFIG.DURATION,\n})\n</code></pre>\n\n<p>You’ll also notice <code>requestAnimationFrame</code> is gone. If you’re going to use GSAP for anything that uses animation frames. It’s worth switching to using GSAP’s own utility functions. This is applicable for HTML Canvas(We’ll get to this), Three JS, etc.</p>\n\n<p>GSAP provides <code>ticker</code> which is a great wrapper for <code>requestAnimationFrame</code>. It runs in sync with the GSAP engine and has a nice concise API. It also provides neat features like being able to update the frame rate. That can get complex if you’re writing it yourself and if you’re using GSAP, you should use the tools it provides.</p>\n\n<pre><code class=\"language-javascript\">gsap.ticker.add(REPORT) // Adds the reporting function for each frame\ngsap.ticker.remove(REPORT) // Stops running REPORT on each frame\ngsap.ticker.fps(24) // Would update our frames to run at 24fps (Cinematic)\n</code></pre>\n\n<p>Now, we have a more interesting visualization demo and the code is cleaner with GSAP.</p>\n\n<p>You may also be wondering where the teardown code has gone. We’ve moved that into <code>RECORD</code>’s <code>else</code>. This will make it easier later on if we choose to animate things after we finish a recording. For example, returning an element to its initial state. We could introduce state values to track if necessary.</p>\n\n<pre><code class=\"language-javascript\">const RECORD = () => {\n  const toggleRecording = async () => {\n    if (!recorder) {\n      // Set up recording code...\n    } else {\n      recorder.stop()\n      LABEL.innerText = '0%'\n      gsap.to(LABEL, {\n        duration: CONFIG.DURATION,\n        scale: 1,\n        hue: 100,\n        onComplete: () => {\n          gsap.ticker.remove(report)\n          audioContext.close() \n        }\n      })\n    }\n  }\n  toggleRecording()\n}\n</code></pre>\n\n<p>When we teardown, we animate our label to its original state. And using the <code>onComplete</code> method, we can remove our <code>report</code> function from the <code>ticker</code>. At the same time, we can <code>close</code> our <code>AudioContext</code>.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"yLPGLbq\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [5. Getting “fancy” with GSAP](https://codepen.io/smashingmag/pen/yLPGLbq) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/yLPGLbq\">5. Getting “fancy” with GSAP</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>To make the EQ bars visualization we need to start using HTML Canvas. Do not fear if you have no Canvas experience. We’ll walk through <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API\">the basics of rendering shapes</a> and how to use GreenSock with our canvas. In fact, we’re going to build some basic visualizations first.</p>\n\n<p>Let’s start with a <code>canvas</code> element.</p>\n\n<pre><code class=\"language-javascript\">&lt;canvas&gt;&lt;/canvas&gt;\n</code></pre>\n\n<p>To render things on a canvas, we need to grab a drawing context which is what we draw onto. We also need to define a size for our canvas. By default, they get a size of 300 by 150 pixels. The interesting thing is that the canvas has two sizes. It has its “physical” size and its &ldquo;canvas&rdquo; size. For example, we could have a canvas that has a physical size of 300 by 150 pixels. But, the drawing &ldquo;canvas&rdquo; size is 100 by 100 pixels. Have a play with this demo that draws a red square 40 by 40 pixels in the center of a canvas.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"QWOzWgm\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [6. Adjusting Physical and Canvas Sizing for Canvas](https://codepen.io/smashingmag/pen/QWOzWgm) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/QWOzWgm\">6. Adjusting Physical and Canvas Sizing for Canvas</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>How do we draw things onto a canvas? Take the demo above and consider a <code>canvas</code> that’s 200 by 200 pixels.</p>\n\n<pre><code class=\"language-javascript\">// Grab our canvas\nconst CANVAS = document.querySelector('canvas')\n// Set the canvas size\nCANVAS.width = 200\nCANVAS.height = 200\n// Grab the canvas context\nconst CONTEXT = CANVAS.getContext('2d')\n// Clear the entire canvas with a rectangle of size \"CANVAS.width\" by \"CANVAS.height\"\n// starting at (0, 0)\nCONTEXT.clearRect(0, 0, CANVAS.width, CANVAS.height)\n// Set fill color to \"red\"\nCONTEXT.fillStyle = 'red'\n// Fill rectangle at (80, 80) with width and height of 40\nCONTEXT.fillRect(80, 80, 40, 40) \n</code></pre>\n\n<p>We start by setting the canvas size and getting the context. Then using the context we use <code>fillRect</code> to draw a square at the given coordinates. The coordinate system in canvas starts at the top left corner. So <code>[0, 0]</code> is the top left. For our canvas, <code>[200, 200]</code> would be the bottom right corner.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<p>For our square, the coordinates are half the canvas width and height minus half of the square size.</p>\n\n<pre><code class=\"language-javascript\">// Canvas Width/Height = 200\n// Square Size = 40\nCONTEXT.fillRect((200 / 2) - (40 / 2), (200 / 2) - (40 / 2), 40, 40)\n</code></pre>\n\n<p>This will draw our square in the center.</p>\n\n<pre><code class=\"language-javascript\">context.fillRect(x, y, width, height)\n</code></pre>\n\n<p>As we start with a blank canvas, <code>clearRect</code> isn’t necessary. But, each time we draw to a canvas, it doesn’t clear for us. With animations, it’s likely things will move. So clearing the entire canvas before we draw to it again is a good way to approach things.</p>\n\n<p>Consider this demo that animates a square from side to side. Try turning <code>clearRect</code> on and off to see what happens. Not clearing the canvas in some scenarios can produce some cool effects.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"MWOZWBL\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [7. Clearing a Canvas each frame](https://codepen.io/smashingmag/pen/MWOZWBL) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/MWOZWBL\">7. Clearing a Canvas each frame</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>Now we have a basic idea of drawing things to <code>canvas</code>, let’s put it together with GSAP to visualize our audio data.  We’re going to visualize a square that changes color and size as our <code>label</code> did.</p>\n\n<p>We can start by getting rid of our <code>label</code> and creating a <code>canvas</code>. Then in JavaScript land, we need to grab that <code>canvas</code> and its rendering context. Then we can set the size of the canvas to match its physical size.</p>\n\n<pre><code class=\"language-javascript\">const CANVAS = document.querySelector('canvas')\nconst CONTEXT = CANVAS.getContext('2d')\n// Match canvas size to physical size\nCANVAS.width = CANVAS.height = CANVAS.offsetHeight\n</code></pre>\n\n<p>We need an Object to represent our square. It’s going to define the size, hue, and scale of the square. Remember how we mentioned GSAP is great because it animates values? This is going to come into play very soon.</p>\n\n<pre><code class=\"language-javascript\">const SQUARE = {\n  hue: 100,\n  scale: 1,\n  size: 40,\n}\n</code></pre>\n\n<p>To draw our square, we’re going to define a function that keeps that code in one place. It clears the canvas and then renders the square in the center based on its current scale.</p>\n\n<pre><code class=\"language-javascript\">const drawSquare = () => {\n  const SQUARE_SIZE = SQUARE.scale * SQUARE.size\n  const SQUARE_POINT = CANVAS.width / 2 - SQUARE_SIZE / 2\n  CONTEXT.clearRect(0, 0, CANVAS.width, CANVAS.height)\n  CONTEXT.fillStyle = `hsl(${SQUARE.hue}, 80%, 50%)`\n  CONTEXT.fillRect(SQUARE_POINT, SQUARE_POINT, SQUARE_SIZE, SQUARE_SIZE)  \n}\n</code></pre>\n\n<p>We render the square initially so that the <code>canvas</code> isn’t blank at the start:</p>\n\n<pre><code class=\"language-javascript\">drawSquare()\n</code></pre>\n\n<p>Now. Here comes the magic part. We only need code to animate our square values. We can update our <code>report</code> function to the following:</p>\n\n<pre><code class=\"language-javascript\">report = () => {\n  if (recorder) {\n    ANALYSER.getByteFrequencyData(DATA_ARR)\n    const VOLUME = Math.max(...DATA_ARR) / 255\n    gsap.to(SQUARE, {\n      duration: CONFIG.duration,\n      hue: gsap.utils.mapRange(0, 1, 100, 0)(VOLUME),\n      scale: gsap.utils.mapRange(0, 1, 1, 5)(VOLUME)\n    })      \n  }\n  // render square\n  drawSquare()\n}\n</code></pre>\n\n<p>Regardless, <code>report</code> must render our square. But, if we are recording, we can visualize the calculated volume. Our volume value will be between <code>0</code> and <code>1</code>. And we can use GSAP utils to map that value to a desired hue and scale range with <code>mapRange</code>.</p>\n\n<blockquote>There are different ways to process the volume in our audio data. For these demos, I’m using the largest value from the data Array for ease. An alternative could be to process the average reading by using <code>reduce</code>.<br /><br />For example:<br /><pre><code class=\"language-javascript\">const VOLUME = Math.floor(((DATA_ARR.reduce((acc, a) => acc + a, 0) / DATA_ARR.length) / 255) * 100)\n</code></pre>\n</blockquote>\n\n<p>Once we finish recording, we animate the square values back to their original values.</p>\n\n<pre><code class=\"language-javascript\">gsap.to(SQUARE, {\n  duration: CONFIG.duration,\n  scale: 1,\n  hue: 100,\n  onComplete: () => {\n    audioContext.close() \n    gsap.ticker.remove(report)\n  }\n})\n</code></pre>\n\n<p>Make sure that you tear down <code>report</code> and the <code>audioContext</code> in your <code>onComplete</code> callback. Notice how the GSAP code is separate from the rendering code? That’s the awesome thing about using GSAP to animate Object values. Our function <code>drawSquare</code> runs every frame regardless. It doesn’t care what’s happening to the squares, it takes the values and renders the square. This means GSAP can adjust those values anywhere in our code. The updates will get rendered by <code>drawSquare</code>.</p>\n\n<p>And here we have it! ✨ Our first GSAP visualization.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"NWweWLM\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [8. First Canvas Visualization ✨](https://codepen.io/smashingmag/pen/NWweWLM) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/NWweWLM\">8. First Canvas Visualization ✨</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>What if we extended that? How about creating a random square for each sample from our data? How might that look? It could look like this!</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"podqoOQ\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [9. Randomly generated audio visualization 🚀](https://codepen.io/smashingmag/pen/podqoOQ) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/podqoOQ\">9. Randomly generated audio visualization 🚀</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>In this demo, we use a smaller <code>fftSize</code> and create a square for each sample. Each square gets random characteristics and updates after each recording. This demo takes it a little further and allows you to update the sample size. That means you can have as many or as few squares as you’d like!</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"mdqadzm\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [10. Random Audio Input Vizualisation w/ Configurable Sample Size ✨](https://codepen.io/smashingmag/pen/mdqadzm) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/mdqadzm\">10. Random Audio Input Vizualisation w/ Configurable Sample Size ✨</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<blockquote><strong>Canvas Challenge</strong><br />Could you recreate this random visualization but display circles instead of squares? How about different colors? Fork the demos and have a play with them. Reach out if you get stuck!</blockquote>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<p>So now we know how to visualize our audio input with HTML canvas using GSAP. But, before we go off on a tangent making randomly generated visualization, we need to get back to our brief!</p>\n\n<p>We want to make EQ bars that move from right to left. We already have our audio input set up. All we need to do is change the way the visualization works. Instead of squares, we will work with bars. Each bar has an &ldquo;x&rdquo; position and will get centered on the &ldquo;y&rdquo; axis. Each bar gets a &ldquo;size&rdquo; that will be the height. The starting &ldquo;x&rdquo; position is going to be the furthest right of the canvas.</p>\n\n<pre><code class=\"language-javascript\">// Array to hold our bars\nconst BARS = []\n// Create a new bar\nconst NEW_BAR = {\n  x: CANVAS.width,\n  size: VOLUME, // Volume for that frame\n}\n</code></pre>\n\n<p>The difference between our previous visualizations and this one is that we need to add a new bar on each frame. This happens inside the <code>ticker</code> function. At the same time, we need to create a new animation for the values of that bar. One feature of our brief is that we need to be able to “pause” and “resume” a recording. Creating a new animation for each bar isn’t going to work in the same way. We need to create a <code>timeline</code> we can reference and then add animations to. Then we can pause and resume the bar animations all at once. We can tackle pausing the animation once we’ve got it working. Let’s start by updating our visualization.</p>\n\n<p>Here’s some boilerplate for drawing our bars and variables we use to keep reference.</p>\n\n<pre><code class=\"language-javascript\">// Keep reference to GSAP timeline\nlet timeline = gsap.timeline()\n// Generate Array for BARS\nconst BARS = []\n// Define a Bar width on the canvas\nconst BAR_WIDTH = 4\n// We can declare a fill style outside of the loop.\n// Let’s start with red!\nDRAWING_CONTEXT.fillStyle = 'red'\n// Update our drawing function to draw a bar at the correct \"x\" accounting for width\n// Render bar vertically centered\nconst drawBar = ({ x, size }) => {\n  const POINT_X = x - BAR_WIDTH / 2\n  const POINT_Y = CANVAS.height / 2 - size / 2\n  DRAWING_CONTEXT.fillRect(POINT_X, POINT_Y, BAR_WIDTH, size)  \n}\n// drawBars updated to iterate through new variables\nconst drawBars = () => {\n  DRAWING_CONTEXT.clearRect(0, 0, CANVAS.width, CANVAS.height)\n  for (const BAR of BARS) {\n    drawBar(BAR)\n  }\n}\n</code></pre>\n\n<p>When we stop the recorder, we <em>can</em> clear our timeline for reuse. This depends on the desired behavior (More on this later):</p>\n\n<pre><code class=\"language-javascript\">timeline.clear()\n</code></pre>\n\n<p>The last thing to update is our reporting function:</p>\n\n<pre><code class=\"language-javascript\">REPORT = () => {\n  if (recorder) {\n    ANALYSER.getByteFrequencyData(DATA_ARR)\n    const VOLUME = Math.floor((Math.max(...DATA_ARR) / 255) * 100)\n    \n    // At this point create a bar and have it added to the timeline\n    const BAR = {\n      x: CANVAS.width + BAR_WIDTH / 2,\n      size: gsap.utils.mapRange(0, 100, 5, CANVAS.height * 0.8)(VOLUME)\n    }\n    // Add to bars Array       \n    BARS.push(BAR)\n    // Add the bar animation to the timeline\n    timeline\n      .to(BAR, {\n        x: `-=${CANVAS.width + BAR_WIDTH}`,\n        ease: 'none'\n        duration: CONFIG.duration,\n      })\n  }\n  if (recorder || visualizing) {\n    drawBars()\n  }\n}\n</code></pre>\n\n<p>How does that look?</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"qBVLBQb\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [11. Attempting EQ Bars](https://codepen.io/smashingmag/pen/qBVLBQb) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/qBVLBQb\">11. Attempting EQ Bars</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>Completely wrong&hellip; But why? Well. At the moment we are adding a new animation on each frame to our timeline. But, these animations run in sequence. One bar must finish before the next proceeds which isn’t what we want. Our issue is related to timing. And our timing needs to be relative to the size of our canvas. That way, if the size of our canvas changes, the animation will still look the same.</p>\n\n<p><strong>Note</strong>: <em>Our visuals will get distorted if our canvas has a responsive size and gets resized. Although it is possible to update on resize, it’s quite complex. We won’t dig into that today.</em></p>\n\n<p>Much like we defined a <code>BAR_WIDTH</code>, we can define some other config for our visualization. For example, the min and max height of a bar. We can base that on the height of the canvas.</p>\n\n<pre><code class=\"language-javascript\">const VIZ_CONFIG = {\n  bar: {\n    width: 4,\n    min_height: 0.04,\n    max_height: 0.8\n  }\n}\n</code></pre>\n\n<p>But, what we need is to decide how many pixels our bars will move per second. Let’s say we make a bar move of 100 pixels per second. That means our next bar can enter 4 pixels later. And in time, that’s <code>1 / 100 * 4</code> seconds.</p>\n\n<pre><code class=\"language-javascript\">const BAR_WIDTH = 4\nconst PIXELS_PER_SECOND = 100\nconst VIZ_CONFIG = {\n  bar: {\n    width: 4,\n    min_height: 0.04,\n    max_height: 0.8\n  },\n  pixelsPerSecond: PIXELS_PER_SECOND,\n  barDelay: (1 / PIXELS_PER_SECOND) * BAR_WIDTH,\n}\n</code></pre>\n\n<p>With GSAP, we can insert an animation into the timeline at a given timestamp. It’s an optional second parameter of <code>add</code>. If we know the index of the bar we are adding, that means we can calculate the timestamp for insertion.</p>\n\n<pre><code class=\"language-javascript\">timeline\n  .to(BAR,\n    {\n      x: `-=${CANVAS.width + VIZ_CONFIG.bar.width}`,\n      ease: 'none',\n      // Duration will be the same for all bars\n      duration: CANVAS.width / VIZ_CONFIG.pixelsPerSecond,\n    },\n    // Time to insert the animation. Based on the new BARS length.\n    BARS.length * VIZ_CONFIG.barDelay\n  )\n</code></pre>\n\n<p>How does that look?</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"KKybKrr\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [12. Getting Closer](https://codepen.io/smashingmag/pen/KKybKrr) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/KKybKrr\">12. Getting Closer</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>It’s much better. But it’s still way off. It’s too delayed and not in sync enough with our input. And that’s because we need to be more precise with our calculations. We need to base the timing on the actual frame rate of our animation. This is where <code>gsap.ticker.fps</code> can play a part. Remember <code>gsap.ticker</code> is the heartbeat of what is happening in GSAP land.</p>\n\n<pre><code class=\"language-javascript\">gsap.ticker.fps(DESIRED_FPS)</code></pre>\n\n<p>If we’ve defined the &ldquo;desired&rdquo; <code>fps</code>, the actual duration for a bar to move can get calculated. And we can base it on how much we want a bar to move before the next one enters. We calculate precise &ldquo;Pixels per second&rdquo;:</p>\n\n<pre><code class=\"language-javascript\">(Bar Width + Bar Gap) * Fps</code></pre>\n\n<p>For example, if we have an <code>fps</code> of 50, a bar width of <code>4</code>, and a gap of <code>0</code>.</p>\n\n<pre><code class=\"language-javascript\">(4 + 0) * 50 === 200</code></pre>\n\n<p>Our bars need to move at <code>200</code> pixels per second. The duration of the animation can then get calculated based on the canvas width.</p>\n\n<p><strong>Note</strong>: <em>It’s worth picking an FPS that you know your users will be able to use. For example, some screens might only operate at 30 frames per second. A mere 24 frames per second gets considered as the &ldquo;cinematic&rdquo; feel.</em></p>\n\n<p>An updated demo gives us the desired effect! 🚀</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"Vwrqwqm\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [13. Dialling the timing and gap](https://codepen.io/smashingmag/pen/Vwrqwqm) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/Vwrqwqm\">13. Dialling the timing and gap</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>You can tinker with the timings and how your EQ bars move across the canvas to get the desired effect. For this particular project, we were looking for as close to real-time as possible. You could group bars and average them out for example if you wanted. There are so many possibilities.</p>\n\n<p>You may have noticed that our bars have also changed color and we now have this gradient effect. This is because we’ve updated the <code>fillStyle</code> to use a <code>linearGradient</code>. The neat thing about fill styles in Canvas is that we can apply a blanket style to the canvas. Our gradient covers the entirety of the canvas. This means the bigger the bar (louder the input), the more the color will change.</p>\n\n<pre><code class=\"language-javascript\">const fillStyle = DRAWING_CONTEXT.createLinearGradient(\n  CANVAS.width / 2,\n  0,\n  CANVAS.width / 2,\n  CANVAS.height\n)\n// Color stop is two colors\nfillStyle.addColorStop(0.2, 'hsl(10, 80%, 50%)')\nfillStyle.addColorStop(0.8, 'hsl(10, 80%, 50%)')\nfillStyle.addColorStop(0.5, 'hsl(120, 80%, 50%)')\n\nDRAWING_CONTEXT.fillStyle = fillStyle\n</code></pre>\n\n<p>Now we’re getting somewhere with our EQ bars. This demo allows you to change the behavior of the visualization updating the bar width and gap:</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"BamvavY\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [14. Configurable Timing](https://codepen.io/smashingmag/pen/BamvavY) by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/BamvavY\">14. Configurable Timing</a> by <a href=\"https://codepen.io/jh3y\">jh3y</a>.</figcaption>\n</figure>\n\n<p>If you play with this demo, you may find ways to break the animation. For example, if you choose a framerate higher than that on your device. It’s all about how accurate we can get our timing. Opting for a lower framerate tends to be more reliable.</p>\n\n<p>At a high level, you now have the tools required to make audio visualizations from user input. In Part 2 of this series, I’ll explain how you can add features and any extra touches you like. Stay tuned for next week!</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "What started as a case study turned into a guide to visualizing audio with\nJavaScript. Although the output demos are in React, Jhey Tompkins isn’t going to\ndwell on the React side of things too much. ...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Internationalization: How to Boost Traffic with a Multilingual Site"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss\"\n              title=\"Internationalization: How to Boost Traffic with a Multilingual Site\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization.jpg\"\n        alt=\"Internationalization: How to Boost Traffic with a Multilingual Site\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            If you sell globally, internationalization is important, and you should consider building a multilingual website. Learn how to do it right.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss\">Internationalization: How to Boost Traffic with a Multilingual Site</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/internationalization-multilingual-site/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207059",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Entrepreneur",
            "Marketing",
            "Web"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Thu, 07 Oct 2021 02:00:11 GMT"
        ],
        "plainDescription": "Internationalization: How to Boost Traffic with a Multilingual Site\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633834599internationalization.jpg]\n[https://www.sitepoint.com/internation...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Creating Realistic Reflections With CSS"
        ],
        "link": [
            "https://css-tricks.com/creating-realistic-reflections-with-css/"
        ],
        "comments": [
            "https://css-tricks.com/creating-realistic-reflections-with-css/#comments"
        ],
        "dc:creator": [
            "Preethi"
        ],
        "pubDate": [
            "Mon, 02 May 2022 14:14:07 +0000"
        ],
        "category": [
            "Article",
            "filter",
            "mask-image",
            "reflection"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365491",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>In design, reflections are stylized mirror images of objects. Even though they are not as popular as shadows, they have their moments — just think about the first time you explored the different font formats in MS Word or PowerPoint: &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/creating-realistic-reflections-with-css/\">Creating Realistic Reflections With CSS</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>In design, reflections are stylized mirror images of objects. Even though they are not as popular as shadows, they have their moments — just think about the first time you explored the different font formats in MS Word or PowerPoint: I bet reflection was your second-most-used style, next to shadow, foregoing others like outline and glow. Or perhaps you remember when reflections were all the rage back when Apple used them on just about everything.</p>\n\n\n\n<span id=\"more-365491\"></span>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"980\" height=\"622\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_FADC46B93132CB28414BDDD31E83B3FC76FCA1AA81C74A7F0114AA1190FA19BF_1651096150975_iu.jpeg?resize=980%2C622&#038;ssl=1\" alt=\"Old iPod Touch product image showing the front, back, and profile of the device with subtle reflections beneath each.\" class=\"wp-image-365492\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_FADC46B93132CB28414BDDD31E83B3FC76FCA1AA81C74A7F0114AA1190FA19BF_1651096150975_iu.jpeg?w=980&amp;ssl=1 980w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_FADC46B93132CB28414BDDD31E83B3FC76FCA1AA81C74A7F0114AA1190FA19BF_1651096150975_iu.jpeg?resize=300%2C190&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_FADC46B93132CB28414BDDD31E83B3FC76FCA1AA81C74A7F0114AA1190FA19BF_1651096150975_iu.jpeg?resize=768%2C487&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Reflections are still cool! And unlike years past, we can actually make reflections with CSS! Here’s what we’ll be making in this article:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNYZWBr\" src=\"//codepen.io/anon/embed/rNYZWBr?height=725&amp;theme-id=1&amp;slug-hash=rNYZWBr&amp;default-tab=result\" height=\"725\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNYZWBr\" title=\"CodePen Embed rNYZWBr\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>There are two steps to a reflection design:</p>\n\n\n\n<ol><li>Create a copy of the original design.</li><li>Style that copy.</li></ol>\n\n\n\n<p>The most authentic and standardized way to get a mirror image in CSS now would be to use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/element()\" rel=\"noopener\"><code>element()</code></a> property. But it’s still in its experimental phase and is only supported in Firefox, at the time of writing this article. If you’re curious, you can <a href=\"https://css-tricks.com/using-the-little-known-css-element-function-to-create-a-minimap-navigator/\">check out this article I wrote</a> that experiments with it.</p>\n\n\n\n<p>So, rather than <code>element()</code>, I’m going to add two of the same designs and use one as the reflection in my examples. You can code this part to be dynamic using JavaScript, or use pseudo-elements, but in my demos, I’m using a pair of identical elements per design.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;div class=\"units\">\n  &lt;div>trinket&lt;/div>\n  &lt;div>trinket&lt;/div>\n&lt;/div></code></pre>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > * {\n  background-image: url('image.jpeg');\n  background-clip: text;\n  color: transparent;\n  /* etc. */\n}</code></pre>\n\n\n\n<p>The original design is a knock-out text graphic created from the combination of a background image, transparent text color, and the <a href=\"https://css-tricks.com/almanac/properties/b/background-clip/\"><code>background-clip</code></a> property with its <code>text</code> value.</p>\n\n\n\n<p>The bottom element of the pair is then turned upside-down and moved closer to the original design using <code>transform</code>. This is the reflection:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  transform: rotatex(180deg) translatey(15px); \n}</code></pre>\n\n\n\n<p>The now upturned bottom element will take on some styles to create fades and other graphic effects on the reflection. A gradual fading of reflection can be achieved with a linear gradient image used as a mask layer on the upturned element.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  transform: rotatex(180deg) translatey(15px); \n  mask-image: linear-gradient(transparent 50%, white 90%);\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_XWzQEMa\" src=\"//codepen.io/anon/embed/XWzQEMa?height=350&amp;theme-id=1&amp;slug-hash=XWzQEMa&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed XWzQEMa\" title=\"CodePen Embed XWzQEMa\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>By default, the <a href=\"https://css-tricks.com/almanac/properties/m/mask-mode/\"><code>mask-mode</code></a> of the <a href=\"https://css-tricks.com/almanac/properties/m/mask-image/\"><code>mask-image</code></a> property is <code>alpha</code>. That means the transparent parts of an image, when the image is used as a mask layer for an element, turn their corresponding areas of the element transparent as well. That’s why a <code>linear-gradient</code> with transparent gradation at the top fades out the upside-down reflection at the end.</p>\n\n\n\n<p>We can also try other gradient styles, with or without combining them. Take this one with stripes, for example. I added the pattern along with the fade effect from before.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  /* ... */\n  mask-image: \n    repeating-linear-gradient(transparent, transparent 3px, white 3px, white 4px),\n    linear-gradient( transparent 50%, white 90%);\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_zYPXWJW\" src=\"//codepen.io/anon/embed/zYPXWJW?height=350&amp;theme-id=1&amp;slug-hash=zYPXWJW&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed zYPXWJW\" title=\"CodePen Embed zYPXWJW\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Or this one with <code>radial-gradient</code>:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  /* ... */\n  mask-image: radial-gradient(circle at center, white, transparent 50%);\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_YzEMabm\" src=\"//codepen.io/anon/embed/YzEMabm?height=350&amp;theme-id=1&amp;slug-hash=YzEMabm&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed YzEMabm\" title=\"CodePen Embed YzEMabm\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Another idea is to morph the mirror image by adding <code>skew()</code> to the <code>transform</code> property. This gives some movement to the reflection.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  /* ... */\n  transform: rotatex(180deg) translatey(15px) skew(135deg) translatex(30px);\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_zYPXjGm\" src=\"//codepen.io/anon/embed/zYPXjGm?height=350&amp;theme-id=1&amp;slug-hash=zYPXjGm&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed zYPXjGm\" title=\"CodePen Embed zYPXjGm\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>When you need the reflection to be subtle and more like a shadow, then blurring it out, brightening it, or reducing its opacity, can do the trick.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  /* ... */\n  filter: blur(4px) brightness(1.5);\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_OJOGZXb\" src=\"//codepen.io/anon/embed/OJOGZXb?height=450&amp;theme-id=1&amp;slug-hash=OJOGZXb&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed OJOGZXb\" title=\"CodePen Embed OJOGZXb\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Sometimes a reflection can also be shadowy itself, so, instead of using the background image (from the original design) or a block color for the text, I tried giving the reflection a series of translucent shadows of red, blue and green colors that go well with the original design.</p>\n\n\n\n<pre rel=\"SCSS\" class=\"wp-block-csstricks-code-block language-scss\" data-line=\"\"><code markup=\"tt\">.units > :last-child {\n  /* ... */\n  text-shadow: \n    0 0 8px rgb(255 0 0 / .4),\n    -2px -2px 6px rgb(0 255 0 / .4),\n    2px 2px 4px rgb(0 255 255 / .4);\n}</code></pre>\n\n\n\n<p class=\"is-style-explanation\">Do those <code>rgb()</code>values look weird? That&#8217;s a new syntax that&#8217;s part of <a href=\"https://css-tricks.com/new-css-color-features-preview/\">some exciting new CSS color features</a>.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_podBVNa\" src=\"//codepen.io/anon/embed/podBVNa?height=350&amp;theme-id=1&amp;slug-hash=podBVNa&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed podBVNa\" title=\"CodePen Embed podBVNa\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Let’s bring all of these approaches together in one big demo:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNYZWBr\" src=\"//codepen.io/anon/embed/rNYZWBr?height=725&amp;theme-id=1&amp;slug-hash=rNYZWBr&amp;default-tab=result\" height=\"725\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNYZWBr\" title=\"CodePen Embed rNYZWBr\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h1>Wrapping up</h1>\n\n\n\n<p>The key to a good reflection is to go with effects that are subtler than the main object, but not so subtle that it’s difficult to notice. Then there are other considerations, including the reflection’s color, direction, and shape.</p>\n\n\n\n<p>I hope you got some inspirations from this! Sure, all we looked at here was text, but reflections can work well for any striking element in a design that has a sensible enough space around it and can benefit from a reflection to elevate itself on the page.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/creating-realistic-reflections-with-css/\">Creating Realistic Reflections With CSS</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/creating-realistic-reflections-with-css/feed/"
        ],
        "slash:comments": [
            "2"
        ],
        "post-id": [
            {
                "_": "365491",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "In design, reflections are stylized mirror images of objects. Even though they\nare not as popular as shadows, they have their moments — just think about the\nfirst time you explored the different font ...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "The complexity of color on the web"
        ],
        "link": [
            "https://frontendfoc.us/issues/539"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/122779/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 20px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>🇺🇦 #​539 — April 27, 2022 | <a href=\"https://frontendfoc.us/link/122780/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122781/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1651067122/tgho9fv9eujduymisgtg.png\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122781/rss\" title=\"webcolorisstillbroken.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">'Web Color Is Still Broken'</a></span> — Whether it's handling display profiles, transparency, scaling, or color mixing, the author claims one thing is clear: “<em>the web is still doing color wrong</em>”. <a href=\"https://frontendfoc.us/link/122782/rss\" style=\" color: #D94306;\">Here’s the Hacker News discussion</a> on this issue, with plenty of food for thought on this complex matter.</p>\n  <p>Hector Martin </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122783/rss\" title=\"lexical.dev\" style=\" color: #D94306;\">Lexical: An Extensible Text Editor Library (That Does Things Differently)</a></span> — Fresh out of Meta (Facebook) comes a new text editor framework that puts accessibility, performance, and reliability at its heart. It’s only 22KB gzipped, and a (native) iOS version is on the way too.</p>\n  <p>Meta </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122784/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/1b704c12.png\" width=\"150\" height=\"150\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><span>📑 PDF:</span> <a href=\"https://frontendfoc.us/link/122784/rss\" title=\"www.sleuth.io\" style=\" color: #D94306;\">Taking the Journey from Zero to 100 Deploys a Day</a></span> — Elite teams capable of deploying many times a day didn't get there overnight. This book breaks down how they did it in 3 phases: Deploy 1x a week → 1x a day → many times a day. By Dylan Etkin, formerly a founding engineer of Jira at Atlassian.</p>\n  <p>Sleuth <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122785/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">The Ultimate Guide to Push Notifications for Developers</a></span> — If you find yourself needing to implement notifications, then it will become clear quickly that they can be tricky to get right. Here’s an explainer on how to implement them and which practices are best to follow.</p>\n  <p>Lee Munroe </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122786/rss\" title=\"stackdiary.com\" style=\" color: #D94306;\">A Practical Guide to Centering in CSS</a></span> — This reference explains various methods to center elements using CSS, including techniques for Grid &amp; Flexbox. <em>Quite possibly the most evergreen of frontend topics</em>. 😅</p>\n  <p>Alex Ivanovs </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n\n<ul>\n\n<li>European data protection authorities have <a href=\"https://frontendfoc.us/link/122787/rss\" style=\" color: #D94306; font-weight: 600;\">made Google add a 'Reject All' option</a> to their cookie banner.</li>\n\n<li>🏆 The W3Cs WebFonts Working Group <a href=\"https://frontendfoc.us/link/122788/rss\" style=\" color: #D94306; font-weight: 600;\">just won an Emmy</a> for their work on the standardization of font technology.</li>\n\n<li>Google I/O returns next month — <a href=\"https://frontendfoc.us/link/122789/rss\" style=\" color: #D94306; font-weight: 600;\">details here</a>.</li>\n\n\n\n</ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122790/rss\" title=\"webkit.org\" style=\" color: #D94306;\">Non-Interactive Elements with the <code>inert</code> Attribute</a></span> — How the <a href=\"https://frontendfoc.us/link/122791/rss\" style=\" color: #D94306;\"><code>inert</code> attribute</a> provides an efficient way to hide elements from assistive technology and disable element interactions such as being focused, clicked, edited, or selected. FYI, this property is currently in the Safari 15.5 beta.</p>\n  <p>Tim Nguyen (WebKit) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122792/rss\" title=\"jackchilds.tech\" style=\" color: #D94306;\">Reducing Spam From <code>mailto</code> Links</a></span> — Not necessarily the <em>best</em> way to solve this age old problem (I remember seeing JavaScript being used for this in the 90s!) but an interesting approach.</p>\n  <p>Jack Childs </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122793/rss\" title=\"retool.com\" style=\" color: #D94306;\">Build Internal Tools in Minutes with Retool, Where Visual Programming Meets the Power of Real Code</a></span> — Custom dashboards, admin panels, CRUD apps—build any internal tool faster in Retool.</p>\n  <p>Retool <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122794/rss\" title=\"medium.com\" style=\" color: #D94306;\">Evaluating Design System Adoption using Custom CSS</a></span> — How one team uses custom user CSS to easily and visually audit component and design token usage in its live products.</p>\n  <p>Steve Dennis </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\">▶  <a href=\"https://frontendfoc.us/link/122795/rss\" title=\"www.youtube.com\" style=\" color: #D94306;\">Animate From <code>display: none</code></a></span> — Here’s a useful tutorial going through how to animate when working with <code>display: none</code> — a non animatable property.</p>\n  <p>Kevin Powell </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122796/rss\" title=\"blog.openreplay.com\" style=\" color: #D94306;\">Mastering CSS Transitions with React 18</a></span> — How to use the new <code>useTransition</code> hook that arrived with React 18 to perform a wide variety of web animation effects.</p>\n  <p>Amazing Enrich Agu (OpenReplay) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122797/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">How to Generate a Full Tailwind CSS Palette from a Single Color</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Luka Peharda</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122798/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Why Brave and DuckDuckGo Are Cracking Down on Google’s AMP</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Ivan Mehta</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122799/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">How to Detect Dead Code in a Frontend Project</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Iva Kop</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122810/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Calling all Empathetic + People-Focused Sr. JavaScript Engineers</a></span> — We're looking for Node + React developers who want to design architecture, lead teams, and ship features directly to customers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Moz Group</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122800/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Frontend Developer at X-Team (Remote)</a></span> — Join the most energizing community for developers and work on long-term projects for Riot Games, FOX, Sony, Coinbase, and more.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">X-Team</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122801/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools &amp; Resources</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122802/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1651052765/t81heo9ayqgciny946es.gif\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122802/rss\" title=\"material.io\" style=\" color: #D94306;\">Introducing Material Symbols</a></span> — The rather lovely open-source Material Icons set is now available in a customizable, variable version. You can fine-tune weight, fill, optical size, and grade. Available on <a href=\"https://frontendfoc.us/link/122803/rss\" style=\" color: #D94306;\">Google Fonts</a> (or via <a href=\"https://frontendfoc.us/link/122804/rss\" style=\" color: #D94306;\">a new Figma plugin</a>).</p>\n  <p>Sarah Daily </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122805/rss\" title=\"www.fluid-type-scale.com\" style=\" color: #D94306;\">Fluid Type Scale: Generate Responsive Font-Size Variables</a></span> — Generate font size variables for a fluid type scale with CSS clamp. Grab the output CSS and drop it into any design system.</p>\n  <p>Aleksandr Hovhannisyan </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122806/rss\" title=\"chrome.google.com\" style=\" color: #D94306;\">Test Your Web App for Accessibility. Free <em>axe DevTools</em> Chrome Extension</a></span></p>\n  <p>Deque <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122807/rss\" title=\"www.feedbackfin.com\" style=\" color: #D94306;\">Feedback Fin: An Open Source Widget to Collect Feedback Anywhere on Your Site</a></span> — Just drop in the script and add a few lines to initiate the widget, which is customizable and accessible.</p>\n  <p>Rowy </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122808/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1651056637/hbunx8oozgcehkd5uxrt.png\" width=\"140\" height=\"\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122808/rss\" title=\"codepen.io\" style=\" color: #D94306;\">Linear-Style Cursor Glow</a></span> — This is a lovely little motion effect, adding a cursor glow that illuminates the currently hovered element. Recreated here using CSS variables, radial gradients and an inset. It's inspired by <a href=\"https://frontendfoc.us/link/122809/rss\" style=\" color: #D94306;\">the Linear site, as explained in this tweet</a>.</p>\n  <p>David Khourshid <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;  padding: 1px 4px; \">codepen</span></p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/539/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 27 Apr 2022 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/539"
        ],
        "plainDescription": "[https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png]\n[https://frontendfoc.us/link/122779/rss]\n\nFrontend Focus\n\n🇺🇦 # 539 — April 27, 2022 | Read on the web\n[https://f...",
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/",
        "providerIdx": 5
    },
    {
        "title": [
            "How to Write Shell Scripts in Node with Google’s zx Library"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss\"\n              title=\"How to Write Shell Scripts in Node with Google’s zx Library\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx.jpg\"\n        alt=\"How To Write Shell Scripts in Node with Google's zx Library\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn what Google's zx library is, how to use it, and how it helps make shell scripting with Node.js much more efficient and enjoyable.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss\">How to Write Shell Scripts in Node with Google’s zx Library</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/google-zx-write-node-shell-scripts/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254657",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Simon Plenderleith"
        ],
        "pubDate": [
            "Tue, 14 Dec 2021 02:00:02 GMT"
        ],
        "plainDescription": "How To Write Shell Scripts in Node with Google's zx Library\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639359610google-zx.jpg]\n[https://www.sitepoint.com/google-zx-write-node-shell-scr...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Adding CDN Caching to a Vite Build"
        ],
        "link": [
            "https://css-tricks.com/adding-cdn-caching-to-a-vite-build/"
        ],
        "comments": [
            "https://css-tricks.com/adding-cdn-caching-to-a-vite-build/#respond"
        ],
        "dc:creator": [
            "Adam Rackis"
        ],
        "pubDate": [
            "Mon, 04 Apr 2022 18:25:23 +0000"
        ],
        "category": [
            "Article",
            "cdn",
            "vite"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364166",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Content delivery networks, or CDNs, allow you to improve the delivery of your website’s static resources, most notably, with CDN caching. They do this by serving your content from edge locations, which are located all over the world. When a &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-cdn-caching-to-a-vite-build/\">Adding CDN Caching to a Vite Build</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Content delivery networks, or CDNs, allow you to improve the delivery of your website’s static resources, most notably, with CDN caching. They do this by serving your content from edge locations, which are located all over the world. When a user browses to your site, and your site requests resources from the CDN, the CDN will route that request to the nearest edge location. If that location has the requested resources, either from that user’s prior visit, or from another person, then the content will be served from cache. If not, the CDN will request the content from your underlying domain, cache it, and serve it.</p>\n\n\n\n<p>There are <a href=\"https://css-tricks.com/adding-a-cdn-to-your-website/#aa-how-to-implement-a-cdn-on-a-custom-application\">countless CDNs out there</a>, but for this post we’ll be using AWS CloudFront. We’ll look at setting up a CloudFront distribution to serve all our site’s assets: JavaScript files, CSS files, font files, etc. Then we’ll see about integrating it into a <a href=\"https://vitejs.dev/\" rel=\"noopener\">Vite</a> build. If you’d like to learn more about Vite, <a href=\"https://css-tricks.com/adding-vite-to-your-existing-web-app/\">I have an introduction here</a>.</p>\n\n\n\n<span id=\"more-364166\"></span>\n\n\n\n<h3 id=\"setting-up-a-cloudfront-cdn-distribution\">Setting up a CloudFront CDN distribution</h3>\n\n\n\n<p>Let’s jump right in and set up our CloudFront CDN distribution.</p>\n\n\n\n<p class=\"is-style-explanation\">For any serious project, you should be setting up your serverless infrastructure with code, using something like the <a href=\"https://www.serverless.com/\" rel=\"noopener\">Serverless</a> Framework, or AWS’s CDK. But to keep things simple, here, we’ll set up our CDN using the AWS console.</p>\n\n\n\n<p>Head on over to the CloudFront homepage. At the top right, you should see an orange button to create a new distribution.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1716\" height=\"318\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=1716%2C318&#038;ssl=1\" alt=\"CloudFront CDN Distributions screen.\" class=\"wp-image-364167\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?w=1716&amp;ssl=1 1716w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=300%2C56&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=1024%2C190&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=768%2C142&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=1536%2C285&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643601521743_image.png?resize=1000%2C185&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The creation screen has a ton of options, but for the most part the default selections will be fine. First and foremost, add the domain where your resources are located.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1690\" height=\"1510\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=1690%2C1510&#038;ssl=1\" alt=\"CloudFront CDN distribution creation screen.\" class=\"wp-image-364168\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?w=1690&amp;ssl=1 1690w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=300%2C268&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=1024%2C915&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=768%2C686&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=1536%2C1372&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602432816_image.png?resize=1000%2C893&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Next, scroll down and find the <strong>Response headers policy</strong> dropdown, and choose “CORS-With-Preflight.”</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1376\" height=\"1074\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?resize=1376%2C1074&#038;ssl=1\" alt=\"CloudFront response headers settings.\" class=\"wp-image-364169\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?w=1376&amp;ssl=1 1376w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?resize=300%2C234&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?resize=1024%2C799&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?resize=768%2C599&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1643602504731_image.png?resize=1000%2C781&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Lastly, click the <strong>Create Distribution</strong> button at the bottom, and hopefully you’ll see your new distribution.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2984\" height=\"1272\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=2984%2C1272&#038;ssl=1\" alt=\"CloudFront CDN distribution overview screen.\" class=\"wp-image-364170\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?w=2984&amp;ssl=1 2984w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=300%2C128&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=1024%2C437&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=768%2C327&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=1536%2C655&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=2048%2C873&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1644794973653_image.png?resize=1000%2C426&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"integrating-the-cdn-with-vite\">Integrating the CDN with Vite</h3>\n\n\n\n<p>It’s one thing for our CDN to be set up and ready to serve our files. But it’s another for our site to actually <em>know</em> <em>how</em> <em>to</em> request them from our CDN. I’ll walk through integrating with Vite, but other build systems, like webpack or Rollup, will be similar.</p>\n\n\n\n<p>When Vite builds our site, it maintains a “graph” of all the JavaScript and CSS files that various parts of our site import, and it injects the appropriate <code>&lt;script&gt;</code> tags, <code>&lt;link&gt;</code> tags, or <code>import()</code> statements to load what’s needed. What we need to do is tell Vite to request these assets from our CDN when in production. Let’s see how.</p>\n\n\n\n<p>Open up your <code>vite.config.ts</code> file. First, we’ll need to know if we’re on the live site (production) or in development (dev).</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const isProduction = process.env.NODE_ENV === \"production\"; </code></pre>\n\n\n\n<p>This works since Vite sets this environment variable when we run <code>vite build</code>, which is what we do for production, as opposed to dev mode with hot module reloading.</p>\n\n\n\n<p>Next we tell Vite to draw our assets from our CDN like so, setting the <code>base</code> property of our config object:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">export default defineConfig({\n  base: isProduction ? process.env.REACT_CDN : \"\",</code></pre>\n\n\n\n<p>Be sure to set your <code>REACT_CDN</code> environment variable to your CDN&#8217;s location, which in this case, will be our CloudFront distribution&#8217;s location. Mine looks something (but not exactly) like this:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://distributiondomainname.cloudfront.net</code></pre>\n\n\n\n<h3 id=\"watch-your-vitepwa-settings\">Watch your VitePWA settings!</h3>\n\n\n\n<p>As one final piece of cleanup, if you happen to be using <a href=\"https://github.com/antfu/vite-plugin-pwa\" rel=\"noopener\">the VitePWA plugin</a>, be sure to reset your <code>base</code> property like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">VitePWA({\n  base: \"/\",</code></pre>\n\n\n\n<p>Otherwise, your <code>web.manifest</code> file will have invalid settings and cause errors.</p>\n\n\n\n<h3 id=\"let-s-see-the-cdn-work\">Let&#8217;s see the CDN work</h3>\n\n\n\n<p>Once you’re all set up, browse to your site, and inspect any of the network requests for your script or CSS files. For starters, the protocol should be h2.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1382\" height=\"436\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?resize=1382%2C436&#038;ssl=1\" alt=\"Showing the assets served via CDN caching in DevTools. Each file name includes a unique random string of letters and numbers.\" class=\"wp-image-364171\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?w=1382&amp;ssl=1 1382w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?resize=300%2C95&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?resize=1024%2C323&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?resize=768%2C242&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066411843_image.png?resize=1000%2C315&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>From there, you can peek into the response headers of any one of those files, and you should see some CloudFront data in there:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"558\" height=\"401\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066513112_image.png?resize=558%2C401&#038;ssl=1\" alt=\"Screenshot of a response header.\" class=\"wp-image-364172\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066513112_image.png?w=558&amp;ssl=1 558w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_A222401D7207838999F1AF448BBA05247A2A03ED59A602BCCDB63C09B206650E_1645066513112_image.png?resize=300%2C216&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3 id=\"odds-and-ends\">Cache busting</h3>\n\n\n\n<p>It’s hard to talk about CDNs without mentioning cache busting. CDNs like CloudFront have functionality to manually “eject” items from cache. But for Vite-built assets, we get this “for free” since Vite adds fingerprinting, or hash codes, to the filenames of the assets it produces.</p>\n\n\n\n<p>So Vite might turn a <code>home.js</code> file into <code>home-abc123.js</code> during a build, but then if you change that file and rebuild, it might become <code>home-xyz987.js</code>. That’s good, as it will “break the cache,” and the newly built file will not be cached, so the CDN will have to turn to our host domain for the actual content.</p>\n\n\n\n<h3 id=\"cdn-caching-for-other-static-assets\">CDN caching for other static assets</h3>\n\n\n\n<p>JavaScript, CSS, and font files aren’t the only kinds of assets that can benefit from CDN caching. If you have an S3 bucket you’re serving <em>images</em> out of, consider setting up a CloudFront distribution for it as well. There are options specifically for S3 which makes it a snap to create. Not only will you get the same edge caching, but HTTP/2 responses, which S3 does <em>not</em> provide.</p>\n\n\n\n<h3>Advanced CDN practices</h3>\n\n\n\n<p>Integrating a CDN here was reasonably straightforward, but we&#8217;re only enjoying a fraction of the potential benefits. Right now, users will browse to our app, our server will serve our root HTML file, and then the user&#8217;s browser will connect to our CDN to start pulling down all our static assets. </p>\n\n\n\n<p>Going further, we would want to serve our entire site from a CDN. That way, it can communicate with our web server as needed for non-static and non-cached assets.</p>\n\n\n\n<h3 id=\"wrapping-up\">Conclusion</h3>\n\n\n\n<p>CDNs are a great way to improve the performance of your site. They provide edge caching and HTTP/2 out of the box. Not only that, but they’re reasonably easy to set up. Now you have a new tool in your belt to both set up a CDN and integrate it with Vite.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-cdn-caching-to-a-vite-build/\">Adding CDN Caching to a Vite Build</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/adding-cdn-caching-to-a-vite-build/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "364166",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "Content delivery networks, or CDNs, allow you to improve the delivery of your\nwebsite’s static resources, most notably, with CDN caching. They do this by\nserving your content from edge locations, whic...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "An Introduction to PostCSS"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss\"\n              title=\"An Introduction to PostCSS\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg\"\n        alt=\"An Introduction to PostCSS\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            CSS preprocessors are popular, but they have some drawbacks. Learn the advantages of PostCSS and what its extensive range of plugins can do.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss\">An Introduction to PostCSS</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=124370",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "CSS",
            "HTML & CSS"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Mon, 01 Nov 2021 02:00:49 GMT"
        ],
        "plainDescription": "An Introduction to PostCSS\n[https://uploads.sitepoint.com/wp-content/uploads/2016/02/1635738723postcss1.jpg]\n[https://www.sitepoint.com/an-introduction-to-postcss/?utm_source=rss] CSS\npreprocessors ar...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Use Higher-Order Functions in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/higher-order-functions-javascript/?utm_source=rss\"\n              title=\"How to Use Higher-Order Functions in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Higher-order functions can take other functions as arguments or return a function as a result. Learn how to use them and why they're useful.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/higher-order-functions-javascript/?utm_source=rss\">How to Use Higher-Order Functions in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/higher-order-functions-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=107482",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Vanilla JavaScript"
        ],
        "dc:creator": [
            "M. David Green"
        ],
        "pubDate": [
            "Wed, 02 Mar 2022 13:00:53 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646273021hof.jpg]\n[https://www.sitepoint.com/higher-order-functions-javascript/?utm_source=rss]\nHigher-order functions can take other functio...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Zapier Automation Inspiration for Entrepreneurs"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/zapier-automation-inspiration/?utm_source=rss\"\n              title=\"Zapier Automation Inspiration for Entrepreneurs\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Are you an entrepreneur looking to automate your business? Get some Zapier automation inspiration with these practical starter workflows.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/zapier-automation-inspiration/?utm_source=rss\">Zapier Automation Inspiration for Entrepreneurs</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/zapier-automation-inspiration/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259980",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Entrepreneur",
            "Entrepreneurship",
            "Low Code",
            "Productivity",
            "Productivity Tools"
        ],
        "dc:creator": [
            "Daniel Schwarz"
        ],
        "pubDate": [
            "Tue, 26 Apr 2022 19:08:51 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651023717zapier.jpg]\n[https://www.sitepoint.com/zapier-automation-inspiration/?utm_source=rss] Are\nyou an entrepreneur looking to automate yo...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Making Mermaid Diagrams in Markdown"
        ],
        "link": [
            "https://css-tricks.com/making-mermaid-diagrams-in-markdown/"
        ],
        "comments": [
            "https://css-tricks.com/making-mermaid-diagrams-in-markdown/#comments"
        ],
        "dc:creator": [
            "Paul Esch-Laurent"
        ],
        "pubDate": [
            "Mon, 18 Apr 2022 16:01:08 +0000"
        ],
        "category": [
            "Article",
            "charts",
            "markdown"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364908",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://github.com/mermaid-js/mermaid\" rel=\"noopener\">Mermaid</a> diagrams and flowcharts have been gaining traction, especially with <a href=\"https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\" rel=\"noopener\">GitHub’s announcement</a> that they are natively supported in Markdown. Let’s take a look at what they are, how to use them, and just as importantly: <em>why</em>.</p>\n<p>Just like you &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/making-mermaid-diagrams-in-markdown/\">Making Mermaid Diagrams in Markdown</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://github.com/mermaid-js/mermaid\" rel=\"noopener\">Mermaid</a> diagrams and flowcharts have been gaining traction, especially with <a href=\"https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\" rel=\"noopener\">GitHub’s announcement</a> that they are natively supported in Markdown. Let’s take a look at what they are, how to use them, and just as importantly: <em>why</em>.</p>\n\n\n\n<p>Just like you might want to <a href=\"https://codepen.io/features/embeds\" rel=\"noopener\">embed your CodePen demo</a> directly in your documentation source, having your diagrams and charts live adjacent to your text helps prevent them from <em>rotting</em> — that is, drifting out of sync with the state of your document. Just as unhelpful, obsolete, or otherwise misleading comments in your code can be objectively worse than <em>no</em> comments, the same goes for diagrams.</p>\n\n\n\n<span id=\"more-364908\"></span>\n\n\n\n<p>Mermaid diagrams pair well with <a href=\"https://jamstack.org/\" rel=\"noopener\">Jamstack</a> and <a href=\"https://serverless.css-tricks.com/services/ssgs/\">static site generators</a>, which continue to grow in popularity. The pairing is natural. While Mermaid diagrams aren’t Markdown-exclusive, they are Markdown-inspired. Using the same markup abstractions Markdown provides to notate code, Mermaid can be represented the same to output diagrams and flowcharts. And Markdown is to Jamstack and static sites as peanut butter is to jelly.</p>\n\n\n\n<p>If your site is authored in Markdown, processed into HTML, and you have enough control to add a bit of custom JavaScript, then you can use the ideas we’re covering in this article to fit your own needs and implement diagrams with Mermaid conveniently alongside the rest of your Markdown. Is “diagrams-as-code” a term yet? It should be.</p>\n\n\n\n<p>For example, let’s say you’re working on a fancy new product and you want to provide a roadmap in the form of a <a href=\"https://en.wikipedia.org/wiki/Gantt_chart\" rel=\"noopener\">Gantt chart</a> (or <a href=\"https://mermaid-js.github.io/mermaid/#/README?id=diagram-types\" rel=\"noopener\">some other type</a> — say flowcharts, sequences, and class diagrams). With Mermaid, you can do this in a small handful of lines:</p>\n\n\n\n<pre rel=\"Markdown\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">gantt\n  title My Product Roadmap\n  dateFormat  YYYY-MM-DD\n  section Cool Feature\n  A task           :a1, 2022-02-25, 30d\n  Another task     :after a1, 20d\n  section Rad Feature\n  Task in sequence :2022-03-04, 12d\n  Task, No. 2      :24d</code></pre>\n\n\n\n<p>Which will render a nice SVG diagram like so:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1600\" height=\"200\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?resize=1600%2C200&#038;ssl=1\" alt=\"Showing a Mermaid diagram of a roadmap in shades of purple.\" class=\"wp-image-364910\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?w=1600&amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?resize=300%2C38&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?resize=1024%2C128&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?resize=768%2C96&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_3336C7E7E46678F31C207C2129F62171FD319621D922786F2A8560BC2195EFCD_1645070360600_ScreenShot2022-02-17at03.58.46.png?resize=1536%2C192&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Nine lines of code gets us a full-fledged Gantt chart that can be used for product roadmaps and such.</figcaption></figure>\n\n\n\n<p class=\"is-style-explanation\"><strong>Pro tip:</strong> Mermaid has a live editor which lets you try it out without the commitment over at <a href=\"https://mermaid.live/\" rel=\"noopener\">mermaid.live</a>.</p>\n\n\n\n<h3>Mermaid diagrams in Markdown</h3>\n\n\n\n<p>Mermaid goes well with Markdown because it presents itself as just another <a href=\"https://www.markdownguide.org/extended-syntax/#fenced-code-blocks\" rel=\"noopener\">fenced code block</a>, only using the <code>mermaid</code> language syntax set. For example, this block of code:</p>\n\n\n\n<pre rel=\"Markdown\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```</code></pre>\n\n\n\n<p>…produces an HTML <code>&lt;pre&gt;</code> element with the code block contents inside:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;pre class=\"mermaid\">&lt;code>graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;&lt;/code>&lt;/pre></code></pre>\n\n\n\n<p>If you’re using a <a href=\"https://spec.commonmark.org/dingus/?text=%60%60%60mermaid%0Agraph%20TD%253B%0A%20%20%20%20A--%3EB%253B%0A%20%20%20%20A--%3EC%253B%0A%20%20%20%20B--%3ED%253B%0A%20%20%20%20C--%3ED%253B%0A%60%60%60\" rel=\"noopener\">Markdown processor aligned with the CommonMark spec</a>, it’ll more resemble this:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;pre>&lt;code class=\"language-mermaid\">graph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n&lt;/code>&lt;/pre></code></pre>\n\n\n\n<div class=\"wp-container-12 wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://pandoc.org/try/?text=%60%60%60mermaid%0Agraph+TD%253B%0A++++A--%3EB%253B%0A++++A--%3EC%253B%0A++++B--%3ED%253B%0A++++C--%3ED%253B%0A%60%60%60&amp;from=markdown&amp;to=html5&amp;standalone=0\" rel=\"noopener\">View demo</a></div>\n</div>\n\n\n\n<p>The Mermaid API’s default behavior expects a <code>&lt;div class=\"mermaid\"&gt;</code> tag that directly contains the contents — so, no <code>&lt;code&gt;</code> or <code>&lt;span&gt;</code> (like from a syntax highlighter) that you might see in the conversion from Markdown-to-HTML.</p>\n\n\n\n<h3>Finessing with JavaScript</h3>\n\n\n\n<p>With a bit of JavaScript, it’s reasonable to take the Markdown-generated HTML and finesse it into the <code>&lt;div class=\"mermaid\"&gt;</code> tag that Mermaid targets. It’s worth noting that <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\" rel=\"noopener\"><code>$element.textContent</code></a> is purposeful here: Markdown will HTML-encode specific characters (like <code>&gt;</code> into <code>&amp;gt;</code>) that Mermaid uses. It also filters out any erroneous HTML elements that are descendants of the <code>&lt;pre&gt;</code> element.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// select &lt;pre class=\"mermaid\"> _and_ &lt;pre>&lt;code class=\"language-mermaid\">\ndocument.querySelectorAll(\"pre.mermaid, pre>code.language-mermaid\").forEach($el => {\n  // if the second selector got a hit, reference the parent &lt;pre>\n  if ($el.tagName === \"CODE\")\n    $el = $el.parentElement\n  // put the Mermaid contents in the expected &lt;div class=\"mermaid\">\n  // plus keep the original contents in a nice &lt;details>\n  $el.outerHTML = `\n    &lt;div class=\"mermaid\">${$el.textContent}&lt;/div>\n    &lt;details>\n      &lt;summary>Diagram source&lt;/summary>\n      &lt;pre>${$el.textContent}&lt;/pre>\n    &lt;/details>\n  `\n})</code></pre>\n\n\n\n<p>Now that our HTML is properly-formatted, let’s implement Mermaid to do the rendering.</p>\n\n\n\n<h3>Using Mermaid</h3>\n\n\n\n<p>Mermaid is published as an <a href=\"https://www.npmjs.com/package/mermaid\" rel=\"noopener\">npm package</a>, so you can grab a copy by using a package-aware CDN, like <a href=\"https://unpkg.com/mermaid\" rel=\"noopener\">unpkg</a>. You’ll want to use the minified code (e.g., <code>mermaid.min.js</code>) instead of the default export of <code>mermaid.core.js</code>. For example:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;script src=\"https://unpkg.com/mermaid@8.14.0/dist/mermaid.min.js\">&lt;/script></code></pre>\n\n\n\n<p>Mermaid is <em>also</em> ESM-ready, so you can use <a href=\"https://www.skypack.dev/view/mermaid\" rel=\"noopener\">Skypack</a> to load it up as well:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;script type=\"module\">\n  import mermaid from \"https://cdn.skypack.dev/mermaid@8.14.0\";\n&lt;/script></code></pre>\n\n\n\n<p>You could stop right here if you want to keep things simple. By default, Mermaid will <a href=\"https://mermaid-js.github.io/mermaid/#/usage?id=calling-mermaidinit\" rel=\"noopener\">auto-initialize itself when the document is ready</a>. As long as you do the Markdown-to-HTML finessing with JavaScript mentioned earlier — <em>before</em> loading in Mermaid — you’ll be all set.</p>\n\n\n\n<p>However, Mermaid has a couple settings worth configuring:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// initialize Mermaid to [1] log errors, [2] have loose security for first-party\n// authored diagrams, and [3] respect a preferred dark color scheme\nmermaid.initialize({\n  logLevel: \"error\", // [1]\n  securityLevel: \"loose\", // [2]\n  theme: (window.matchMedia &amp;&amp; window.matchMedia(\"(prefers-color-scheme: dark)\").matches) ?\n    \"dark\" :\n    \"default\" // [3]\n})</code></pre>\n\n\n\n<ol><li><code>logLevel</code> will give you a bit more visibility into any errors that may arise. If you want to see more information, you can <a href=\"https://github.com/mermaid-js/mermaid/blob/43854a2921eeceb74b2f782d8ef3cfadaebebbf4/src/logger.js\" rel=\"noopener\">choose a more verbose level</a> (or vice versa).</li><li><code>securityLevel</code> relates to the <a href=\"https://mermaid-js.github.io/mermaid/#/usage?id=securitylevel\" rel=\"noopener\">level of trust for the diagram source</a>. If it’s content that <em>you</em> are authoring, then <code>\"loose\"</code> is fine. If it’s user-generated content, it’s probably best leaving the <code>\"strict\"</code> default in place.</li><li><code>theme</code> changes the <a href=\"https://github.com/mermaid-js/mermaid/blob/43854a2921eeceb74b2f782d8ef3cfadaebebbf4/src/themes/index.js\" rel=\"noopener\">styling of the rendered diagrams</a>. By <a href=\"https://css-tricks.com/a-complete-guide-to-dark-mode-on-the-web/#aa-javascript\">querying the preferred color scheme</a> and leveraging a ternary operator, we can specify <code>\"dark\"</code> as appropriate.</li></ol>\n\n\n\n<h3>All together now!</h3>\n\n\n\n<p>Here are a couple of Mermaid diagrams examples in Markdown:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_mdqXJVz\" src=\"//codepen.io/anon/embed/mdqXJVz?height=450&amp;theme-id=1&amp;slug-hash=mdqXJVz&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed mdqXJVz\" title=\"CodePen Embed mdqXJVz\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Deeper waters</h3>\n\n\n\n<p>This strategy is particularly effective because it’s <em>progressive</em>: if JavaScript is disabled then the original Mermaid source is displayed as-is. No foul.</p>\n\n\n\n<p>There’s also a fully-fledged <a href=\"https://github.com/mermaid-js/mermaid-cli\" rel=\"noopener\">command line interface for Mermaid</a> which, if you’re interesting in exploring, could potentially be leveraged to display diagrams that are completely server-side rendered. Between the Mermaid CLI and the online generator, it may even be possible to hook into whatever build process you use to generate a snapshot of a diagram and display it as an <code>&lt;img&gt;</code> fallback instead of the source code.</p>\n\n\n\n<p>Hopefully, we’ll see more native Mermaid integrations like this as Mermaid continues to grow in popularity. The usefulness of having visual charts and diagrams alongside documentation is unquestionable — from product roadmaps to decision trees and everything in between. That’s the sort of information that’s just plain difficult to document with words alone.</p>\n\n\n\n<p>Mermaid charts solve that, and in a way that ensures the information can be managed and maintained alongside the rest of the documentation.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/making-mermaid-diagrams-in-markdown/\">Making Mermaid Diagrams in Markdown</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/making-mermaid-diagrams-in-markdown/feed/"
        ],
        "slash:comments": [
            "4"
        ],
        "post-id": [
            {
                "_": "364908",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "Mermaid [https://github.com/mermaid-js/mermaid] diagrams and flowcharts have\nbeen gaining traction, especially with GitHub’s announcement\n[https://github.blog/2022-02-14-include-diagrams-markdown-file...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "How to Use Airtable: A Beginner’s Guide"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-use-airtable-a-beginners-guide/?utm_source=rss\"\n              title=\"How to Use Airtable: A Beginner’s Guide\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple.jpg\"\n        alt=\"Man at a desk\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            This Airtable tutorial will take you through everything this tool has to offer, and explain how it can make your life easier.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-use-airtable-a-beginners-guide/?utm_source=rss\">How to Use Airtable: A Beginner’s Guide</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-use-airtable-a-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207571",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Low Code",
            "Productivity Tools"
        ],
        "dc:creator": [
            "SitePoint Team"
        ],
        "pubDate": [
            "Wed, 23 Feb 2022 18:30:23 GMT"
        ],
        "plainDescription": "Man at a desk\n[https://uploads.sitepoint.com/wp-content/uploads/2022/02/1645666801airtable-darkpurple.jpg]\n[https://www.sitepoint.com/how-to-use-airtable-a-beginners-guide/?utm_source=rss]\nThis Airtab...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #496"
        ],
        "link": [
            "https://css-weekly.com/issue-496/"
        ],
        "pubDate": [
            "Wed, 16 Mar 2022 17:07:49 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-496/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to build responsive horizontal navigation, how to use Cypress to create automated tests, how to work easier with CSS variables, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://markdotto.com/2022/03/10/horizontal-scrolling-nav/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Horizontal Scrolling Nav</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://markdotto.com/2022/03/10/horizontal-scrolling-nav/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/horizontal-scrolling-nav1.png\" alt=\"Horizontal Scrolling Nav\" /></a>\n\t\t\t\t\t\t<p>Mark Otto demonstrates how to build responsive horizontal navigation with an overflow scroll that automatically scrolls the active nav link into view.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://markdotto.com/2022/03/10/horizontal-scrolling-nav/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.ismaelramos.dev/how-to-test-if-there-is-any-element-outside-the-viewport-with-cypress/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How To Test if There Is Any Element Outside the Viewport With Cypress</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.ismaelramos.dev/how-to-test-if-there-is-any-element-outside-the-viewport-with-cypress/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/how-to-test-if-there-is-any-element-outside-the-viewport-with-cypress.jpg\" alt=\"How To Test if There Is Any Element Outside the Viewport With Cypress\" /></a>\n\t\t\t\t\t\t<p>Ismael Ramos explains how to use Cypress to create an automated test that checks if there is an element out of the viewport.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.ismaelramos.dev/how-to-test-if-there-is-any-element-outside-the-viewport-with-cypress/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/retool-better-interface-for-business-problems\">Create a better interface for any business problem with Retool</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/retool-better-interface-for-business-problems\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/retool-build-internal-tools-remarkably-fast.jpg\" alt=\"Create a better interface for any business problem with Retool\" /></a>\n\t\t\t\t\t\t<p>You don&#8217;t have to be a frontend expert to build beautiful apps. Retool provides a powerful platform to build UI, connect to data, and publish your app 10x faster. Skip boilerplate code with 90+ pre-built components, and write code nearly anywhere to customize how your apps look and work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/retool-better-interface-for-business-problems\">Explore our component library here</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://webkit.org/blog/12303/css-variables-web-inspector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Taming CSS Variables with Web Inspector</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Razvan Caliman outlines the improvements made to Safari’s Web Inspector to help you work easier with CSS variables.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://webkit.org/blog/12303/css-variables-web-inspector/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.stefanjudis.com/blog/a-look-at-the-dialog-elements-super-powers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A Look at the Dialog Element's Super Powers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stefan Judis looks at the new dialog element and outlines how it provides better focus handling.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.stefanjudis.com/blog/a-look-at-the-dialog-elements-super-powers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/aligning-content-different-wrappers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Aligning Content In Different Wrappers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed shows how to align content with another section, given that they are placed in different wrappers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/aligning-content-different-wrappers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://thinkdobecreate.com/articles/in-defense-of-sass/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">In Defense of Sass</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stephanie Eckles shares how Sass can be an excellent complement to how you approach writing styles, particularly in a team environment.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://thinkdobecreate.com/articles/in-defense-of-sass/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-raise-the-curtains-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How to Make a “Raise the Curtains” Effect in CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Silvestar Bistrović shows how to create an effect where the background goes from dark to light on scroll while the content on top also goes from light to dark while in a sticky position.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-raise-the-curtains-effect/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/css-day-2022\">Also prefer fundamental CSS knowledge over hypes?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/css-day-2022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/cssday.png\" alt=\"Also prefer fundamental CSS knowledge over hypes?\" /></a>\n\t\t\t\t\t\t<p>You&#8217;re not alone, and we&#8217;ve got just the conference for you. CSS Day is a deep-diving, content-focused CSS conference in Amsterdam, NL. We ask our speakers to treat CSS &#038; design topics that they themselves, as well as our attendees, can geek out on. On June 9th &#038; 10th, after a two-year silence, we&#8217;ll host our 8th edition.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/css-day-2022\">See our line-up</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/ruilisi/css-checker?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Checker</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A tool that shows similar and duplicated CSS with diff, designed to work well for local development and automation like CI.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/ruilisi/css-checker?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://a11y-automation.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A11y AutomationTracker</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A more thorough way to track the potential accessibility violations, automated linters, and tests currently available.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://a11y-automation.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/maxi83c/pen/JjOZdWX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Pure CSS - Pikachu in 3D Box</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/maxi83c/pen/JjOZdWX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/pure-css-pikachu-in-3d-box.png\" alt=\"Pure CSS - Pikachu in 3D Box\" /></a>\n\t\t\t\t\t\t<p>A stunning, interactive, animated illustration created in pure CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/maxi83c/pen/JjOZdWX?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how to build responsive horizontal navigation, how to use Cypress to\ncreate automated tests, how to work easier with CSS variables, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Syntax Highlighting (and More!) With Prism on a Static Site"
        ],
        "link": [
            "https://css-tricks.com/syntax-highlighting-prism-on-a-next-js-site/"
        ],
        "comments": [
            "https://css-tricks.com/syntax-highlighting-prism-on-a-next-js-site/#respond"
        ],
        "dc:creator": [
            "Adam Rackis"
        ],
        "pubDate": [
            "Wed, 04 May 2022 14:16:43 +0000"
        ],
        "category": [
            "Article",
            "next.js",
            "static sites",
            "syntax"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365510",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>So, you&#8217;ve decided to build a blog with <a href=\"https://nextjs.org\" rel=\"noopener\">Next.js</a>. Like any dev blogger, you&#8217;d like to have code snippets in your posts that are formatted nicely with syntax highlighting. Perhaps you also want to display line numbers in the &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/syntax-highlighting-prism-on-a-next-js-site/\">Syntax Highlighting (and More!) With Prism on a Static Site</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>So, you&#8217;ve decided to build a blog with <a href=\"https://nextjs.org\" rel=\"noopener\">Next.js</a>. Like any dev blogger, you&#8217;d like to have code snippets in your posts that are formatted nicely with syntax highlighting. Perhaps you also want to display line numbers in the snippets, and maybe even have the ability to call out certain lines of code.</p>\n\n\n\n<p>This post will show you how to get that set up, as well as some tips and tricks for getting these other features working. Some of it is tricker than you might expect.</p>\n\n\n\n<span id=\"more-365510\"></span>\n\n\n\n<h3>Prerequisites</h3>\n\n\n\n<p>We&#8217;re using the <a href=\"https://github.com/vercel/next.js/tree/canary/examples/blog-starter\" rel=\"noopener\">Next.js blog starter</a> as the base for our project, but the same principles should apply to other frameworks. That repo has clear (and simple) getting started instructions. Scaffold the blog, and let&#8217;s go!</p>\n\n\n\n<p>Another thing we&#8217;re using here is <a href=\"https://prismjs.com\" rel=\"noopener\">Prism.js</a>, a popular syntax highlighting library that&#8217;s even used right here on CSS-Tricks. The Next.js blog starter uses <a href=\"https://remark.js.org\" rel=\"noopener\">Remark</a> to convert Markdown into markup, so we&#8217;ll use the <a href=\"https://github.com/sergioramos/remark-prism\" rel=\"noopener\">remark-Prism.js plugin</a> for formatting our code snippets.</p>\n\n\n\n<h3>Basic Prism.js integration</h3>\n\n\n\n<p>Let&#8217;s start by integrating Prism.js into our Next.js starter. Since we already know we&#8217;re using the remark-prism plugin, the first thing to do is install it with your favorite package manager:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">npm i remark-prism</code></pre>\n\n\n\n<p>Now go into the <code>markdownToHtml</code> file, in the <code>/lib</code> folder, and switch on remark-prism:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import remarkPrism from \"remark-prism\";\n\n// later ...\n\n.use(remarkPrism, { plugins: [\"line-numbers\"] })</code></pre>\n\n\n\n<p>Depending on which version of the <a href=\"https://github.com/remarkjs/remark-html\" rel=\"noopener\">remark-html</a> you&#8217;re using, you might also need to change its usage to <code>.use(html, { sanitize: false })</code>.</p>\n\n\n\n<p>The whole module should now look like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import { remark } from \"remark\";\nimport html from \"remark-html\";\nimport remarkPrism from \"remark-prism\";\n\nexport default async function markdownToHtml(markdown) {\n  const result = await remark()\n    .use(html, { sanitize: false })\n    .use(remarkPrism, { plugins: [\"line-numbers\"] })\n    .process(markdown);\n\n  return result.toString();\n}</code></pre>\n\n\n\n<h4>Adding Prism.js styles and theme</h4>\n\n\n\n<p>Now let&#8217;s import the CSS that Prism.js needs to style the code snippets. In the <code>pages/_app.js</code> file, import the main Prism.js stylesheet, and the stylesheet for whichever theme you&#8217;d like to use. I&#8217;m using Prism.js&#8217;s &#8220;Tomorrow Night&#8221; theme, so my imports look like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import \"prismjs/themes/prism-tomorrow.css\";\nimport \"prismjs/plugins/line-numbers/prism-line-numbers.css\";\nimport \"../styles/prism-overrides.css\";</code></pre>\n\n\n\n<p>Notice I&#8217;ve also started a <code>prism-overrides.css</code> stylesheet where we can tweak some defaults. This will become useful later. For now, it can remain empty.</p>\n\n\n\n<p>And with that, we now have some basic styles. The following code in Markdown:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">```js\nclass Shape {\n  draw() {\n    console.log(\"Uhhh maybe override me\");\n  }\n}\n\nclass Circle {\n  draw() {\n    console.log(\"I'm a circle! :D\");\n  }\n}\n```</code></pre>\n\n\n\n<p>&#8230;should format nicely:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img1-initial-code.png?resize=670%2C331&#038;ssl=1\" alt=\"\" class=\"wp-image-365514\" width=\"670\" height=\"331\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img1-initial-code.png?w=1340&amp;ssl=1 1340w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img1-initial-code.png?resize=300%2C148&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img1-initial-code.png?resize=1024%2C506&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img1-initial-code.png?resize=768%2C379&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3>Adding line numbers</h3>\n\n\n\n<p>You might have noticed that the code snippet we generated does not display line numbers even though we imported the plugin that supports it when we imported remark-prism. The solution is hidden in plain sight in the remark-prism README:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Don&#8217;t forget to include the appropriate css in your stylesheets.</p></blockquote>\n\n\n\n<p>In other words, we need to force a&nbsp;<code>.line-numbers</code>&nbsp;CSS class onto the generated&nbsp;<code>&lt;pre&gt;</code>&nbsp;tag, which we can do like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.19.39-PM.png?resize=606%2C54&#038;ssl=1\" alt=\"\" class=\"wp-image-365549\" width=\"606\" height=\"54\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.19.39-PM.png?w=1212&amp;ssl=1 1212w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.19.39-PM.png?resize=300%2C27&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.19.39-PM.png?resize=1024%2C91&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.19.39-PM.png?resize=768%2C68&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>And with that, we now have line numbers!</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img3-line-numbers.png?resize=670%2C331&#038;ssl=1\" alt=\"\" class=\"wp-image-365515\" width=\"670\" height=\"331\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img3-line-numbers.png?w=1340&amp;ssl=1 1340w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img3-line-numbers.png?resize=300%2C148&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img3-line-numbers.png?resize=1024%2C506&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img3-line-numbers.png?resize=768%2C379&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Note that, based on the version of Prism.js I have and the &#8220;Tomorrow Night&#8221; theme I chose, I needed to add this to the&nbsp;<code>prism-overrides.css</code>&nbsp;file we started above:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.line-numbers span.line-numbers-rows {\n  margin-top: -1px;\n}</code></pre>\n\n\n\n<p>You may not need that, but there you have it. We have line numbers!</p>\n\n\n\n<h3><a href=\"https://github.com/arackaf/my-blog/pull/12#highlighting-lines\" rel=\"noopener\"></a>Highlighting lines</h3>\n\n\n\n<p>Our next feature will be a bit more work. This is where we want the ability to highlight, or call out certain lines of code in the snippet.</p>\n\n\n\n<p>There&#8217;s a&nbsp;<a href=\"https://prismjs.com/plugins/line-highlight/\" rel=\"noopener\">Prism.js line-highlight plugin</a>; unfortunately, it is not integrated with remark-prism. The plugin works by analyzing the formatted code&#8217;s position in the DOM, and manually highlights lines based on that information. That&#8217;s impossible with the remark-prism plugin since there is no DOM at the time the plugin runs. This is, after all, static site generation. Next.js is running our Markdown through a build step and generating HTML to render the blog. All of this Prism.js code runs during this static site generation, when there is no DOM.</p>\n\n\n\n<p>But fear not! There&#8217;s a fun workaround that fits right in with CSS-Tricks: we can use plain CSS (and a dash of JavaScript) to highlight lines of code.</p>\n\n\n\n<p>Let me be clear that this is a non-trivial amount of work. If you don&#8217;t need line highlighting, then feel free to skip to the next section. But if nothing else, it can be a fun demonstration of what&#8217;s possible.</p>\n\n\n\n<h4><a href=\"https://github.com/arackaf/my-blog/pull/12#our-base-css\" rel=\"noopener\"></a>Our base CSS</h4>\n\n\n\n<p>Let&#8217;s start by adding the following CSS to our&nbsp;<code>prism-overrides.css</code>&nbsp;stylesheet:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">:root {\n  --highlight-background: rgb(0 0 0 / 0);\n  --highlight-width: 0;\n}\n\n.line-numbers span.line-numbers-rows > span {\n  position: relative;\n}\n\n.line-numbers span.line-numbers-rows > span::after {\n  content: \" \";\n  background: var(--highlight-background);\n  width: var(--highlight-width);\n  position: absolute;\n  top: 0;\n}</code></pre>\n\n\n\n<p>We&#8217;re defining some CSS custom properties up front: a background color and a highlight width. We&#8217;re setting them to empty values for now. Later, though, we&#8217;ll set meaningful values in JavaScript for the lines we want highlighted.</p>\n\n\n\n<p>We&#8217;re then setting the line number&nbsp;<code>&lt;span&gt;</code>&nbsp;to&nbsp;<code>position: relative</code>, so that we can add a&nbsp;<code>::after</code>&nbsp;pseudo element with absolute positioning. It&#8217;s this pseudo element that we&#8217;ll use to highlight our lines.</p>\n\n\n\n<h4><a href=\"https://github.com/arackaf/my-blog/pull/12#declaring-the-highlighted-lines\" rel=\"noopener\"></a>Declaring the highlighted lines</h4>\n\n\n\n<p>Now, let&#8217;s manually add a&nbsp;<a href=\"https://css-tricks.com/a-complete-guide-to-data-attributes/\">data attribute</a>&nbsp;to the&nbsp;<code>&lt;pre&gt;</code>&nbsp;tag that&#8217;s generated, then read that in code, and use JavaScript to tweak the styles above to highlight specific lines of code. We can do this the same way that we added line numbers before:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.23.28-PM.png?resize=604%2C385&#038;ssl=1\" alt=\"\" class=\"wp-image-365557\" width=\"604\" height=\"385\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.23.28-PM.png?w=1208&amp;ssl=1 1208w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.23.28-PM.png?resize=300%2C191&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.23.28-PM.png?resize=1024%2C653&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/Screen-Shot-2022-04-29-at-12.23.28-PM.png?resize=768%2C490&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This will cause our <code>&lt;pre&gt;</code> element to be rendered with a <code>data-line=\"3,8-10\"</code> attribute, where line 3 and lines 8-10 are highlighted in the code snippet. We can comma-separate line numbers, or provide ranges.</p>\n\n\n\n<p>Let&#8217;s look at how we can parse that in JavaScript, and get highlighting working.</p>\n\n\n\n<h4>Reading the highlighted lines</h4>\n\n\n\n<p>Head over to <code>components/post-body.tsx</code>. If this file is JavaScript for you, feel free to either convert it to TypeScript (<code>.tsx</code>), or just ignore all my typings.</p>\n\n\n\n<p>First, we&#8217;ll need some imports:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import { useEffect, useRef } from \"react\";</code></pre>\n\n\n\n<p>And we need to add a <code>ref</code> to this component:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const rootRef = useRef&lt;HTMLDivElement>(null);</code></pre>\n\n\n\n<p>Then, we apply it to the <code>root</code> element:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;div ref={rootRef} className=\"max-w-2xl mx-auto\"></code></pre>\n\n\n\n<p>The next piece of code is a little long, but it&#8217;s not doing anything crazy. I&#8217;ll show it, then walk through it.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">useEffect(() => {\n  const allPres = rootRef.current.querySelectorAll(\"pre\");\n  const cleanup: (() => void)[] = [];\n\n  for (const pre of allPres) {\n    const code = pre.firstElementChild;\n    if (!code || !/code/i.test(code.tagName)) {\n      continue;\n    }\n\n    const highlightRanges = pre.dataset.line;\n    const lineNumbersContainer = pre.querySelector(\".line-numbers-rows\");\n\n    if (!highlightRanges || !lineNumbersContainer) {\n      continue;\n    }\n\n    const runHighlight = () =>\n      highlightCode(pre, highlightRanges, lineNumbersContainer);\n    runHighlight();\n\n    const ro = new ResizeObserver(runHighlight);\n    ro.observe(pre);\n\n    cleanup.push(() => ro.disconnect());\n  }\n\n  return () => cleanup.forEach(f => f());\n}, []);</code></pre>\n\n\n\n<p>We&#8217;re running an effect once, when the content has all been rendered to the screen. We&#8217;re using <code>querySelectorAll</code> to grab all the <code>&lt;pre&gt;</code> elements under this <code>root</code> element; in other words, whatever blog post the user is viewing.</p>\n\n\n\n<p>For each one, we make sure there&#8217;s a <code>&lt;code&gt;</code> element under it, and we check for both the line numbers container and the <code>data-line</code> attribute. That&#8217;s what <code>dataset.line</code> checks. See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset\" rel=\"noopener\">the docs</a> for more info.</p>\n\n\n\n<p>If we make it past the second <code>continue</code>, then <code>highlightRanges</code> is the set of highlights we declared earlier which, in our case, is <code>\"3,8-10\"</code>, where <code>lineNumbersContainer</code> is the container with the <code>.line-numbers-rows</code> CSS class.</p>\n\n\n\n<p>Lastly, we declare a <code>runHighlight</code> function that calls a <code>highlightCode</code> function that I&#8217;m about to show you. Then, we set up a <code>ResizeObserver</code> to run that same function anytime our blog post changes size, i.e., if the user resizes the browser window.</p>\n\n\n\n<h4>The <code>highlightCode</code> function</h4>\n\n\n\n<p>Finally, let&#8217;s see our <code>highlightCode</code> function:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">function highlightCode(pre, highlightRanges, lineNumberRowsContainer) {\n  const ranges = highlightRanges.split(\",\").filter(val => val);\n  const preWidth = pre.scrollWidth;\n\n  for (const range of ranges) {\n    let [start, end] = range.split(\"-\");\n    if (!start || !end) {\n      start = range;\n      end = range;\n    }\n\n    for (let i = +start; i &lt;= +end; i++) {\n      const lineNumberSpan: HTMLSpanElement = lineNumberRowsContainer.querySelector(\n        `span:nth-child(${i})`\n      );\n      lineNumberSpan.style.setProperty(\n        \"--highlight-background\",\n        \"rgb(100 100 100 / 0.5)\"\n      );\n      lineNumberSpan.style.setProperty(\"--highlight-width\", `${preWidth}px`);\n    }\n  }\n}</code></pre>\n\n\n\n<p>We get each range and read the width of the <code>&lt;pre&gt;</code> element. Then we loop through each range, find the relevant line number <code>&lt;span&gt;</code>, and set the CSS custom property values for them. We set whatever highlight color we want, and we set the width to the total <code>scrollWidth</code> value of the <code>&lt;pre&gt;</code> element. I kept it simple and used <code>\"rgb(100 100 100 / 0.5)\"</code> but feel free to use whatever color you think looks best for your blog.</p>\n\n\n\n<p>Here&#8217;s what it looks like:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img4-highlight-lines.png?resize=664%2C328&#038;ssl=1\" alt=\"Syntax highlighting for a block of Markdown code.\" class=\"wp-image-365519\" width=\"664\" height=\"328\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img4-highlight-lines.png?w=1328&amp;ssl=1 1328w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img4-highlight-lines.png?resize=300%2C148&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img4-highlight-lines.png?resize=1024%2C506&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img4-highlight-lines.png?resize=768%2C379&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h4>Line highlighting without line numbers</h4>\n\n\n\n<p>You may have noticed that all of this so far depends on line numbers being present. But what if we want to highlight lines, but without line numbers?</p>\n\n\n\n<p>One way to implement this would be to keep everything the same and add a new option to simply hide those line numbers with CSS. First, we&#8217;ll add a new CSS class, <code>.hide-numbers</code>:</p>\n\n\n\n<pre rel=\"Markdown\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">```js[class=\"line-numbers\"][class=\"hide-numbers\"][data-line=\"3,8-10\"]\nclass Shape {\n  draw() {\n    console.log(\"Uhhh maybe override me\");\n  }\n}\n\nclass Circle {\n  draw() {\n    console.log(\"I'm a circle! :D\");\n  }\n}\n```</code></pre>\n\n\n\n<p>Now let&#8217;s add CSS rules to hide the line numbers when the <code>.hide-numbers</code> class is applied:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.line-numbers.hide-numbers {\n  padding: 1em !important;\n}\n.hide-numbers .line-numbers-rows {\n  width: 0;\n}\n.hide-numbers .line-numbers-rows > span::before {\n  content: \" \";\n}\n.hide-numbers .line-numbers-rows > span {\n  padding-left: 2.8em;\n}</code></pre>\n\n\n\n<p>The first rule undoes the shift to the right from our base code in order to make room for the line numbers. By default, the padding of the Prism.js theme I chose is <code>1em</code>. The line-numbers plugin increases it to <code>3.8em</code>, then inserts the line numbers with absolute positioning. What we did reverts the padding back to the <code>1em</code> default.</p>\n\n\n\n<p>The second rule takes the container of line numbers, and squishes it to have no width. The third rule erases all of the line numbers themselves (they&#8217;re generated with <code>::before</code> pseudo elements).</p>\n\n\n\n<p>The last rule simply shifts the now-empty line number <code>&lt;span&gt;</code> elements back to where they would have been so that the highlighting can be positioned how we want it. Again, for my theme, the line numbers normally adds <code>3.8em</code> worth of left padding, which we reverted back to the default <code>1em</code>. These new styles add the other <code>2.8em</code> so things are back to where they should be, but with the line numbers hidden. If you&#8217;re using different plugins, you might need slightly different values.</p>\n\n\n\n<p>Here&#8217;s what the result looks like:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img5-highlight-no-numbers.png?resize=668%2C331&#038;ssl=1\" alt=\"Syntax highlighting for a block of Markdown code.\" class=\"wp-image-365521\" width=\"668\" height=\"331\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img5-highlight-no-numbers.png?w=1336&amp;ssl=1 1336w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img5-highlight-no-numbers.png?resize=300%2C149&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img5-highlight-no-numbers.png?resize=1024%2C507&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img5-highlight-no-numbers.png?resize=768%2C381&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3>Copy-to-Clipboard feature</h3>\n\n\n\n<p>Before we wrap up, let&#8217;s add one finishing touch: a button allowing our dear reader to copy the code from our snippet. It&#8217;s a nice little enhancement that spares people from having to manually select and copy the code snippets.</p>\n\n\n\n<p>It&#8217;s actually somewhat straightforward. There&#8217;s a <code>navigator.clipboard.writeText</code> API for this. We pass that method the text we&#8217;d like to copy, and that&#8217;s that. We can inject a button next to every one of our <code>&lt;code&gt;</code> elements to send the code&#8217;s text to that API call to copy it. We&#8217;re already messing with those <code>&lt;code&gt;</code> elements in order to highlight lines, so let&#8217;s integrate our copy-to-clipboard button in the same place.</p>\n\n\n\n<p>First, from the <code>useEffect</code> code above, let&#8217;s add one line:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">useEffect(() => {\n  const allPres = rootRef.current.querySelectorAll(\"pre\");\n  const cleanup: (() => void)[] = [];\n\n  for (const pre of allPres) {\n    const code = pre.firstElementChild;\n    if (!code || !/code/i.test(code.tagName)) {\n      continue;\n    }\n\n    pre.appendChild(createCopyButton(code));</code></pre>\n\n\n\n<p>Note the last line. We&#8217;re going to append our button right into the DOM underneath our <code>&lt;pre&gt;</code> element, which is already <code>position: relative</code>, allowing us to position the button more easily.</p>\n\n\n\n<p>Let&#8217;s see what the <code>createCopyButton</code> function looks like:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">function createCopyButton(codeEl) {\n  const button = document.createElement(\"button\");\n  button.classList.add(\"prism-copy-button\");\n  button.textContent = \"Copy\";\n\n  button.addEventListener(\"click\", () => {\n    if (button.textContent === \"Copied\") {\n      return;\n    }\n    navigator.clipboard.writeText(codeEl.textContent || \"\");\n    button.textContent = \"Copied\";\n    button.disabled = true;\n    setTimeout(() => {\n      button.textContent = \"Copy\";\n      button.disabled = false;\n    }, 3000);\n  });\n\n  return button;\n}</code></pre>\n\n\n\n<p>Lots of code, but it&#8217;s mostly boilerplate. We create our button then give it a CSS class and some text. And then, of course, we create a click handler to do the copying. After the copy is done, we change the button&#8217;s text and disable it for a few seconds to help give the user feedback that it worked.</p>\n\n\n\n<p>The real work is on this line:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">navigator.clipboard.writeText(codeEl.textContent || \"\");</code></pre>\n\n\n\n<p>We&#8217;re passing <code>codeEl.textContent</code> rather than <code>innerHTML</code> since we want only the actual text that&#8217;s rendered, rather than all the markup Prism.js adds in order to format our code nicely.</p>\n\n\n\n<p>Now let&#8217;s see how we might style this button. I&#8217;m no designer, but this is what I came up with:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.prism-copy-button {\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 10ch;\n  background-color: rgb(100 100 100 / 0.5);\n  border-width: 0;\n  color: rgb(0, 0, 0);\n  cursor: pointer;\n}\n\n.prism-copy-button[disabled] {\n  cursor: default;\n}</code></pre>\n\n\n\n<p>Which looks like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full is-resized\"><img loading=\"lazy\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?resize=896%2C320&#038;ssl=1\" alt=\"Syntax highlighting for a block of Markdown code.\" class=\"wp-image-365524\" width=\"896\" height=\"320\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?w=1792&amp;ssl=1 1792w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?resize=300%2C107&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?resize=1024%2C366&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?resize=768%2C274&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/img6-copy-button.jpg?resize=1536%2C549&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>And it works! It copies our code, and even preserves the formatting (i.e. new lines and indentation)!</p>\n\n\n\n<h3>Wrapping up</h3>\n\n\n\n<p>I hope this has been useful to you. Prism.js is a wonderful library, but it wasn&#8217;t originally written for static sites. This post walked you through some tips and tricks for bridging that gap, and getting it to work well with a Next.js site.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/syntax-highlighting-prism-on-a-next-js-site/\">Syntax Highlighting (and More!) With Prism on a Static Site</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/syntax-highlighting-prism-on-a-next-js-site/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "365510",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "So, you’ve decided to build a blog with Next.js [https://nextjs.org]. Like any\ndev blogger, you’d like to have code snippets in your posts that are formatted\nnicely with syntax highlighting. Perhaps y...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "5 Pitfalls of Using Micro Frontends and How to Avoid Them"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/micro-frontend-architecture-pitfalls/?utm_source=rss\"\n              title=\"5 Pitfalls of Using Micro Frontends and How to Avoid Them\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls.jpg\"\n        alt=\"5 Pitfalls of Using Micro Frontends and How to Avoid Them\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            The micro frontend approach splits apps into small, independent pieces. Learn five pitfalls of using this architecture and how to avoid them.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/micro-frontend-architecture-pitfalls/?utm_source=rss\">5 Pitfalls of Using Micro Frontends and How to Avoid Them</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/micro-frontend-architecture-pitfalls/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=257336",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Antonello Zanini"
        ],
        "pubDate": [
            "Tue, 01 Feb 2022 02:00:04 GMT"
        ],
        "plainDescription": "5 Pitfalls of Using Micro Frontends and How to Avoid Them\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643674637micro-frontend-pitfalls.jpg]\n[https://www.sitepoint.com/micro-frontend-arc...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The Most Popular React UI Component Libraries in 2022"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss\"\n              title=\"The Most Popular React UI Component Libraries in 2022\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components.jpg\"\n        alt=\"React UI Component Libraries\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            A UI library can help kickstart your React app or web dev project. Learn about 9 popular React UI component libraries and when to use them.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss\">The Most Popular React UI Component Libraries in 2022</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254645",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React",
            "Tools & Libraries"
        ],
        "dc:creator": [
            "Kaarle Varkki"
        ],
        "pubDate": [
            "Mon, 13 Dec 2021 02:00:51 GMT"
        ],
        "plainDescription": "React UI Component Libraries\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1651462170react-ui-components.jpg]\n[https://www.sitepoint.com/popular-react-ui-component-libraries/?utm_source=rs...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Using SVG with Media Queries"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss\"\n              title=\"Using SVG with Media Queries\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries.jpg\"\n        alt=\"Using SVG with Media Queries\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            By using SVGs with media queries, we can change their appearance based on user interaction or viewport size, and use them in multiple places.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss\">Using SVG with Media Queries</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=168375",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "CSS",
            "HTML & CSS"
        ],
        "dc:creator": [
            "Tiffany Brown"
        ],
        "pubDate": [
            "Tue, 31 Aug 2021 01:00:02 GMT"
        ],
        "plainDescription": "Using SVG with Media Queries\n[https://uploads.sitepoint.com/wp-content/uploads/2018/09/1630382754svg-media-queries.jpg]\n[https://www.sitepoint.com/using-svg-with-media-queries/?utm_source=rss] By\nusin...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Jhey Tompkins"
        ],
        "title": [
            "A Guide To Audio Visualization With JavaScript And GSAP (Part 2)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part2/"
        ],
        "pubDate": [
            "Wed, 09 Mar 2022 13:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part2/"
        ],
        "description": [
            "What started as a case study turned into a guide to visualizing audio with JavaScript. Although the output demos are in React, Jhey Tompkins isn’t going to dwell on the React side of things too much. The underlying techniques work with or without React."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part2/\" />\n              <title>A Guide To Audio Visualization With JavaScript And GSAP (Part 2)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>A Guide To Audio Visualization With JavaScript And GSAP (Part 2)</h1>\n                  \n                    \n                    <address>Jhey Tompkins</address>\n                  \n                  <time datetime=\"2022-03-09T13:00:00&#43;00:00\" class=\"op-published\">2022-03-09T13:00:00+00:00</time>\n                  <time datetime=\"2022-03-09T13:00:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p><a href=\"https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part1/\">Last week in Part 1</a>, I explained how the idea about how to record audio input from users and then moved on to the <a href=\"https://www.smashingmagazine.com/2022/03/audio-visualization-javascript-gsap-part1/#visualization\">visualization</a>. After all, without any visualization, any type of audio recording UI isn’t very engaging, is it? Today, we’ll be diving into more details in terms of adding features and any sort of extra touches you like!</p>\n\n<p>We’ll be covering the following:</p>\n\n<ul>\n<li><a href=\"#pausing-a-recording\">How To Pause A Recording</a></li>\n<li><a href=\"#padding-out-the-visuals\">How To Pad Out The Visuals</a></li>\n<li><a href=\"#finishing-the-recording\">How To Finish The Recording</a></li>\n<li><a href=\"#scrubbing-the-values-on-playback\">Scrubbing The Values On Playback</a></li>\n<li><a href=\"#audio-playback-from-other-sources\">Audio Playback From Other Sources</a></li>\n<li><a href=\"http://localhost:3000/2022/03/audio-visualization-javascript-gsap-part2/#turning-this-into-a-react-application\">Turning This Into A React Application</a></li>\n</ul>\n\n<p>Please note that in order to see the demos in action, you’ll need to open and test directly them on the CodePen website.</p>\n\n<h2 id=\"pausing-a-recording\">Pausing A Recording</h2>\n\n<p>Pausing a recording doesn’t take much code at all.</p>\n\n<pre><code class=\"language-javascript\">// Pause a recorder\nrecorder.pause()\n// Resume a recording\nrecorder.resume()\n</code></pre>\n\n<p>In fact, the trickiest part about integrating recording is designing your UI. Once you’ve got a UI design, it’ll likely be more about the changes you need for that.</p>\n\n<p>Also, pausing a recording doesn’t pause our animation. So we need to make sure we stop that too. We only want to add new bars whilst we are recording. To determine what state the recorder is in, we can use the <code>state</code> property mentioned earlier. Here’s our updated toggle functionality:</p>\n\n<pre><code class=\"language-javascript\">const RECORDING = recorder.state === 'recording'\n// Pause or resume recorder based on state.\nTOGGLE.style.setProperty('--active', RECORDING ? 0 : 1)\ntimeline[RECORDING ? 'pause' : 'play']()\nrecorder[RECORDING ? 'pause' : 'resume']()\n</code></pre>\n\n<p>And here’s how we can determine whether to add new bars in the reporter or not.</p>\n\n<pre><code class=\"language-javascript\">REPORT = () => {\n  if (recorder && recorder.state === 'recording') {\n</code></pre>\n\n<p><strong>Challenge</strong>: <em>Could we also remove the report function from <code>gsap.ticker</code> for extra performance? Try it out.</em></p>\n\n<p>For our demo, we’ve changed it so the record button becomes a pause button. And once a recording has begun, a stop button appears. This will need some extra code to handle that state. React is a good fit for this but we can lean into the <code>recorder.state</code> value.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"BamgQEP\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [15. Pausing a Recording](https://codepen.io/smashingmag/pen/BamgQEP) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/BamgQEP\">15. Pausing a Recording</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<h2 id=\"padding-out-the-visuals\">Padding Out The Visuals</h2>\n\n<p>Next, we need to pad out our visuals. What do we mean by that? Well, we go from an empty canvas to bars streaming across. It’s quite a contrast and it would be nice to have the canvas filled with zero volume bars on start. There is no reason we can’t do this either based on how we are generating our bars. Let’s start by creating a padding function, <code>padTimeline</code>:</p>\n\n<pre><code class=\"language-javascript\">// Move BAR_DURATION out of scope so it’s a shared variable.\nconst BAR_DURATION =\n  CANVAS.width / ((CONFIG.barWidth + CONFIG.barGap) * CONFIG.fps)\n\nconst padTimeline = () => {\n  // Doesn’t matter if we have more bars than width. We will shift them over to the correct spot\n  const padCount = Math.floor(CANVAS.width / CONFIG.barWidth)\n\n  for (let p = 0; p < padCount; p++) {\n    const BAR = {\n      x: CANVAS.width + CONFIG.barWidth / 2,\n      // Note the volume is 0\n      size: gsap.utils.mapRange(\n        0,\n        100,\n        CANVAS.height * CONFIG.barMinHeight,\n        CANVAS.height * CONFIG.barMaxHeight\n      )(volume),\n    }\n    // Add to bars Array\n    BARS.push(BAR)\n    // Add the bar animation to the timeline\n    // The actual pixels per second is (1 / fps * shift) * fps\n    // if we have 50fps, the bar needs to have moved bar width before the next comes in\n    // 1/50 = 4 === 50 * 4 = 200\n    timeline.to(\n      BAR,\n      {\n        x: `-=${CANVAS.width + CONFIG.barWidth}`,\n        ease: 'none',\n        duration: BAR_DURATION,\n      },\n      BARS.length * (1 / CONFIG.fps)\n    )\n    }\n  // Sets the timeline to the correct spot for being added to\n  timeline.totalTime(timeline.totalDuration() - BAR_DURATION)\n}\n</code></pre>\n\n<p>The trick here is to add new bars and then set the playhead of the timeline to where the bars fill the canvas. At the point of padding the timeline, we know that we only have padding bars so <code>totalDuration</code> can be used.</p>\n\n<pre><code class=\"language-javascript\">timeline.totalTime(timeline.totalDuration() - BAR_DURATION)\n</code></pre>\n\n<p>Notice how that functionality is very like what we do inside the <code>REPORT</code> function? We have a good opportunity to refactor here. Let’s create a new function named <code>addBar</code>. This adds a new bar based on the passed <code>volume</code>.</p>\n\n<pre><code class=\"language-javascript\">const addBar = (volume = 0) => {\n  const BAR = {\n    x: CANVAS.width + CONFIG.barWidth / 2,\n    size: gsap.utils.mapRange(\n      0,\n      100,\n      CANVAS.height * CONFIG.barMinHeight,\n      CANVAS.height * CONFIG.barMaxHeight\n    )(volume),\n  }\n  BARS.push(BAR)\n  timeline.to(\n    BAR,\n    {\n      x: `-=${CANVAS.width + CONFIG.barWidth}`,\n      ease: 'none',\n      duration: BAR_DURATION,\n    },\n    BARS.length * (1 / CONFIG.fps)\n  )\n}\n</code></pre>\n\n<p>Now our <code>padTimeline</code> and <code>REPORT</code> functions can make use of this:</p>\n\n<pre><code class=\"language-javascript\">const padTimeline = () => {\n  const padCount = Math.floor(CANVAS.width / CONFIG.barWidth)\n  for (let p = 0; p < padCount; p++) {\n    addBar()\n  }\n  timeline.totalTime(timeline.totalDuration() - BAR_DURATION)\n}\n\nREPORT = () => {\n  if (recorder && recorder.state === 'recording') {\n    ANALYSER.getByteFrequencyData(DATA_ARR)\n    const VOLUME = Math.floor((Math.max(...DATA_ARR) / 255) * 100)\n    addBar(VOLUME)\n  }\n  if (recorder || visualizing) {\n    drawBars()\n  }\n}\n</code></pre>\n\n<p>Now, on load, we can do an initial rendering by invoking <code>padTimeline</code> followed by <code>drawBars</code>.</p>\n\n<pre><code class=\"language-javascript\">padTimeline()\ndrawBars()\n</code></pre>\n\n<p>Putting it all together and that’s another neat feature!</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"OJOebYE\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [16. Padding out the Timeline](https://codepen.io/smashingmag/pen/OJOebYE) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/OJOebYE\">16. Padding out the Timeline</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<h3 id=\"how-we-finish\">How We Finish</h3>\n\n<p>Do you want to pull the component down or do a rewind, maybe a rollout? How does this affect performance? A rollout is easier. But a rewind is trickier and might have perf hits.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"finishing-the-recording\">Finishing The Recording</h2>\n\n<p>You can finish up your recording any way you like. You could stop the animation and leave it there. Or, if we stop the animation we could roll back the animation to the start. This is often used in various UI/UX designs. And the GSAP API gives us a neat way to do this. Instead of clearing our timeline on stop, we can move this into where we start a recording to reset the timeline. But, once we’ve finished a recording, let’s keep the animation around so we can use it.</p>\n\n<pre><code class=\"language-javascript\">STOP.addEventListener('click', () => {\n  if (recorder) recorder.stop()\n  AUDIO_CONTEXT.close()\n  // Pause the timeline\n  timeline.pause()\n  // Animate the playhead back to the START_POINT\n  gsap.to(timeline, {\n    totalTime: START_POINT,\n    onComplete: () => {\n      gsap.ticker.remove(REPORT)\n    }\n  })\n})\n</code></pre>\n\n<p>In this code, we tween the <code>totalTime</code> back to where we set the playhead in <code>padTimeline</code>.\nThat means we needed to create a variable for sharing that.</p>\n\n<pre><code class=\"language-javascript\">let START_POINT\n</code></pre>\n\n<p>And we can set that within <code>padTimeline</code>.</p>\n\n<pre><code class=\"language-javascript\">const padTimeline = () => {\n  const padCount = Math.floor(CANVAS.width / CONFIG.barWidth)\n  for (let p = 0; p < padCount; p++) {\n    addBar()\n  }\n  START_POINT = timeline.totalDuration() - BAR_DURATION\n  // Sets the timeline to the correct spot for being added to\n  timeline.totalTime(START_POINT)\n}\n</code></pre>\n\n<p>We can clear the timeline inside the <code>RECORD</code> function when we start a recording:</p>\n\n<pre><code class=\"language-javascript\">// Reset the timeline\ntimeline.clear()\n</code></pre>\n\n<p>And this gives us what is becoming a pretty neat audio visualizer:</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"LYOKbKW\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [17. Rewinding on Stop](https://codepen.io/smashingmag/pen/LYOKbKW) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/LYOKbKW\">17. Rewinding on Stop</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<h2 id=\"scrubbing-the-values-on-playback\">Scrubbing The Values On Playback</h2>\n\n<p>Now we’ve got our recording, we can play it back with the <code>&lt;audio&gt;</code> element. But, we’d like to sync our visualization with the recording playback. With GSAP’s API, this is far easier than you might expect.</p>\n\n<pre><code class=\"language-javascript\">const SCRUB = (time = 0, trackTime = 0) => {\n  gsap.to(timeline, {\n    totalTime: time,\n    onComplete: () => {\n      AUDIO.currentTime = trackTime\n      gsap.ticker.remove(REPORT)\n    },\n  })\n}\nconst UPDATE = e => {\n  switch (e.type) {\n    case 'play':\n      timeline.totalTime(AUDIO.currentTime + START_POINT)\n      timeline.play()\n      gsap.ticker.add(REPORT)\n      break\n    case 'seeking':\n    case 'seeked':\n      timeline.totalTime(AUDIO.currentTime + START_POINT)\n      break\n    case 'pause':\n      timeline.pause()\n      break\n    case 'ended':\n      timeline.pause()\n      SCRUB(START_POINT)\n      break\n  }\n}\n\n// Set up AUDIO scrubbing\n['play', 'seeking', 'seeked', 'pause', 'ended']\n  .forEach(event => AUDIO.addEventListener(event, UPDATE))\n</code></pre>\n\n<p>We’ve refactored the functionality that we use when stopping to scrub the timeline. And then it’s a case of listening for different events on the <code>&lt;audio&gt;</code> element. Each event requires updating the timeline playhead.  We can add and remove <code>REPORT</code> to the <code>ticker</code> based on when we play and stop audio.  But, this does have an edge case. If you seek after the audio has &ldquo;ended&rdquo;, the visualization won’t render updates. And that’s because we remove <code>REPORT</code> from the <code>ticker</code> in <code>SCRUB</code>. You could opt to not remove <code>REPORT</code> at all until a new recording begins or you move to another state in your app. It’s a matter of monitoring performance and what feels right.</p>\n\n<p>The fun part here though is that if you make a recording, you can scrub the visualization when you seek 😎</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"qBVzRaj\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [18. Syncing with Playback](https://codepen.io/smashingmag/pen/qBVzRaj) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/qBVzRaj\">18. Syncing with Playback</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>At this point, you know everything you need to know. But, if you want to learn about some extra things, keep reading.</p>\n\n<h2 id=\"audio-playback-from-other-sources\">Audio Playback From Other Sources</h2>\n\n<p>One thing we haven’t looked at is how you visualize audio from a source other than an input device. For example, an mp3 file. And this brings up an interesting challenge or problem to think about.</p>\n\n<p>Let’s consider a demo where we have an audio file URL and we want to visualize it with our visualization. We can explicitly set our <code>AUDIO</code> element’s <code>src</code> before visualizing.</p>\n\n<pre><code class=\"language-javascript\">AUDIO.src = 'https://assets.codepen.io/605876/lobo-loco-spencer-bluegrass-blues.mp3'\n// NOTE:: This is required in some circumstances due to CORS\nAUDIO.crossOrigin = 'anonymous'\n</code></pre>\n\n<p>We no longer need to think about setting up the recorder or using the controls to trigger it. As we have an audio element, we can set the visualization to hook into the source direct.</p>\n\n<pre><code class=\"language-javascript\">const ANALYSE = stream => {\n  if (AUDIO_CONTEXT) return\n  AUDIO_CONTEXT = new AudioContext()\n  ANALYSER = AUDIO_CONTEXT.createAnalyser()\n  ANALYSER.fftSize = CONFIG.fft\n  const DATA_ARR = new Uint8Array(ANALYSER.frequencyBinCount)\n  SOURCE = AUDIO_CONTEXT.createMediaElementSource(AUDIO)\n  const GAIN_NODE = AUDIO_CONTEXT.createGain()\n  GAIN_NODE.value = 0.5\n  GAIN_NODE.connect(AUDIO_CONTEXT.destination)\n  SOURCE.connect(GAIN_NODE)\n  SOURCE.connect(ANALYSER)\n\n  // Reset the bars and pad them out...\n  if (BARS && BARS.length > 0) {\n    BARS.length = 0\n    padTimeline()\n  }\n\n  REPORT = () => {\n    if (!AUDIO.paused || !played) {\n      ANALYSER.getByteFrequencyData(DATA_ARR)\n      const VOLUME = Math.floor((Math.max(...DATA_ARR) / 255) * 100)\n      addBar(VOLUME)\n      drawBars()  \n    }\n  }\n  gsap.ticker.add(REPORT)\n}\n</code></pre>\n\n<p>By doing this we can connect our <code>AudioContext</code> to the <code>audio</code> element. We do this using <code>createMediaElementSource(AUDIO)</code> instead of <code>createMediaStreamSource(stream)</code>. And then the <code>audio</code> elements&rsquo; controls will trigger data getting passed to the analyzer. In fact, we only need to create the <code>AudioContext</code> once. Because once we’ve played the audio track, we aren’t working with a different audio track after. Hence, the <code>return</code> if <code>AUDIO_CONTEXT</code> exists.</p>\n\n<pre><code class=\"language-javascript\">if (AUDIO_CONTEXT) return\n</code></pre>\n\n<p>One other thing to note here. Because we’re hooking up the <code>audio</code> element to an <code>AudioContext</code>, we need to create a gain node. This gain node allows us to hear the audio track.</p>\n\n<pre><code class=\"language-javascript\">SOURCE = AUDIO_CONTEXT.createMediaElementSource(AUDIO)\nconst GAIN_NODE = AUDIO_CONTEXT.createGain()\nGAIN_NODE.value = 0.5\nGAIN_NODE.connect(AUDIO_CONTEXT.destination)\nSOURCE.connect(GAIN_NODE)\nSOURCE.connect(ANALYSER)\n</code></pre>\n\n<p>Things do change a little in how we process events on the audio element. In fact, for this example, when we’ve finished the audio track, we can remove <code>REPORT</code> from the <code>ticker</code>. But, we add <code>drawBars</code> to the <code>ticker</code>. This is so if we play the track again or seek, etc. we don’t need to process the audio again. This is like how we handled playback of the visualization with the recorder.</p>\n\n<p>This update happens inside the <code>SCRUB</code> function and you can also see a new <code>played</code> variable. We can use this to determine whether we’ve processed the whole audio track.</p>\n\n<pre><code class=\"language-javascript\">const SCRUB = (time = 0, trackTime = 0) => {\n  gsap.to(timeline, {\n    totalTime: time,\n    onComplete: () => {\n      AUDIO.currentTime = trackTime\n      if (!played) {\n        played = true\n        gsap.ticker.remove(REPORT)\n        gsap.ticker.add(drawBars) \n      }\n    },\n  })\n}\n</code></pre>\n\n<p>Why not add and remove <code>drawBars</code> from the <code>ticker</code> based on what we are doing with the audio element? We could do this. We could look at <code>gsap.ticker._listeners</code> and determine if <code>drawBars</code> was already used or not. We may choose to add and remove when playing and pausing. And then we could also add and remove when seeking and finishing seeking. The trick would be making sure we don’t add to the <code>ticker</code> too much when &ldquo;seeking&rdquo;. And this would be where to check if <code>drawBars</code> was already part of the ticker. This is of course dependent on performance though. Is that optimization going to be worth the minimal performance gain? It comes down to what exactly your app needs to do. For this demo, once the audio gets processed, we are switching out the <code>ticker</code> function. That’s because we don’t need to process the audio again. And leaving <code>drawBars</code> running in the <code>ticker</code> shows no performance hit.</p>\n\n<pre><code class=\"language-javascript\">const UPDATE = e => {\n  switch (e.type) {\n    case 'play':\n      if (!played) ANALYSE()\n      timeline.totalTime(AUDIO.currentTime + START_POINT)\n      timeline.play()\n      break\n    case 'seeking':\n    case 'seeked':\n      timeline.totalTime(AUDIO.currentTime + START_POINT)\n      break \n    case 'pause':\n      timeline.pause()\n      break\n    case 'ended':\n      timeline.pause()\n      SCRUB(START_POINT)\n      break\n  }\n}\n</code></pre>\n\n<p>Our <code>switch</code> statement is much the same but we instead only <code>ANALYSE</code> if we haven’t <code>played</code> the track.</p>\n\n<p>And this gives us the following demo:</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"rNYEjWe\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [19. Processing Audio Files](https://codepen.io/smashingmag/pen/rNYEjWe) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/rNYEjWe\">19. Processing Audio Files</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p><strong>Challenge</strong>: <em>Could you extend this demo to support different tracks? Try extending the demo to accept different audio tracks. Maybe a user can select from dropdown or input a URL.</em></p>\n\n<p>This demo leads to an interesting problem that arose when working on &ldquo;Record a Call&rdquo; for <a href=\"https://twitter.com/kentcdodds\">Kent C. Dodds</a>. It’s not one I’d needed to deal with before. In the demo above, start playing the audio and seek forwards in the track before it finishes playing. Seeking forwards breaks the visualization because we are skipping ahead of time. And that means we are skipping processing certain parts of the audio.</p>\n\n<p>How can you resolve this? It’s an interesting problem. You want to build the animation timeline before you play audio. But, to build it, you need to play through the audio first. Could you disable &ldquo;seeking&rdquo; until you’ve played through once? You could. At this point, you might start drifting into the world of custom audio players. Definitely out of scope for this article. In a real-world scenario, you may be able to put server-side processing in place. This might give you a way to get the audio data ahead of time before playing it.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<p>For Kent’s “<a href=\"https://kentcdodds.com/calls/record\">Record a Call</a>”, we can take a different approach. We are processing the audio as it’s recorded. And each bar gets represented by a number. If we create an <code>Array</code> of numbers representing the bars, we already have the data to build the animation. When a recording gets submitted, the data can go with it. Then when we make a request for audio, we can get that data too and build the visualization before playback.</p>\n\n<p>We can use the <code>addBar</code> function we defined earlier whilst looping over the audio data <code>Array</code>.</p>\n\n<pre><code class=\"language-javascript\">// Given an audio data Array example\nconst AUDIO_DATA = [100, 85, 43, 12, 36, 0, 0, 0, 200, 220, 130]\n\nconst buildViz = DATA => {\n  DATA.forEach(bar => addBar(bar))\n}\n\nbuildViz(AUDIO_DATA)\n</code></pre>\n\n<p>Building our visualizations without processing the audio again is a great performance win.</p>\n\n<p>Consider this extended demo of our recording demo. Each recording gets stored in <code>localStorage</code>. And we can load a recording to play it. But, instead of processing the audio to play it, we build a new bars animation and set the audio element <code>src</code>.</p>\n\n<p><strong>Note</strong>: <em>You need to scroll down to see stored recordings in the &lt;details&gt; and &lt;summary&gt; element.</em></p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"KKyjaaP\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [20. Saved Recordings ✨](https://codepen.io/smashingmag/pen/KKyjaaP) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/KKyjaaP\">20. Saved Recordings ✨</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>What needs to happen here to store and playback recordings? Well, it doesn’t take much as we have the bulk of functionality in place. And as we’ve refactored things into mini utility functions, this makes things easier.</p>\n\n<p>Let’s start with how we are going to store the recordings in <code>localStorage</code>. On page load, we are going to hydrate a variable from <code>localStorage</code>. If there is nothing to hydrate with, we can instantiate the variable with a default value.</p>\n\n<pre><code class=\"language-javascript\">const INITIAL_VALUE = { recordings: []}\nconst KEY = 'recordings'\nconst RECORDINGS = window.localStorage.getItem(KEY)\n  ? JSON.parse(window.localStorage.getItem(KEY))\n  : INITIAL_VALUE\n</code></pre>\n\n<p>Now. It’s worth noting that this guide isn’t about building a polished app or experience. It’s giving you the tools you need to go off and make it your own. I’m saying this because some of the UX, you might want to put in place in a different way.</p>\n\n<p>To save a recording, we can trigger a save in the <code>ondataavailable</code> method we’ve been using.</p>\n\n<pre><code class=\"language-javascript\">recorder.ondataavailable = (event) => {\n  // All the other handling code\n  // save the recording\n  if (confirm('Save Recording?')) {\n    saveRecording()\n  }\n}\n</code></pre>\n\n<p>The process of saving a recording requires a little &ldquo;trick&rdquo;. We need to convert our <code>AudioBlob</code> into a String. That way, we can save it to <code>localStorage</code>. To do this, we use the <code>FileReader</code> API to convert the <code>AudioBlob</code> to a data URL. Once we have that, we can create a new recording object and persist it to <code>localStorage</code>.</p>\n\n<pre><code class=\"language-javascript\">const saveRecording = async () => {\n  const reader = new FileReader()\n  reader.onload = e => {\n    const audioSafe = e.target.result\n    const timestamp = new Date()\n    RECORDINGS.recordings = [\n      ...RECORDINGS.recordings,\n      {\n        audioBlob: audioSafe,\n        metadata: METADATA,\n        name: timestamp.toUTCString(),\n        id: timestamp.getTime(),\n      },\n    ]\n    window.localStorage.setItem(KEY, JSON.stringify(RECORDINGS))\n    renderRecordings()\n    alert('Recording Saved')  \n  }\n  await reader.readAsDataURL(AUDIO_BLOB)\n}\n</code></pre>\n\n<p>You could create whatever type of format you like here. For ease, I’m using the time as an <code>id</code>. The <code>metadata</code> field is the <code>Array</code> we use to build our animation. The <code>timestamp</code> field is being used like a &ldquo;name&rdquo;. But, you could do something like name it based on the number of recordings. Then you could update the UI to allow users to rename the recording. Or you could even do it through the save step with <code>window.prompt</code>.</p>\n\n<p>In fact, this demo uses the <code>window.prompt</code> UX so you can see how that would work.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"oNorBwp\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [21. Prompt for Recording Name 🚀](https://codepen.io/smashingmag/pen/oNorBwp) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oNorBwp\">21. Prompt for Recording Name 🚀</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>You may be wondering what <code>renderRecordings</code> does. Well, as we aren’t using a framework, we need to update the UI ourselves. We call this function on load and every time we save or delete a recording.</p>\n\n<p>The idea is that if we have recordings, we loop over them and create list items to append to our recordings list. If we don’t have any recordings, we are showing a message to the user.</p>\n\n<p>For each recording, we create two buttons. One for playing the recording, and another for deleting the recording.</p>\n\n<pre><code class=\"language-javascript\">const renderRecordings = () => {\n  RECORDINGS_LIST.innerHTML = ''\n  if (RECORDINGS.recordings.length > 0) {\n    RECORDINGS_MESSAGE.style.display = 'none'\n    RECORDINGS.recordings.reverse().forEach(recording => {\n      const LI = document.createElement('li')\n      LI.className = 'recordings__recording'\n      LI.innerHTML = `&lt;span&gt;${recording.name}&lt;/span&gt;`\n      const BTN = document.createElement('button')\n      BTN.className = 'recordings__play recordings__control'\n      BTN.setAttribute('data-recording', recording.id)\n      BTN.title = 'Play Recording'\n      BTN.innerHTML = SVGIconMarkup\n      LI.appendChild(BTN)\n      const DEL = document.createElement('button')\n      DEL.setAttribute('data-recording', recording.id)\n      DEL.className = 'recordings__delete recordings__control'\n      DEL.title = 'Delete Recording'\n      DEL.innerHTML = SVGIconMarkup\n      LI.appendChild(DEL)\n      BTN.addEventListener('click', playRecording)\n      DEL.addEventListener('click', deleteRecording)\n      RECORDINGS_LIST.appendChild(LI)\n    })\n  } else {\n    RECORDINGS_MESSAGE.style.display = 'block'\n  }\n}\n</code></pre>\n\n<p>Playing a recording means setting the <code>AUDIO</code> element <code>src</code> and generating the visualization. Before playing a recording or when we delete a recording, we reset the state of the UI with a <code>reset</code> function.</p>\n\n<pre><code class=\"language-javascript\">const reset = () => {\n  AUDIO.src = null\n  BARS.length = 0\n  gsap.ticker.remove(REPORT)\n  REPORT = null\n  timeline.clear()\n  padTimeline()\n  drawBars()\n}\n\nconst playRecording = (e) => {\n  const idToPlay = parseInt(e.currentTarget.getAttribute('data-recording'), 10)\n  reset()\n  const RECORDING = RECORDINGS.recordings.filter(recording => recording.id === idToPlay)[0]\n  RECORDING.metadata.forEach(bar => addBar(bar))\n  REPORT = drawBars\n  AUDIO.src = RECORDING.audioBlob\n  AUDIO.play()\n}\n</code></pre>\n\n<p>The actual method of playback and showing the visualization comes down to four lines.</p>\n\n<pre><code class=\"language-javascript\">RECORDING.metadata.forEach(bar => addBar(bar))\nREPORT = drawBars\nAUDIO.src = RECORDING.audioBlob\nAUDIO.play()\n</code></pre>\n\n<ol>\n<li>Loop over the metadata Array to build the <code>timeline</code>.</li>\n<li>Set the <code>REPORT</code> function to <code>drawBars</code>.</li>\n<li>Set the <code>AUDIO</code> src.</li>\n<li>Play the audio which in turn triggers the animation <code>timeline</code> to play.</li>\n</ol>\n\n<p><strong>Challenge</strong>: <em>Can you spot any edge cases in the UX? Any issues that could arise? What if we are recording and then choose to play a recording? Could we disable controls when we are in recording mode?</em></p>\n\n<p>To delete a recording, we use the same <code>reset</code> method but we set a new value in <code>localStorage</code> for our recordings. Once we’ve done that, we need to <code>renderRecordings</code> to show the updates.</p>\n\n<pre><code class=\"language-javascript\">const deleteRecording = (e) => {\n  if (confirm('Delete Recording?')) {\n    const idToDelete = parseInt(e.currentTarget.getAttribute('data-recording'), 10)\n    RECORDINGS.recordings = [...RECORDINGS.recordings.filter(recording => recording.id !== idToDelete)]\n    window.localStorage.setItem(KEY, JSON.stringify(RECORDINGS))\n    reset()\n    renderRecordings()    \n  }\n}\n</code></pre>\n\n<p>At this stage, we have a functional voice recording app using <code>localStorage</code>. It makes for an interesting start point that you could take and add new features to and improve the UX. For example, how about making it possible for users to download their recordings? Or what if different users could have different themes for their visualization? You could store colors, speeds, etc. against recordings. Then it would be a case of updating the canvas properties and catering for changes in the timeline build. For “Record a Call”, we supported different canvas colors based on the team a user was part of.</p>\n\n<p>This demo supports downloading tracks in the <code>.ogg</code> format.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"bGYPgqJ\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [22. Downloadable Recordings 🚀](https://codepen.io/smashingmag/pen/bGYPgqJ) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/bGYPgqJ\">22. Downloadable Recordings 🚀</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>But you could take this app in various directions. Here are some ideas to think about:</p>\n\n<ul>\n<li>Reskin the app with a different &ldquo;look and feel&rdquo;</li>\n<li>Support different playback speeds</li>\n<li>Create different visualization styles. For example, how might you record the metadata for a waveform type visualization?</li>\n<li>Displaying the recordings count to the user</li>\n<li>Improve the UX catching edge cases such as the recording to playback scenario from earlier.</li>\n<li>Allow users to choose their audio input device</li>\n<li>Take your visualizations 3D with something like ThreeJS</li>\n<li>Limit the recording time. This would be vital in a real-world app. You would want to limit the size of the data getting sent to the server. It would also enforce recordings to be concise.</li>\n<li>Currently, downloading would only work in <code>.ogg</code> format. We can’t encode the recording to <code>mp3</code> in the browser. But you could use serverless with <a href=\"https://www.npmjs.com/package/ffmpeg\">ffmpeg</a> to convert the audio to <code>.mp3</code> for the user and return it.</li>\n</ul>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"turning-this-into-a-react-application\">Turning This Into A React Application</h2>\n\n<p>Well. If you’ve got this far, you have all the fundamentals you need to go off and have fun making audio recording apps. But, I did mention at the top of the article, we used React on the project. As our demos have got more complex and we’ve introduced &ldquo;state&rdquo;, using a framework makes sense. We aren’t going to go deep into building the app out with React but we can touch on how to approach it. If you’re new to React, check out this &ldquo;<a href=\"https://www.smashingmagazine.com/2021/05/get-started-whac-a-mole-react-game/\">Getting Started Guide</a>&rdquo; that will get you in a good place.</p>\n\n<p>The main problem we face when switching over to React land is thinking about how we break things up. There isn’t a right or wrong. And then that introduces the problem of how we pass data around via props, etc. For this app, it’s not too tricky. We could have a component for the visualization, the audio playback, and recordings. And then we may opt to wrap them all inside one parent component.</p>\n\n<p>For passing data around and accessing things in the DOM, <code>React.useRef</code> plays an important part. This is “a” React version of the app we’ve built.</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"ZEadLyW\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [23. Taking it to React Land 🚀](https://codepen.io/smashingmag/pen/ZEadLyW) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/ZEadLyW\">23. Taking it to React Land 🚀</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>As stated before, there are different ways to achieve the same goal and we won’t dig into everything. But, we can highlight some of the decisions you may have to make or think about.</p>\n\n<p>For the most part, the functional logic remains the same. But, we can use refs to keep track of certain things. And it’s often the case we need to pass these refs in props to the different components.</p>\n\n<pre><code class=\"language-javascript\">return (\n  &lt;&gt;\n    &lt;AudioVisualization\n      start={start}\n      recording={recording}\n      recorder={recorder}\n      timeline={timeline}\n      drawRef={draw}\n      metadata={metadata}\n      src={src}\n    /&gt;\n    &lt;RecorderControls\n      onRecord={onRecord}\n      recording={recording}\n      paused={paused}\n      onStop={onStop}\n    /&gt;\n    &lt;RecorderPlayback\n      src={src}\n      timeline={timeline}\n      start={start}\n      draw={draw}\n      audioRef={audioRef}\n      scrub={scrub}\n    /&gt;\n    &lt;Recordings\n      recordings={recordings}\n      onDownload={onDownload}\n      onDelete={onDelete}\n      onPlay={onPlay}\n    /&gt;\n  &lt;/&gt;\n)\n</code></pre>\n\n<p>For example, consider how we are passing the <code>timeline</code> around in a prop. This is a <code>ref</code> for a GreenSock <code>timeline</code>.</p>\n\n<pre><code class=\"language-javascript\">const timeline = React.useRef(gsap.timeline())\n</code></pre>\n\n<p>And this is because some of the components need access to the visualization timeline. But, we could approach this a different way. The alternative would be to pass in event handling as props and have access to the <code>timeline</code> in the scope. Each way would work. But, each way has trade-offs.</p>\n\n<p>Because we’re working in &ldquo;React&rdquo; land, we can shift some of our code to be &ldquo;Reactive&rdquo;. The clue is in the name, I guess. 😅 For example, instead of trying to pad the timeline and draw things from the parent. We can make the canvas component react to audio <code>src</code> changes. By using <code>React.useEffect</code>, we can re-build the timeline based on the <code>metadata</code> available:</p>\n\n<pre><code class=\"language-javascript\">React.useEffect(() => {\n  barsRef.current.length = 0\n  padTimeline()\n  drawRef.current = DRAW\n  DRAW()\n  if (src === null) {\n    metadata.current.length = 0      \n  } else if (src && metadata.current.length) {\n    metadata.current.forEach(bar => addBar(bar))\n    gsap.ticker.add(drawRef.current)\n  }\n}, [src])\n</code></pre>\n\n<p>The last part that would be good to mention is how we persist recordings to <code>localStorage</code> with React. For this, we are using a custom hook that we built before in our &ldquo;Getting Started&rdquo; guide.</p>\n\n<pre><code class=\"language-javascript\">const usePersistentState = (key, initialValue) => {\n  const [state, setState] = React.useState(\n    window.localStorage.getItem(key)\n      ? JSON.parse(window.localStorage.getItem(key))\n      : initialValue\n  )\n  React.useEffect(() => {\n    // Stringify so we can read it back\n    window.localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state])\n  return [state, setState]\n}\n</code></pre>\n\n<p>This is neat because we can use it the same as <code>React.useState</code> and we get abstracted away from persisting logic.</p>\n\n<pre><code class=\"language-javascript\">// Deleting a recording\nsetRecordings({\n  recordings: [\n    ...recordings.filter(recording => recording.id !== idToDelete),\n  ],\n})\n// Saving a recording\nconst audioSafe = e.target.result\nconst timestamp = new Date()\nconst name = prompt('Recording name?')\nsetRecordings({\n  recordings: [\n    ...recordings,\n    {\n      audioBlob: audioSafe,\n      metadata: metadata.current,\n      name: name || timestamp.toUTCString(),\n      id: timestamp.getTime(),\n    },\n  ],\n})\n</code></pre>\n\n<p>I’d recommend digging into some of the React code and having a play if you’re interested. Some things work a little differently in React land. Could you extend the app and make the visualizer support different visual effects? For example, how about passing colors via props for the fill style?</p>\n\n<h2 id=\"that-s-it\">That’s It!</h2>\n\n<p>Wow. You’ve made it to the end! This was a long one.</p>\n\n<p>What started as a case study turned into a guide to visualizing audio with JavaScript. We’ve covered a lot here. But, now you have the fundamentals to go forth and make audio visualizations as I did for Kent.</p>\n\n<p>Last but not least, here’s one that visualizes a waveform using <code>@react-three/fiber</code>:</p>\n\n<figure >\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"oNoredR\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [24. Going to 3D React Land 🚀](https://codepen.io/smashingmag/pen/oNoredR) by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oNoredR\">24. Going to 3D React Land 🚀</a> by <a href=\"https://codepen.io/jh3y\">Jhey</a>.</figcaption>\n</figure>\n\n<p>That’s ReactJS, ThreeJS and GreenSock all working together! 💪</p>\n\n<p>There’s so much to go off and explore with this one. I’d love to see where you take the demo app or what you can do with it!</p>\n\n<p>As always, if you have any questions, you know <a href=\"https://twitter.com/jh3yy\">where to find me</a>.</p>\n\n<p><strong>Stay Awesome! ʕ •ᴥ•ʔ</strong></p>\n\n<p><em>P.S. There is a <a href=\"https://codepen.io/collection/ZMOydK\">CodePen Collection</a> containing all the demos seen in the articles along with some bonus ones.</em> 🚀</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "What started as a case study turned into a guide to visualizing audio with\nJavaScript. Although the output demos are in React, Jhey Tompkins isn’t going to\ndwell on the React side of things too much. ...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "The Best Mechanical Keyboards for Developers"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss\"\n              title=\"The Best Mechanical Keyboards for Developers\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2.jpg\"\n        alt=\"The Best Mechanical Keyboards for Developers\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Developers need a good keyboard. Learn how mechanical keyboards improve your workflow and your health, and how to choose a good one.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss\">The Best Mechanical Keyboards for Developers</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/best-mechanical-keyboards/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256681",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Hardware"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Wed, 26 Jan 2022 02:00:34 GMT"
        ],
        "plainDescription": "The Best Mechanical Keyboards for Developers\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643173051mechanical-keyboards2.jpg]\n[https://www.sitepoint.com/best-mechanical-keyboards/?utm_so...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "25 Free Watercolor Brush Sets for Adobe Photoshop"
        ],
        "link": [
            "https://speckyboy.com/free-watercolor-photoshop-brush-sets/"
        ],
        "comments": [
            "https://speckyboy.com/free-watercolor-photoshop-brush-sets/#comments"
        ],
        "dc:creator": [
            "Paul Andrew"
        ],
        "pubDate": [
            "Thu, 05 May 2022 06:18:25 +0000"
        ],
        "category": [
            "Photoshop",
            "Free Templates",
            "Photoshop Brushes"
        ],
        "guid": [
            {
                "_": "http://speckyboy.com/?p=13066",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A collection of free watercolor Photoshop brush sets for creating watercolor-styled designs. Delicate flowers, delicate splashes, and many more.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/free-watercolor-photoshop-brush-sets/\">25 Free Watercolor Brush Sets for Adobe Photoshop</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>When it comes to design, some styles come and go. On the other hand, others remain popular for years, if not decades. The watercolor effect is one of the most popular design styles in both web and graphic design. Using combinations of pastel and neutral colors, this subtle technique gives designers the ability to give a natural, fresh, and spring-like feel to their designs.</p>\n<p>One way to add this effect to your designs is to spend hours creating them from scratch. Or, you could download a high-quality watercolor brush pack for Photoshop and apply it to all your designs in just a fraction of the time needed to make it from scratch. </p>\n<p>Watercolor brushes are a great choice for modern design projects that require a <a href=\"https://speckyboy.com/free-subtle-photoshop-brush-packs/\">subtle texture</a> and a tiny bit of depth. Given the delicate nature of watercolor brushes, they are great for <a href=\"https://speckyboy.com/free-poster-mockup-psd-templates/\">poster design</a> and <a href=\"https://speckyboy.com/flyer-templates/\">flyer design</a> as well as invitations and website backgrounds. </p>\n<p>There are also watercolor brushes that are more grungy, which makes them perfect for more edgy designs, and you could even use them to create a tie-dye effect on apparel or accessory designs. Another way to use these watercolor brushes is to create <a href=\"https://speckyboy.com/stationery-templates/\">modern stationery items</a> such as notebooks, notepads, or journals.</p>\n<p>In this collection, we have 25 free watercolor Photoshop brush sets to help you create your own watercolor-styled designs. You will find delicate watercolor flowers, grungy watercolor brush strokes, retro watercolor splashes, and tons more. Check them out below, download them, and apply them to your designs.</p>\n<div class=\"table-of-contents\"><input type=\"checkbox\" id=\"display-content\"><strong class=\"toc-title\"><label for=\"display-content\">More Free Photoshop Brushes</label></strong></p>\n<div class=\"toc-content\">\n<ul>\n<li><a href=\"https://speckyboy.com/free-abstract-photoshop-brushes/\">Abstract Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/fractal-brushes-for-photoshop/\">Fractal Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-grunge-photoshop-brush-sets/\">Grunge Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-photoshop-brushes/\">High-Resolution Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-light-effects-photoshop-brush-packs/\">Light Effects Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-nature-brushes-photoshop/\">Nature Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-photoshop-scribble-doodle-brushes/\">Scribble &#038; Doodle Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-smoke-brush-packs-adobe-photoshop/\">Smoke Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-splatter-brush-sets-photoshop/\">Splatter Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-subtle-photoshop-brush-packs/\">Subtle Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-swirl-ribbon-photoshop-brushes/\">Swirl &#038; Ribbon Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-technology-photoshop-brush-sets/\">Technology Photoshop Brushes</a></li>\n<li><a href=\"https://speckyboy.com/free-vintage-antique-brush-packs-adobe-photoshop/\">Vintage Photoshop Brushes</a></li>\n</ul>\n</div>\n</div>\n\n\n<h2><a target=\"_blank\" href=\"https://www.brusheezy.com/brushes/62803-20-paint-splash-ps-brushes-abr-vol-6\" rel=\"noopener noreferrer\">20 Paint Splash Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-01.jpg\" width=\"870\" height=\"500\" alt=\"Paint Splash watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=watercolor-brushes&#038;u=https%3A%2F%2Felements.envato.com%2Fwatercolor-design-bundle-ZP4RE4\" rel=\"noopener\">Watercolor Design Bundle <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Envato Elements)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-02.jpg\" width=\"870\" height=\"500\" alt=\"Design Bundle watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.premiumpixels.com/freebies/28-high-resolution-watercolour-brushes/\" rel=\"noopener noreferrer\">28 High Resolution Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-03.jpg\" width=\"870\" height=\"500\" alt=\"High Resolution watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=watercolor-brushes&#038;u=https%3A%2F%2Felements.envato.com%2F30-watercolor-texture-photoshop-brushes-vol-2-KG8GN6\" rel=\"noopener\">30 Watercolor Texture Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Envato Elements)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2021/05/free-photoshop-brush-watercolor-a.jpg\" width=\"870\" height=\"500\" alt=\"watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.bittbox.com/freebies/free-hi-res-watercolor-photoshop-brushes-set-ii\" rel=\"noopener noreferrer\">Hi-Res Watercolor Photoshop Brushes Set II <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-05.jpg\" width=\"870\" height=\"500\" alt=\"Hi-Res watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=watercolor-brushes&#038;u=https%3A%2F%2Felements.envato.com%2Fwatercolor-magic-volume-1-EMYZRD\" rel=\"noopener\">Watercolor Magic <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Envato Elements)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-06.jpg\" width=\"870\" height=\"500\" alt=\"magic watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.brusheezy.com/brushes/1792-free-hi-res-watercolor-photoshop-brushes\" rel=\"noopener noreferrer\">Hi-Res Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-07.jpg\" width=\"870\" height=\"500\" alt=\"Hi-Res watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=watercolor-brushes&#038;u=https%3A%2F%2Felements.envato.com%2F64-watercolor-blob-brushes-2RNT3J\" rel=\"noopener\">64 Watercolor Blob Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Envato Elements)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-08.jpg\" width=\"870\" height=\"500\" alt=\"blob watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.brusheezy.com/brushes/59474-20-watercolor-mask-ps-brushes-abr-vol-10\" rel=\"noopener noreferrer\">20 Watercolor Mask Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-09.jpg\" width=\"870\" height=\"500\" alt=\"Mask watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=watercolor-brushes&#038;u=https%3A%2F%2Felements.envato.com%2F75-photoshop-brushes-watercolor-collection-ATLGKY\" rel=\"noopener\">75 Photoshop Brushes Watercolor Collection <i class=\"fas fa-external-link-alt external\"></i></A> <small>(Envato Elements)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-10.jpg\" width=\"870\" height=\"500\" alt=\"Collection watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://creativetacos.com/free-watercolor-strokes-brush-vol-2/\" rel=\"noopener noreferrer\">Watercolor Strokes Photoshop Brushes Vol. 2 <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-11.jpg\" width=\"870\" height=\"500\" alt=\"Strokes watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.bittbox.com/freebies/free-hi-res-watercolor-photoshop-brushes\" rel=\"noopener noreferrer\">Hi-Res Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-13.jpg\" width=\"870\" height=\"500\" alt=\"Hi-Res watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/crisfx/art/9-HQ-Watercolor-Brush-160800494\" rel=\"noopener noreferrer\">9 HQ Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-14.jpg\" width=\"870\" height=\"500\" alt=\"hq watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.bittbox.com/freebies/free-high-res-photoshop-brushes-grungy-watercolor\" rel=\"noopener noreferrer\">High-Res Grungy Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-16.jpg\" width=\"870\" height=\"500\" alt=\"High-Res Grungy watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/jmb1/art/watercolor-brushes-2-106159828\" rel=\"noopener noreferrer\">Watercolor Photoshop Brushes 2 <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-17.jpg\" width=\"870\" height=\"500\" alt=\"watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.webfx.com/blog/web-design/watercolor-textures-photoshop-brush-pack/\" rel=\"noopener noreferrer\">Watercolor Textures Photoshop Brush Pack <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-18.jpg\" width=\"870\" height=\"500\" alt=\"Textures watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/grayscalestock/art/Watercolor-II-150170705\" rel=\"noopener noreferrer\">Watercolor II Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-19.jpg\" width=\"870\" height=\"500\" alt=\"watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/xedgewolfx/art/Watercolor-Brush-Pack-5-169350701\" rel=\"noopener noreferrer\">Watercolor Brush Pack 5 <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-20.jpg\" width=\"870\" height=\"500\" alt=\"watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/env1ro/art/WaterColor-EXTREMUM-156280884\" rel=\"noopener noreferrer\">WaterColor Extremum Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-21.jpg\" width=\"870\" height=\"500\" alt=\"WaterColor Extremum watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/debh945/art/Hi-Res-Watercolor-Brushes-136440387\" rel=\"noopener noreferrer\">Hi-Res Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-22.jpg\" width=\"870\" height=\"500\" alt=\"Hi-Res watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.brusheezy.com/brushes/2772-watercolor-splatters\" rel=\"noopener noreferrer\">Watercolor Splatters Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-23.jpg\" width=\"870\" height=\"500\" alt=\"Splatters watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.deviantart.com/diamara/art/Watercolor-Landscapes-161537050\" rel=\"noopener noreferrer\">Watercolor Landscapes Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-24.jpg\" width=\"870\" height=\"500\" alt=\"Landscapes watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://we.graphics/item/watercolor-brushes-vol-1/\" rel=\"noopener noreferrer\">Watercolor Brushes Vol 1 <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-25.jpg\" width=\"870\" height=\"500\" alt=\"watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"https://www.brusheezy.com/brushes/4910-soft-watercolor-brushes\" rel=\"noopener noreferrer\">Soft Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-26.jpg\" width=\"870\" height=\"500\" alt=\"Soft watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"http://env1ro.com/portfolio/01-36-free-splatter-splash-watercolor-paint-nail-polish-adobe-photoshop-brushes/\" rel=\"noopener noreferrer\">Splatter Splash Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-27.jpg\" width=\"870\" height=\"500\" alt=\"Splatter Splash watercolor photoshop brushes free\"/></p>\n<h2><a target=\"_blank\" href=\"http://env1ro.com/portfolio/29-18-free-horizontal-smudges-watercolor-paint-adobe-photoshop-brushes/\" rel=\"noopener noreferrer\">Horizontal Smudges Watercolor Photoshop Brushes <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Free)</small></h2>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/free-photoshop-brush-watercolor-28.jpg\" width=\"870\" height=\"500\" alt=\"Horizontal Smudges watercolor photoshop brushes free\"/></p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/free-watercolor-photoshop-brush-sets/\">25 Free Watercolor Brush Sets for Adobe Photoshop</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/free-watercolor-photoshop-brush-sets/feed/"
        ],
        "slash:comments": [
            "5"
        ],
        "plainDescription": "A collection of free watercolor Photoshop brush sets for creating\nwatercolor-styled designs. Delicate flowers, delicate splashes, and many more.\n\nThe post 25 Free Watercolor Brush Sets for Adobe Photo...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "A Beginner’s Guide to Creating a Map Using Leaflet.js"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Creating a Map Using Leaflet.js\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet.jpg\"\n        alt=\"A Beginner’s Guide to Creating a Map Using Leaflet\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how easy it is to create a beautiful, interactive map with HTML, CSS & Leaflet, a user-friendly, open-source JavaScript mapping library.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss\">A Beginner’s Guide to Creating a Map Using Leaflet.js</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254590",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Shachee Swadia"
        ],
        "pubDate": [
            "Thu, 09 Dec 2021 02:00:43 GMT"
        ],
        "plainDescription": "A Beginner’s Guide to Creating a Map Using Leaflet\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639032987leaflet.jpg]\n[https://www.sitepoint.com/leaflet-create-map-beginner-guide/?utm_so...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Edge DevTools for Visual Studio Code V2"
        ],
        "dc:creator": [
            "Christian Heilmann"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:39:40 +0000"
        ],
        "link": [
            "https://dev.to/codepo8/edge-devtools-for-visual-studio-code-v2-1bp3"
        ],
        "guid": [
            "https://dev.to/codepo8/edge-devtools-for-visual-studio-code-v2-1bp3"
        ],
        "description": [
            "<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zjU6kqzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz9tdgrvmiu1f7y7c5ro.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--zjU6kqzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iz9tdgrvmiu1f7y7c5ro.png\" alt=\"Screenshot of the V2 version on action\" width=\"880\" height=\"497\"></a></p>\n\n<p>The V2 version of the <a href=\"https://aka.ms/devtools-for-code\">Microsoft Edge DevTools for Visual Studio Code</a> extension is now live. We've worked hard to make the current feature set more stable and introduced new ones. </p>\n\n<p><strong><a href=\"https://docs.microsoft.com/en-us/microsoft-edge/visual-studio-code/microsoft-edge-devtools-extension#console-integration\">Console Integration</a></strong> - makes it easier to use <code>console.log()</code> or interact with the document right from the developer tools. We found the old integration to be flaky and hard to find in the <code>Output</code> panel.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wbMBzV6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9we1y3mxg0i30j5dcss7.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--wbMBzV6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9we1y3mxg0i30j5dcss7.png\" alt=\"Console integration in the extensioon\" width=\"880\" height=\"456\"></a></p>\n\n<p><strong><a href=\"https://docs.microsoft.com/en-us/microsoft-edge/visual-studio-code/microsoft-edge-devtools-extension#syncing-live-changes-from-the-styles-tool-by-using-css-mirror-editing\">CSS Mirror Editing</a></strong> - making sure that none of your tweaks in DevTools get lost. This is now out of experiment and doesn't use up as much screen estate any longer. You can enable and disable it in the Styles tool.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z55e0zhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71303itjvv8cyrg1c1ce.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--z55e0zhn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/71303itjvv8cyrg1c1ce.png\" alt=\"New interface to enable or disable CSS mirror editing\" width=\"765\" height=\"279\"></a></p>\n\n<p><strong><a href=\"https://review.docs.microsoft.com/en-us/microsoft-edge/visual-studio-code/microsoft-edge-devtools-extension?branch=pr-en-us-1922#inline-and-live-issue-analysis\">Live issue reporting</a></strong> of problems in your code. If you have any code that is a problem you will see a wavy underline on it. You can hover over it with your mouse or use the <code>Problems</code> panel to learn what is wrong and how to fix it. We've updated the issue engine to make sure you get the latest and will soon offer ways to customise the issues you'd like to see. For now, we've removed Internet Explorer error reporting as it may rest in peace. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gJwaiKmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6bnkxbo6dr5uxc35eor.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--gJwaiKmi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h6bnkxbo6dr5uxc35eor.png\" alt=\"Live issue reporting flaging up a problem in the source code\" width=\"880\" height=\"498\"></a></p>\n\n<p>🆕 <strong>Screencast with emulation features</strong> - we added a brand new browser preview that doesn't only give you the browser to interact with right in the editor but also offers various ways to emulate different environments. On the bottom of the browser preview you get a toolbar with various options:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YSGmrZzK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/168we9caqgczf9xgi7ah.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--YSGmrZzK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/168we9caqgczf9xgi7ah.png\" alt=\"The new emulation bar of the browser preview\" width=\"880\" height=\"780\"></a></p>\n\n<p>First is the device list. You can select from a wide range of different emulated devices.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aErgPpdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlx6gmw13zoo42p1z2vv.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--aErgPpdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlx6gmw13zoo42p1z2vv.png\" alt=\"Device list showing various mobile phones and tablets\" width=\"880\" height=\"775\"></a></p>\n\n<p>If you don't select a device but choose <code>Responsive</code> instead, the browser will take up the whole available space. You can also define a viewport size using the form and rotate the viewport with the double arrow.</p>\n\n<p>The magic wand menu allows you to simulate various CSS media queries, like print mode, dark/light mode or even simulate a forced colours (high contrast) environment. If you want to know more about forced colours, check <a href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/\">this incredible article</a></p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lmlPnHYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d7irhb3w5s5b0rvrn1a.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--lmlPnHYC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3d7irhb3w5s5b0rvrn1a.png\" alt=\"The CSS emulation showing the document in forced colour mode with the menu offering other emulations\" width=\"880\" height=\"853\"></a></p>\n\n<p>The last menu (currently using the eye icon) allows you to simulate different visual impairments, like seeing the page in a blurred fashion or in different \"colour blindness\" emulations.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AN8Kr9vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvff2dhvmsgobggk6mtu.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AN8Kr9vX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mvff2dhvmsgobggk6mtu.png\" alt=\"The page being displayed in a blurred fashion and the menu offering more visual emulations\" width=\"880\" height=\"1005\"></a></p>\n\n<p>🆕 <strong>Sourcemap support for styles</strong> - means you can now debug the styles of Sass/React and other abstraction apps without leaving Visual Studio Code. </p>\n\n<p>For lots more details you can also check the <a href=\"https://marketplace.visualstudio.com/items/ms-edgedevtools.vscode-edge-devtools/changelog\">Changelog</a></p>\n\n<h2>\n  \n  \n  Getting started with sourcemapped styles debugging\n</h2>\n\n<p>We've <a href=\"https://dev.to/codepo8/css-mirror-editing-with-sourcemapped-files-sass-react-52e7\">covered this here before</a> when we asked for feedback, but now this should be much easier. If you open the Terminal you can do <code>npm i</code> and <code>npm start</code> to build your App and run the server. In this example, the app is now available at <code>http://localhost:3000</code>. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xs10WVZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4446q3t7pwy7i477755a.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--xs10WVZV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4446q3t7pwy7i477755a.png\" alt=\"A demo react app with the terminal open\" width=\"880\" height=\"558\"></a></p>\n\n<p>If you click the Edge icon you get the option to launch an instance of Edge or <code>Generate launch.json</code> file. Click the latter. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vtLs2wor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/679ihb9g72j1k7t543u0.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--vtLs2wor--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/679ihb9g72j1k7t543u0.png\" alt=\"The generate launch.json button in the extension\" width=\"880\" height=\"558\"></a></p>\n\n<p>This generates a <code>launch.json</code> file in a <code>.vscode</code> folder of your app with all the correct settings. Find all the instances of <code>url</code> and change them to <code>http://localhost:3000</code>:</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--npbQMNtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0sao9rcl6t2ngkaafoz.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--npbQMNtT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0sao9rcl6t2ngkaafoz.gif\" alt=\"Animation showing where to change the url of the app\" width=\"880\" height=\"495\"></a></p>\n\n<p>Save the file and press F5. Visual Studio Code will start the debugger and open a browser window with your app and the developer tools right inside the editor.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IvMQm6dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm5wi31rtgav1eie3lsr.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--IvMQm6dm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm5wi31rtgav1eie3lsr.gif\" alt=\"Visual Studio Code starting the debugger and opening the developer tools and the browser preview\" width=\"880\" height=\"548\"></a></p>\n\n<p>If you now edit the styles of any of the elements of your app, you don't only change CSS files in your project, but also their scss source files or modular styles. </p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FkJkGWTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s02bwt55nbtogg3cfllh.gif\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--FkJkGWTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s02bwt55nbtogg3cfllh.gif\" alt=\"Demo showing how changes in the developer tools now affect the source files, including Sass files and module scoped CSS\" width=\"880\" height=\"495\"></a></p>\n\n<p>For this to work, you need to set up sourcemaps correctly in your project. As we assume this to be problematic for some people, we have an <a href=\"https://github.com/microsoft/vscode-edge-devtools/issues/965\">issue open in the extension repo</a> where you can find help.</p>\n\n"
        ],
        "category": [
            "vscode",
            "development",
            "browsers"
        ],
        "plainDescription": "Screenshot of the V2 version on action\n[https://res.cloudinary.com/practicaldev/image/fetch/s--zjU6kqzx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/upl...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "Tricks to Cut Corners Using CSS Mask and Clip-Path Properties"
        ],
        "link": [
            "https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/"
        ],
        "comments": [
            "https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/#respond"
        ],
        "dc:creator": [
            "Temani Afif"
        ],
        "pubDate": [
            "Wed, 30 Mar 2022 16:35:08 +0000"
        ],
        "category": [
            "Article",
            "clip-path",
            "mask"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364279",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>We recently covered creating <a href=\"https://css-tricks.com/css-borders-using-masks/\">fancy borders</a> with CSS <code>mask</code> properties, and now we are going to cut the corners with CSS <code>mask</code> <em>and</em> <code>clip-path</code>! A lot of techniques exist to cut different shapes from the corners of any element. &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/\">Tricks to Cut Corners Using CSS Mask and Clip-Path Properties</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>We recently covered creating <a href=\"https://css-tricks.com/css-borders-using-masks/\">fancy borders</a> with CSS <code>mask</code> properties, and now we are going to cut the corners with CSS <code>mask</code> <em>and</em> <code>clip-path</code>! A lot of techniques exist to cut different shapes from the corners of any element. In this article, we will consider modern techniques to create unique corner shapes while trying to work from reusable code that allows us to produce different results by adjusting variables.</p>\n\n\n\n<span id=\"more-364279\"></span>\n\n\n\n<p>Check <a href=\"https://css-generators.com/custom-corners/\" rel=\"noopener\">this online tool</a> to get an idea of what we are building. It’s a CSS generator where you select the shape, the corners, and the size then you get the code in no time!</p>\n\n\n\n<figure class=\"wp-block-video wp-block-embed is-type-video is-provider-videopress\"><div class=\"wp-block-embed__wrapper\">\n<iframe title=\"VideoPress Video Player\" aria-label='VideoPress Video Player' width='500' height='242' src='https://videopress.com/embed/VGcP42YX?cover=1&amp;preloadContent=metadata&amp;hd=1' frameborder='0' allowfullscreen data-resize-to-parent=\"true\"></iframe><script src='https://v0.wordpress.com/js/next/videopress-iframe.js?m=1633526814'></script>\n</div></figure>\n\n\n\n<p>We mainly have two types of cuts: a <em>circular</em> one and an <em>angle</em><em>d</em> one. For each, we can get the full shape or the border-only shape, not to mention that we can select the corners we want to cut. A lot of combinations!</p>\n\n\n\n<p>Like in the previous article, we will make lots of use of the CSS <a href=\"https://css-tricks.com/almanac/properties/m/mask/\"><code>mask</code></a> property. So, if you are not familiar with it, I recommend reading <a href=\"https://css-tricks.com/css-borders-using-masks/#aa-masking-things\">the quick primer I wrote</a> before continuing.</p>\n\n\n\n<h3>Circular cut-out</h3>\n\n\n\n<p>For a circular or rounded cut, we will use <code>radial-gradient()</code>. To cut four corners, the logical solution is to create four gradients, one for each corner:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_cca82d2fcc4c67e14d9cfc88ad5f9f8a\" src=\"//codepen.io/anon/embed/cca82d2fcc4c67e14d9cfc88ad5f9f8a?height=450&amp;theme-id=1&amp;slug-hash=cca82d2fcc4c67e14d9cfc88ad5f9f8a&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed cca82d2fcc4c67e14d9cfc88ad5f9f8a\" title=\"CodePen Embed cca82d2fcc4c67e14d9cfc88ad5f9f8a\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Each gradient is taking a quarter of the element’s dimensions. The syntax of the gradient is self-explanatory:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">radial-gradient(circle 30px at top left, #0000 98%, red) top left;</code></pre>\n\n\n\n<p>Translated, this renders a circle at the top-left corner with a <code>30px</code> radius. The main color is transparent (<code>#0000</code>) and the remaining is <code>red</code>. The whole gradient is also placed so that it starts at the element’s top-left corner. Same logic for the three other gradients. The keyword <code>circle</code> can be omitted since we explicitly specified one value for the radius.</p>\n\n\n\n<p>Like I did in the previous article, I will be using slightly bigger or smaller values this time around in order to avoid bad visual result. Here, I am using <code>98%</code> instead of <code>100%</code> to avoid jagged edges and <code>51%</code> instead of <code>50%</code> to create an overlap between gradients and avoid white spaces. This logic will follow throughout this article. In fact, you will find that adding or removing <code>1%</code> or <code>1deg</code> typically results in a nice visual.</p>\n\n\n\n<p>We apply this to the CSS <code>mask</code> property and we are done!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_4f20a94eb64307209eebc8bb3d7c8308\" src=\"//codepen.io/anon/embed/4f20a94eb64307209eebc8bb3d7c8308?height=450&amp;theme-id=1&amp;slug-hash=4f20a94eb64307209eebc8bb3d7c8308&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 4f20a94eb64307209eebc8bb3d7c8308\" title=\"CodePen Embed 4f20a94eb64307209eebc8bb3d7c8308\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>We can actually optimize that code a little:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">--g: #0000 98%,#000;\n--r: 30px;\nmask:\n  radial-gradient(var(--r) at 0    0   ,var(--g)) 0    0,\n  radial-gradient(var(--r) at 100% 0   ,var(--g)) 100% 0,\n  radial-gradient(var(--r) at 0    100%,var(--g)) 0    100%,\n  radial-gradient(var(--r) at 100% 100%,var(--g)) 100% 100%;\nmask-size: 51% 51%;\nmask-repeat: no-repeat;</code></pre>\n\n\n\n<p>This way, we use custom properties for the redundant values and, as a personal preference, I am using numeric values for the positions instead of keywords.</p>\n\n\n\n<p>In the generator, I will use the following syntax:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">--g: #0000 98%,#000;\n--r: 30px;\nmask:\n  radial-gradient(var(--r) at 0    0   ,var(--g)) 0    0   /51% 51% no-repeat,\n  radial-gradient(var(--r) at 100% 0   ,var(--g)) 100% 0   /51% 51% no-repeat,\n  radial-gradient(var(--r) at 0    100%,var(--g)) 0    100%/51% 51% no-repeat,\n  radial-gradient(var(--r) at 100% 100%,var(--g)) 100% 100%/51% 51% no-repeat;</code></pre>\n\n\n\n<p>The shorthand syntax is easier to generate plus the whole value can be used as one custom property.</p>\n\n\n\n<h4>Can we use fewer gradients if we want?</h4>\n\n\n\n<p>Sure! One gradient can do the job. Hover the below to see the trick:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_749d03474901cc7cf2fc5da4bbc6bd03\" src=\"//codepen.io/anon/embed/749d03474901cc7cf2fc5da4bbc6bd03?height=450&amp;theme-id=1&amp;slug-hash=749d03474901cc7cf2fc5da4bbc6bd03&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 749d03474901cc7cf2fc5da4bbc6bd03\" title=\"CodePen Embed 749d03474901cc7cf2fc5da4bbc6bd03\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Here, we define one <code>radial-gradient()</code> with no size (by default it is <code>100%</code> height and <code>100%</code> width). This gives us a hole in the center. We translate/move the gradient by half the width and height of the image to move the hole to one corner. Since, by default, the CSS mask repeats, we get the same on each corner. We have four cut corners with only one gradient!</p>\n\n\n\n<p>The only drawback of this method is that we need to know the width and height of the element in advance.</p>\n\n\n\n<h4>Can’t we use <code>-50%</code> instead of half the width and height?</h4>\n\n\n\n<p>Unfortunately, we’re unable to do that here because percentages doesn’t behave the same as pixel values when used with the CSS <code>mask-position</code> property. They’re tricky.</p>\n\n\n\n<p class=\"is-style-explanation\">I have a detailed <a href=\"https://stackoverflow.com/a/51734530/8620333\" rel=\"noopener\">Stack Overflow answer</a> that explains the difference. It deals with <code>background-position</code> but the same logic applies to the CSS <code>mask-position</code> property.</p>\n\n\n\n<p>However, we can use some tricks to make it work with percentage values and without the need to know the width or the height. When a gradient (or a background layer) has a width and height equal to the element, we cannot move it using percentage values. So we need to change its size!</p>\n\n\n\n<p>I will define a size equal to <code>99.5% 99.5%</code>. I am reducing <code>0.5%</code> from the width and the height to have a value different from <code>100%</code> and at the same time keep the same visual result since we won’t notice a big difference between <code>100%</code> and <code>99.5%</code>. Now that our gradient has a size different from <code>100%</code> we can move it using percentage values.</p>\n\n\n\n<p>I will not detail all the math, but to move it by half the width and the height we need to use this equation:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">100% * (50/(100 - 99.5)) = 100% * 100 = 10000%</code></pre>\n\n\n\n<p>It’s a strange value but it does the job:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_6a2f3c1e2b66a3a4199518e9ebdca2e5\" src=\"//codepen.io/anon/embed/6a2f3c1e2b66a3a4199518e9ebdca2e5?height=450&amp;theme-id=1&amp;slug-hash=6a2f3c1e2b66a3a4199518e9ebdca2e5&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 6a2f3c1e2b66a3a4199518e9ebdca2e5\" title=\"CodePen Embed 6a2f3c1e2b66a3a4199518e9ebdca2e5\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>As you can see, the trick works just fine. Whatever the size of the element is, we can cut four corners using only one gradient. However, this method has a small drawback when the width or the height of the element is a decimal value. Here is an example with an image having a width equal to <code>150.5px</code>:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_47aabd6b7232507c31368603821b0764\" src=\"//codepen.io/anon/embed/47aabd6b7232507c31368603821b0764?height=450&amp;theme-id=1&amp;slug-hash=47aabd6b7232507c31368603821b0764&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 47aabd6b7232507c31368603821b0764\" title=\"CodePen Embed 47aabd6b7232507c31368603821b0764\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>The use of <code>99.5%</code> combined with <code>150.5px</code> will create rounding issues that will break the calculation, resulting in the mask being misaligned. So, use this method with caution.</p>\n\n\n\n<p>To overcome the rounding issue, we can combine the last trick with a pseudo-element. Here is a step-by-step illustration to understand the idea:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_43b907b21acda8065925601d90eabe64\" src=\"//codepen.io/anon/embed/43b907b21acda8065925601d90eabe64?height=450&amp;theme-id=1&amp;slug-hash=43b907b21acda8065925601d90eabe64&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 43b907b21acda8065925601d90eabe64\" title=\"CodePen Embed 43b907b21acda8065925601d90eabe64\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Here’s what going on in there:</p>\n\n\n\n<ol><li>We define a pseudo-element that behaves as our background layer. Logically, we should use <code>inset:0</code> to make it cover the entire area, but we will create a small overflow by using <code>inset: -10%</code> meaning that the pseudo element will overflow each side by 10%.</li><li>We set our CSS mask to the pseudo-element. The mask size needs to match the size of the main element, not the pseudo-element. In other words, it will be smaller than the size of the pseudo-element and this is what we want to be able to move using percentage values. After we do the math, the size needs to be <code>100%/1.2</code>. Notice in the demo above that the CSS mask is within the green border so that it matches the size of the container.</li><li>Now, we need to move it in a way that simulates cutting the corner of the main element. The center of the hole needs to be in the corner of the main element, as illustrated in the demo. To do this, we use <code>mask-position: 300% 300%</code> ( <code>300% = 50%/(1 - 1/1.2)</code> ).</li><li>We remove <code>no-repeat</code> to activate the repetition and get the same effect for every corner.</li><li>We clip the overflow and we get our final result!</li></ol>\n\n\n\n<p>I know it’s a bit overkill, but it does work and it requires only one gradient instead of four.</p>\n\n\n\n<p>Let’s quickly recap the three methods we just covered:</p>\n\n\n\n<ul><li>The first method uses four gradients and has no drawbacks as far as usage. Sure, it’s verbose but it works with any kind of element and size. I recommend using this one.</li><li>The second method uses one gradient and works with any element, but it can break in some particular cases. It’s suitable with fixed-size elements. It’s ok to use, but maybe less frequently.</li><li>The third method uses one gradient and requires a pseudo-element. It won’t work with <code>&lt;img&gt;</code> and other elements that unable to support a pseudo-element. </li></ul>\n\n\n\n<p><a href=\"https://css-generators.com/custom-corners/\" target=\"_blank\" rel=\"noreferrer noopener\">The generator</a> only supports the first and third methods.</p>\n\n\n\n<p>Now that we saw the case with all the corners, let’s disable some of them. Using the first method, any corner we want to keep uncut we simply remove its gradient and adjust the size of what remains.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_956ecccfd79d5f4e45f83c0a7d36af83\" src=\"//codepen.io/anon/embed/956ecccfd79d5f4e45f83c0a7d36af83?height=450&amp;theme-id=1&amp;slug-hash=956ecccfd79d5f4e45f83c0a7d36af83&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 956ecccfd79d5f4e45f83c0a7d36af83\" title=\"CodePen Embed 956ecccfd79d5f4e45f83c0a7d36af83\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>To disable the top-right corner:</p>\n\n\n\n<ul><li>We remove the top-right gradient (the blue one).</li><li>We have an empty corner, so we increase the size of the red gradient (or the purple one) to cover that leftover space.</li></ul>\n\n\n\n<p>Done!</p>\n\n\n\n<p>You probably see just how many possibilities and combinations we can do here. If we want to cut <code>N</code> corners (where <code>N</code> ranges from <code>1</code> to <code>4</code>), we use <code>N</code> gradients. All we need is to correctly set the size of each one to leave no space.</p>\n\n\n\n<p>What about the other methods where there’s only one gradient? We will need another gradient! Those two methods use only one <code>radial-gradient()</code> to cut the corners, so we will rely on another gradient to “hide” the cut. We can use a <code>conic-gradient()</code> with four sections for this task:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">conic-gradient(red 25%, blue 0 50%, green 0 75%, purple 0)</code></pre>\n\n\n\n<p>We add it on the top of the radial gradient to get the following:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_b9ada39f95223541713061a84dd3aeda\" src=\"//codepen.io/anon/embed/b9ada39f95223541713061a84dd3aeda?height=550&amp;theme-id=1&amp;slug-hash=b9ada39f95223541713061a84dd3aeda&amp;default-tab=css,result\" height=\"550\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed b9ada39f95223541713061a84dd3aeda\" title=\"CodePen Embed b9ada39f95223541713061a84dd3aeda\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>The <code>conic-gradient()</code> covers the <code>radial-gradient()</code> and no corner is cut. Let’s change one color in the <code>conic-gradient()</code> to transparent. The one at the top-right, for example:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_21e7ee94ca32c57f6ec2ef63eebb4f2b\" src=\"//codepen.io/anon/embed/21e7ee94ca32c57f6ec2ef63eebb4f2b?height=450&amp;theme-id=1&amp;slug-hash=21e7ee94ca32c57f6ec2ef63eebb4f2b&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 21e7ee94ca32c57f6ec2ef63eebb4f2b\" title=\"CodePen Embed 21e7ee94ca32c57f6ec2ef63eebb4f2b\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Did you see that? We revealed one corner of the <code>radial-gradient()</code> and we end with one cut corner!</p>\n\n\n\n<p>Now let’s do the same thing, but for the bottom-left corner.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_771609724a92aecc8babad91b8e09727\" src=\"//codepen.io/anon/embed/771609724a92aecc8babad91b8e09727?height=450&amp;theme-id=1&amp;slug-hash=771609724a92aecc8babad91b8e09727&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed 771609724a92aecc8babad91b8e09727\" title=\"CodePen Embed 771609724a92aecc8babad91b8e09727\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>I think you probably get the trick by now. By changing the colors of the <code>conic-gradient()</code> from opaque to transparent, we reveal the corners we want to cut and gain all kinds of possible combinations. The same can be done with the third method.</p>\n\n\n\n<h3>Circular border-only cut-out</h3>\n\n\n\n<p>Let’s make the border-only version of the previous shape. In other words, we achieve the same shape but knock out the fill so all we’re left with is a border of the shape.</p>\n\n\n\n<p>This is a bit tricky because we have different cases with different code. Fair warning, I will be using a lot of gradients here while finding opportunities to trim the number of them.</p>\n\n\n\n<p>It should be noted that we will consider a pseudo-element in this case. Showing only the border means we need to hide the inner “fill” of the shape. Applying this to the main element will also hide the content — that’s why this is a nice use case for a pseudo-element.</p>\n\n\n\n<h4>One cut corner</h4>\n\n\n\n<p>This one needs one radial gradient and two conic gradients:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_WNXweMZ/c59e6b40f79f5e3aa2b1c0e38b263e78\" src=\"//codepen.io/anon/embed/WNXweMZ/c59e6b40f79f5e3aa2b1c0e38b263e78?height=450&amp;theme-id=1&amp;slug-hash=WNXweMZ/c59e6b40f79f5e3aa2b1c0e38b263e78&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed WNXweMZ/c59e6b40f79f5e3aa2b1c0e38b263e78\" title=\"CodePen Embed WNXweMZ/c59e6b40f79f5e3aa2b1c0e38b263e78\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>The first example illustrates the radial gradient (in red) and both conic gradients (in blue and green). In the second example, we apply all of them inside the CSS <code>mask</code> property to create the border-only shape with one cut corner.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"910\" height=\"490\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643749404091_image.png?resize=910%2C490&#038;ssl=1\" alt=\"Diagram zoomed in on two corners of a rectangle and another where the CSS mask is placed.\" class=\"wp-image-364282\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643749404091_image.png?w=910&amp;ssl=1 910w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643749404091_image.png?resize=300%2C162&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643749404091_image.png?resize=768%2C414&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Here’s a diagram of the game plan.</figcaption></figure>\n\n\n\n<p>As the diagram shows, the <code>radial-gradient()</code> creates the quarter of a circle and each <code>conic-gradient()</code> creates two perpendicular segments to cover two sides. It should be noted that overlapping gradients is not an issue since we are not going to change the CSS <code><a href=\"https://css-tricks.com/almanac/properties/m/mask-composite/\">mask-composite</a></code> property value.</p>\n\n\n\n<p>Using the same code an adjusting a few variables, we can get the shape for the other corners.</p>\n\n\n\n<h4>Two cut corners</h4>\n\n\n\n<p>For the two-corner configuration we have two situations taking place.</p>\n\n\n\n<p>In the first situation, there are two opposite corners where we need two radial gradients and two conic gradients.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_yLPOegO/e22a42d98d40c87cde9161f63df60afa\" src=\"//codepen.io/anon/embed/yLPOegO/e22a42d98d40c87cde9161f63df60afa?height=450&amp;theme-id=1&amp;slug-hash=yLPOegO/e22a42d98d40c87cde9161f63df60afa&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed yLPOegO/e22a42d98d40c87cde9161f63df60afa\" title=\"CodePen Embed yLPOegO/e22a42d98d40c87cde9161f63df60afa\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>The configuration is almost the same as cutting only one corner: we add an extra gradient and update a few variables.</p>\n\n\n\n<p>In the second situation, there are two adjacent corners and, in this case, we need two radial gradients, one conic gradient, and one linear gradient.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_PoONjqK/07d931e6bb3a12e62ee9212c77691eb0\" src=\"//codepen.io/anon/embed/PoONjqK/07d931e6bb3a12e62ee9212c77691eb0?height=450&amp;theme-id=1&amp;slug-hash=PoONjqK/07d931e6bb3a12e62ee9212c77691eb0&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed PoONjqK/07d931e6bb3a12e62ee9212c77691eb0\" title=\"CodePen Embed PoONjqK/07d931e6bb3a12e62ee9212c77691eb0\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>“Wait!” you might exclaim. “How come the conic gradient covers three sides?” If you check the code, notice the <code>repeat-y</code>. In all of the examples, we always used <code>no-repeat</code> for the gradients, but for this we can repeat one of them to cover more sides and reduce the number of gradients we use.</p>\n\n\n\n<p>Here is an example with only the <code>conic-gradient()</code> to understand the repetition. The trick is to have a height equal to <code>100%</code> minus the border size so that the gradient fills that space when repeating, which covers the third side in the process.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNYewWE/48497fb102aa2e06d53c2f56254cee6b\" src=\"//codepen.io/anon/embed/rNYewWE/48497fb102aa2e06d53c2f56254cee6b?height=450&amp;theme-id=1&amp;slug-hash=rNYewWE/48497fb102aa2e06d53c2f56254cee6b&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNYewWE/48497fb102aa2e06d53c2f56254cee6b\" title=\"CodePen Embed rNYewWE/48497fb102aa2e06d53c2f56254cee6b\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h4>Three cut corners</h4>\n\n\n\n<p>For this configuration, we need three radial gradients, one conic gradient, and two linear gradients.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_OJONjwK/2ce04b8d091551519115e9b33f62ffee\" src=\"//codepen.io/anon/embed/OJONjwK/2ce04b8d091551519115e9b33f62ffee?height=450&amp;theme-id=1&amp;slug-hash=OJONjwK/2ce04b8d091551519115e9b33f62ffee&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed OJONjwK/2ce04b8d091551519115e9b33f62ffee\" title=\"CodePen Embed OJONjwK/2ce04b8d091551519115e9b33f62ffee\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h4>Four corners cut</h4>\n\n\n\n<p>It takes four radial gradients and two linear gradients to cut all four corners.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_WNXwZxR/ed91ccb71965c0728b12b047bce7f0cc\" src=\"//codepen.io/anon/embed/WNXwZxR/ed91ccb71965c0728b12b047bce7f0cc?height=450&amp;theme-id=1&amp;slug-hash=WNXwZxR/ed91ccb71965c0728b12b047bce7f0cc&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed WNXwZxR/ed91ccb71965c0728b12b047bce7f0cc\" title=\"CodePen Embed WNXwZxR/ed91ccb71965c0728b12b047bce7f0cc\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>I can hear you screaming, “How the heck am I supposed to memorize all these cases?!” You don&#8217;t need to memorize anything since you can easily generate the code for each case using <a href=\"https://css-generators.com/custom-corners/\" rel=\"noopener\">the online generator</a>. All you need is to understand the overall trick rather than each individual case. That’s why I’ve only gone into fine detail on the first configurations — the rest are merely iterations that tweak the initial foundation of the trick.</p>\n\n\n\n<p>Notice there’s a general pattern we’ve been following throughout the examples:</p>\n\n\n\n<ol><li>We add a <code>radial-gradient()</code> on the corners we want to cut.</li><li>We fill the sides using either a <code>conic-gradient()</code> or a <code>linear-gradient()</code> to create the final shape.</li></ol>\n\n\n\n<p>It should be noted that we can find different ways to create the same shape. What I am showing in this post are the methods I found to be best after trying lots of other ideas. You may have a different approach you consider to be better! If so, definitely share it in the comments!</p>\n\n\n\n<h3>Angled cut-out</h3>\n\n\n\n<p>Let’s tackle another type of cut shape: <strong>the angled cut.</strong></p>\n\n\n\n<p>We have two parameters: the <em>size</em> and <em>angle</em> of the cut. To get the shape, we need a <code>conic-gradient()</code> for each corner. This configuration is very similar to the example that kicked off this article.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_bGYpovW/7400c5a5ff0a11a51343cea01747bb2d\" src=\"//codepen.io/anon/embed/bGYpovW/7400c5a5ff0a11a51343cea01747bb2d?height=450&amp;theme-id=1&amp;slug-hash=bGYpovW/7400c5a5ff0a11a51343cea01747bb2d&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed bGYpovW/7400c5a5ff0a11a51343cea01747bb2d\" title=\"CodePen Embed bGYpovW/7400c5a5ff0a11a51343cea01747bb2d\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Here is an illustration of one corner to understand the trick:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"668\" height=\"193\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643758291383_image.png?resize=668%2C193&#038;ssl=1\" alt=\"\" class=\"wp-image-364303\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643758291383_image.png?w=668&amp;ssl=1 668w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643758291383_image.png?resize=300%2C87&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The difference between each corner is an extra offset of <code>90deg</code> in <code>from</code> and the <code>at</code> position. The full code is like below:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">--size: 30px;\n--angle: 130deg;\n\n--g: #0000 var(--angle), #000 0;\nmask:\n  conic-gradient(from calc(var(--angle)/-2 -  45deg) \n    at top    var(--size) left  var(--size),var(--g)) top left,\n  conic-gradient(from calc(var(--angle)/-2 + 45deg) \n    at top    var(--size) right var(--size),var(--g)) top right,\n  conic-gradient(from calc(var(--angle)/-2 - 135deg) \n    at bottom var(--size) left  var(--size),var(--g)) bottom left,\n  conic-gradient(from calc(var(--angle)/-2 + 135deg) \n    at bottom var(--size) right var(--size),var(--g)) bottom right;\nmask-size: 51% 51%;\nmask-repeat: no-repeat;</code></pre>\n\n\n\n<p>If we want to disable one corner, we remove the <code>conic-gradient()</code> for that corner and update the size of another one to fill the remaining space exactly like we did with the circular cut. Here’s how that looks for one corner:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_LYONJeQ/a9747b3c4a57f7e087297e2fcd20d79d\" src=\"//codepen.io/anon/embed/LYONJeQ/a9747b3c4a57f7e087297e2fcd20d79d?height=450&amp;theme-id=1&amp;slug-hash=LYONJeQ/a9747b3c4a57f7e087297e2fcd20d79d&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed LYONJeQ/a9747b3c4a57f7e087297e2fcd20d79d\" title=\"CodePen Embed LYONJeQ/a9747b3c4a57f7e087297e2fcd20d79d\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>We can do the exact same thing for all the other corners to get the same effect.</p>\n\n\n\n<p>In addition to CSS mask, we can also use the CSS <a href=\"https://css-tricks.com/almanac/properties/c/clip-path/\"><code>clip-path</code></a> property to cut the corners. Each corner can be defined with three points.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"394\" height=\"148\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643795272418_image.png?resize=394%2C148&#038;ssl=1\" alt=\"Zooming in on a corner of the shape showing the three points that form the angled cut.\" class=\"wp-image-364285\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643795272418_image.png?w=394&amp;ssl=1 394w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643795272418_image.png?resize=300%2C113&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>The shape consists of two points at each end of the cut, and one between them to form the angle.</figcaption></figure>\n\n\n\n<p>The other corners will have the same value with an offset of <code>100%</code>. This gives us the final code with a total of 12 points — three per corner.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">/* I will define T = [1-tan((angle-90)/2)]*size */\nclip-path: polygon(\n  /* Top-left corner */\n  0 T, size size,0 T, /* OR 0 0 */\n  /* Top-right corner */\n  calc(100% - T) 0,calc(100% - size) size,100% T, /* OR  100% 0 */\n  /* Bottom-right corner*/\n  100% calc(100% - T),calc(100% - size) calc(100% - size), calc(100% - T) 100%, /* OR 100% 100% */\n  /* Bottom-left corner */ \n  T 100%, size calc(100% - size),0 calc(100% - T) /* OR 0 100% */\n)</code></pre>\n\n\n\n<p>Notice the <code>OR</code> comments in that code. It defines the code we have to consider if we want to disable a particular corner. To cut a corner, we use three points. To uncut a corner, we use one point — which is nothing but the coordinate of that corner.</p>\n\n\n\n<h3>Border-only angled cut</h3>\n\n\n\n<p>Oof, we have reached the last and trickiest shape at last! This one can be achieved with either gradients or <code>clip-path</code>, but let’s go with the <code>clip-path</code> approach.</p>\n\n\n\n<p>Things would get complex and verbose if we go with the gradient approach. Here’s a demo that illustrates that point:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNGbLPM/40f5ed3fe003b185eee6acf316e4fd42\" src=\"//codepen.io/anon/embed/rNGbLPM/40f5ed3fe003b185eee6acf316e4fd42?height=600&amp;theme-id=1&amp;slug-hash=rNGbLPM/40f5ed3fe003b185eee6acf316e4fd42&amp;default-tab=result\" height=\"600\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNGbLPM/40f5ed3fe003b185eee6acf316e4fd42\" title=\"CodePen Embed rNGbLPM/40f5ed3fe003b185eee6acf316e4fd42\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>There are nine gradients total, and I am <em>still</em> not done with the calculation. As you can tell, the thickness of the border is incorrect, plus the final result is unsatisfying due to the nature of gradients and their anti-aliasing issues. This approach might be a good exercise to push the limit of gradients, but I don’t recommend it in a production environment.</p>\n\n\n\n<p>So, back to the <code>clip-path</code> method. We will still wind up with verbose code, but less of a big deal since the generator can do the job for us with a cleaner end result.</p>\n\n\n\n<p>Here is an overview of the path. I am adding a small gap to better see the different points but we should have an overlap of points instead. </p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"837\" height=\"392\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643799845311_image.png?resize=837%2C392&#038;ssl=1\" alt=\"\" class=\"wp-image-364286\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643799845311_image.png?w=837&amp;ssl=1 837w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643799845311_image.png?resize=300%2C141&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643799845311_image.png?resize=768%2C360&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>We have 13 outer points (the ones in black) and 13 inner points (the ones in blue).</figcaption></figure>\n\n\n\n<p>The way we calculate the outer points is the same as how we did it for the regular angled cut. For the inner points, however, we need more math. Don’t worry, I&#8217;ll spare you some “boring” geometry explanation for this one. I know most of you don’t want it, but in case you need to dig into this, you can check the JavaScript file of <a href=\"https://css-generators.com/custom-corners/\" target=\"_blank\" rel=\"noreferrer noopener\">the generator</a> to find the code and the math I am using to generate the shape.</p>\n\n\n\n<h4>The <code>180deg</code> special case</h4>\n\n\n\n<p>Before we end, there’s a special case for the angle cut I want to call out. It’s where we use an angle equal to <code>180deg</code>. Here’s what that produces:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"917\" height=\"270\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643808739224_image.png?resize=917%2C270&#038;ssl=1\" alt=\"\" class=\"wp-image-364287\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643808739224_image.png?w=917&amp;ssl=1 917w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643808739224_image.png?resize=300%2C88&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_18CF9C4D6E06AE4785F6C7D87CF7E7C82936AE333F7C75AF4175B3E7B3A256A3_1643808739224_image.png?resize=768%2C226&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We have a straight line on the corner so we can optimize the <code>clip-path</code> code. For the full shape, we can use eight points (two points per corner) instead of 12. And for the border-only version, we can use 18 points (nine inner points and outer points) instead of 26. In other words, we can remove the middle point.</p>\n\n\n\n<p>The border-only shape can also be made using gradients. But rather than using nine gradients like we did before, we can get away with only four linear gradients and a clean result.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_BawevLM\" src=\"//codepen.io/anon/embed/BawevLM?height=650&amp;theme-id=1&amp;slug-hash=BawevLM&amp;default-tab=css,result\" height=\"650\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed BawevLM\" title=\"CodePen Embed BawevLM\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Conclusion</h3>\n\n\n\n<p>We just combined CSS masks with gradients to create some fancy shapes without resorting to hacks and a lot of code! We also experienced just how much it takes to strike the right balance of code to get the right results. We even learned a few tricks along the way, like changing values by one or even half a unit. CSS is super powerful!</p>\n\n\n\n<p>But, as we discussed, <a href=\"https://css-generators.com/custom-corners/\" rel=\"noopener\">the online generator</a> I made is a great place to get the code you need rather than writing it out by hand. I mean, I went through all the work of figuring out how all of this works and I would likely still need to reference this very article to remember how it’s all put together. If you can memorize all of this, kudos! But it’s nice to have a generator to fall back on.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/\">Tricks to Cut Corners Using CSS Mask and Clip-Path Properties</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "364279",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "We recently covered creating fancy borders\n[https://css-tricks.com/css-borders-using-masks/] with CSS mask properties, and\nnow we are going to cut the corners with CSS mask and clip-path! A lot of\ntec...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "How to Get Started with Automated Email Marketing"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss\"\n              title=\"How to Get Started with Automated Email Marketing\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2.jpg\"\n        alt=\"How to Get Started with Automated Email Marketing\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Are you using emails for marketing? Learn about email marketing automation options, their benefits, how to set them up, and how and use them.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss\">How to Get Started with Automated Email Marketing</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/automated-email-marketing-getting-started/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203280",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Computing",
            "Email Marketing",
            "Entrepreneur",
            "Low Code",
            "Marketing",
            "Web"
        ],
        "dc:creator": [
            "Kaarle Varkki"
        ],
        "pubDate": [
            "Tue, 07 Sep 2021 02:00:07 GMT"
        ],
        "plainDescription": "How to Get Started with Automated Email Marketing\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630834250automated-email-marketing2.jpg]\n[https://www.sitepoint.com/automated-email-marketi...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Add More Fun to a Game: Extending “The Aviator”"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/"
        ],
        "dc:creator": [
            "Michel Helms"
        ],
        "pubDate": [
            "Wed, 20 Apr 2022 09:35:14 +0000"
        ],
        "category": [
            "Tutorials",
            "3d",
            "game",
            "three.js",
            "webgl"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63296",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A tutorial that explores some hands-on changes of \"The Aviator\" game to make it more fun and engaging.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/\">How to Add More Fun to a Game: Extending &#8220;The Aviator&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>If you like cute little games you will love Karim Maaloul’s “<a href=\"https://tympanus.net/Tutorials/TheAviator/\" rel=\"noreferrer noopener\" target=\"_blank\">The Aviator</a>” — as a pilot you steer your aircraft across a round little ocean world, evading red “enemies” and collecting blue energy tokens to avoid crashing into the water. It runs entirely in the browser so make sure to quickly play a round to better understand what we are about to do in this tutorial.</p>\n\n\n\n<p>By the way, Karim co-founded the <a href=\"http://epic.net/\" target=\"_blank\" rel=\"noreferrer noopener\">Belgian creative agency Epic</a>. His style is unique in its adorableness and his animation craftmanship is astonishing as you can also see in his <a href=\"http://yakudoo.com/work/webgl-experiments/\" rel=\"noreferrer noopener\" target=\"_blank\">series of WebGL experiments</a>.</p>\n\n\n\n<p>Karim thankfully <a href=\"https://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\" rel=\"noreferrer noopener\" target=\"_blank\">wrote about the making of</a> and <a href=\"https://github.com/yakudoo/TheAviator\" rel=\"noreferrer noopener\" target=\"_blank\">open sourced the code</a> and while it is a fun little game there is still a lot of potential to get even more out of it. In this article we will explore some hands-on changes on how to bring the most fun based on the foundation we have here, a small browser game using Three.js.</p>\n\n\n\n<p>This tutorial requires some knowledge of JavaScript and Three.js. </p>\n\n\n\n<h2>What makes a game&nbsp;fun?</h2>\n\n\n\n<p>While there obviously is no definitive recipe there are a few key mechanics that will maximize your chances of generating fun. There is a great compilation on <a href=\"https://www.gamedesigning.org/gaming/great-games/\" rel=\"noreferrer noopener\" target=\"_blank\">gamedesigning.org</a>, so let’s see which items apply already:</p>\n\n\n\n<p><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Great controls<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>An interesting theme and visual style<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f6ab.png\" alt=\"🚫\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Excellent sound and music<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f6ab.png\" alt=\"🚫\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Captivating worlds<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f914.png\" alt=\"🤔\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Fun gameplay<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f6ab.png\" alt=\"🚫\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Solid level design<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f6ab.png\" alt=\"🚫\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>An entertaining story &amp; memorable characters<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f914.png\" alt=\"🤔\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Good balance of challenge and reward<br></strong><img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/2705.png\" alt=\"✅\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> <strong>Something different</strong></p>\n\n\n\n<p>We can see there’s lots to do, too much for a single article of course, so we will get to the general game layout, story, characters and balance later. Now we will improve the gameplay and add sounds — let&#8217;s go!</p>\n\n\n\n<h2>Adding weapons</h2>\n\n\n\n<p>Guns are always fun! Some games like Space Invaders consist entirely of shooting and it is a great mechanic to add visual excitement, cool sound effects and an extra dimension to the skill requirement so we not only have the up and down movement of the aircraft.</p>\n\n\n\n<p>Let’s try some simple gun designs:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter is-resized\"><img loading=\"lazy\" src=\"https://cdn-images-1.medium.com/max/1600/1*o5seoFWkphDF2ezGRgs1ww.png\" alt=\"\" width=\"521\" height=\"216\"/><figcaption>The “Simple gun” (top) and the “Better gun” (bottom).</figcaption></figure></div>\n\n\n\n<p>These 3D models consist of only 2–3 cylinders of shiny metal material:</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>const metalMaterial = new THREE.MeshStandardMaterial({\n    color: 0x222222,\n    flatShading: true,\n    roughness: 0.5,\n    metalness: 1.0\n})\n\nclass SimpleGun {\n    static createMesh() {\n        const BODY_RADIUS = 3\n        const BODY_LENGTH = 20\n\n        const full = new THREE.Group()\n        const body = new THREE.Mesh(\n            new THREE.CylinderGeometry(BODY_RADIUS, BODY_RADIUS, BODY_LENGTH),\n            metalMaterial,\n        )\n        body.rotation.z = Math.PI/2\n        full.add(body)\n\n        const barrel = new THREE.Mesh(\n            new THREE.CylinderGeometry(BODY_RADIUS/2, BODY_RADIUS/2, BODY_LENGTH),\n            metalMaterial,\n        )\n        barrel.rotation.z = Math.PI/2\n        barrel.position.x = BODY_LENGTH\n        full.add(barrel)\n\n        return full\n    }\n}</code></pre>\n\n\n\n<p>We will have 3 guns: A <em>SimpleGun</em>, then the <em>DoubleGun</em> as just two of those and then the <em>BetterGun </em>which has just a bit different proportions and another cylinder at the tip.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/1600/1*FHDJLF-2Bs0dqlaIC_IqMQ.png\" alt=\"\"/><figcaption>Guns mounted to the&nbsp;airplane</figcaption></figure></div>\n\n\n\n<p>Positioning the guns on the plane was done by simply experimenting with the positional x/y/z values.</p>\n\n\n\n<p>The shooting mechanic itself is straight forward:</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>class SimpleGun {\n  downtime() {\n    return 0.1\n  }\n\n  damage() {\n    return 1\n  }\n\n  shoot(direction) {\n    const BULLET_SPEED = 0.5\n    const RECOIL_DISTANCE = 4\n    const RECOIL_DURATION = this.downtime() / 1.5\n\n    const position = new THREE.Vector3()\n    this.mesh.getWorldPosition(position)\n    position.add(new THREE.Vector3(5, 0, 0))\n    spawnProjectile(this.damage(), position, direction, BULLET_SPEED, 0.3, 3)\n\n    // Little explosion at exhaust\n    spawnParticles(position.clone().add(new THREE.Vector3(2,0,0)), 1, Colors.orange, 0.2)\n\n    // Recoil of gun\n    const initialX = this.mesh.position.x\n    TweenMax.to(this.mesh.position, {\n      duration: RECOIL_DURATION,\n      x: initialX - RECOIL_DISTANCE,\n      onComplete: () =&gt; {\n        TweenMax.to(this.mesh.position, {\n          duration: RECOIL_DURATION,\n          x: initialX,\n        })\n      },\n    })\n  }\n}\n\nclass Airplane {\n  shoot() {\n    if (!this.weapon) {\n      return\n    }\n\n    // rate-limit shooting\n    const nowTime = new Date().getTime() / 1000\n    if (nowTime-this.lastShot &lt; this.weapon.downtime()) {\n      return\n    }\n    this.lastShot = nowTime\n\n    // fire the shot\n    let direction = new THREE.Vector3(10, 0, 0)\n    direction.applyEuler(airplane.mesh.rotation)\n    this.weapon.shoot(direction)\n\n    // recoil airplane\n    const recoilForce = this.weapon.damage()\n    TweenMax.to(this.mesh.position, {\n      duration: 0.05,\n      x: this.mesh.position.x - recoilForce,\n    })\n  }\n}\n\n// in the main loop\nif (mouseDown&#091;0] || keysDown&#091;&#039;Space&#039;]) {\n  airplane.shoot()\n}</code></pre>\n\n\n\n<p>Now the collision detection with the enemies, we just check whether the enemy’s bounding box intersects with the bullet’s box:</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>class Enemy {\n\ttick(deltaTime) {\n\t\t...\n\t\tconst thisAabb = new THREE.Box3().setFromObject(this.mesh)\n\t\tfor (const projectile of allProjectiles) {\n\t\t\tconst projectileAabb = new THREE.Box3().setFromObject(projectile.mesh)\n\t\t\tif (thisAabb.intersectsBox(projectileAabb)) {\n\t\t\t\tspawnParticles(projectile.mesh.position.clone(), 5, Colors.brownDark, 1)\n\t\t\t\tprojectile.remove()\n\t\t\t\tthis.hitpoints -= projectile.damage\n\t\t\t}\n\t\t}\n\t\tif (this.hitpoints &lt;= 0) {\n\t\t\tthis.explode()\n\t\t}\n\t}\n\n\texplode() {\n\t\tspawnParticles(this.mesh.position.clone(), 15, Colors.red, 3)\n\t\tsceneManager.remove(this)\n\t}\n}</code></pre>\n\n\n\n<p>Et voilá, we can shoot with different weapons and it’s super fun!</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://cdn-images-1.medium.com/max/1600/1*auawAUzJkfAho1opTT94Mg.gif\" alt=\"\"/></figure>\n\n\n\n<p></p>\n\n\n\n<h2>Changing the energy system to lives and&nbsp;coins</h2>\n\n\n\n<p>Currently the game features an energy/fuel bar that slowly drains over time and fills up when collecting the blue pills. I feel like this makes sense but a more conventional system of having lives as health, symbolized by hearts, and coins as goodies is clearer to players and will allow for more flexibility in the gameplay.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter is-resized\"><img loading=\"lazy\" src=\"https://cdn-images-1.medium.com/max/1600/1*DiGudgI1uLeOeW6YSyBafg.png\" alt=\"\" width=\"677\" height=\"181\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter is-resized\"><img loading=\"lazy\" src=\"https://cdn-images-1.medium.com/max/1600/1*5U9Of77W63w_aTXfN2TGuw.png\" alt=\"\" width=\"622\" height=\"185\"/></figure></div>\n\n\n\n<p>In the code the change from blue pills to golden coins is easy: We changed the color and then the geometry from <code>THREE.TetrahedronGeometry(5,0)</code> to <code>THREE.CylinderGeometry(4, 4, 1, 10)</code>.</p>\n\n\n\n<p>The new logic now is: We start out with three lives and whenever our airplane crashes into an enemy we lose one. The amount of collected coins show in the interface. The coins don’t yet have real impact on the gameplay but they are great for the score board and we can easily add some mechanics later: For example that the player can buy accessoires for the airplane with their coins, having a lifetime coin counter or we could design a game mode where the task is to not miss a single coin on the map.</p>\n\n\n\n<h2>Adding sounds</h2>\n\n\n\n<p>This is an obvious improvement and conceptually simple — we just need to find fitting, free sound bites and integrate them.</p>\n\n\n\n<p>Luckily on <a href=\"https://freesound.org\" rel=\"noreferrer noopener\" target=\"_blank\">https://freesound.org</a> and <a href=\"https://www.zapsplat.com/\" rel=\"noreferrer noopener\" target=\"_blank\">https://www.zapsplat.com/</a> we can search for sound effects and use them freely, just make sure to attribute where required.</p>\n\n\n\n<p>Example of a gun shot sound: <a href=\"https://freesound.org/people/LeMudCrab/sounds/163456/\" rel=\"noreferrer noopener\" target=\"_blank\">https://freesound.org/people/LeMudCrab/sounds/163456/</a>.</p>\n\n\n\n<p>We load all 24 sound files at the start of the game and then to play a sound we code a simple <code>audioManager.play(‘shot-soft’)</code>. Repetitively playing the same sound can get boring for the ears when shooting for a few seconds or when collecting a few coins in a row, so we make sure to have several different sounds for those and just select randomly which one to play.</p>\n\n\n\n<p>Be aware though that browsers require a page interaction, so basically a mouse click, before they allow a website to play sound. This is to prevent websites from annoyingly auto-playing sounds directly after loading. We can simply require a click on a “Start” button after page load to work around this.</p>\n\n\n\n<h2>Adding collectibles</h2>\n\n\n\n<p>How do we get the weapons or new lives to the player? We will spawn “collectibles” for that, which is the item (a heart or gun) floating in a bubble that the player can catch.</p>\n\n\n\n<p>We already have the spawning logic in the game, for coins and enemies, so we can adopt that easily.</p>\n\n\n\n<pre class=\"wp-block-code has-small-font-size\"><code>class Collectible {\n\tconstructor(mesh, onApply) {\n\t\tthis.mesh = new THREE.Object3D()\n\t\tconst bubble = new THREE.Mesh(\n\t\t\tnew THREE.SphereGeometry(10, 100, 100),\n\t\t\tnew THREE.MeshPhongMaterial({\n\t\t\t\tcolor: COLOR_COLLECTIBLE_BUBBLE,\n\t\t\t\ttransparent: true,\n\t\t\t\topacity: .4,\n\t\t\t\tflatShading: true,\n\t\t\t})\n\t\t)\n\t\tthis.mesh.add(bubble)\n\t\tthis.mesh.add(mesh)\n\t\t...\n\t}\n\n\n\ttick(deltaTime) {\n\t\trotateAroundSea(this, deltaTime, world.collectiblesSpeed)\n\n\t\t// rotate collectible for visual effect\n\t\tthis.mesh.rotation.y += deltaTime * 0.002 * Math.random()\n\t\tthis.mesh.rotation.z += deltaTime * 0.002 * Math.random()\n\n\t\t// collision?\n\t\tif (utils.collide(airplane.mesh, this.mesh, world.collectibleDistanceTolerance)) {\n\t\t\tthis.onApply()\n\t\t\tthis.explode()\n\t\t}\n\t\t// passed-by?\n\t\telse if (this.angle &gt; Math.PI) {\n\t\t\tsceneManager.remove(this)\n\t\t}\n\t}\n\n\n\texplode() {\n\t\tspawnParticles(this.mesh.position.clone(), 15, COLOR_COLLECTIBLE_BUBBLE, 3)\n\t\tsceneManager.remove(this)\n\t\taudioManager.play(&#039;bubble&#039;)\n\n\t\t// animation to make it very obvious that we collected this item\n\t\tTweenMax.to(...)\n\t}\n}\n\n\nfunction spawnSimpleGunCollectible() {\n\tconst gun = SimpleGun.createMesh()\n\tgun.scale.set(0.25, 0.25, 0.25)\n\tgun.position.x = -2\n\n\tnew Collectible(gun, () =&gt; {\n\t\tairplane.equipWeapon(new SimpleGun())\n\t})\n}</code></pre>\n\n\n\n<p>And that’s it, we have our collectibles:</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/1600/1*Qlcdqd92FVR73rTvwegUIA.gif\" alt=\"\"/></figure></div>\n\n\n\n<p>The only problem is that I couldn’t for the life of me create a heart model from the three.js primitives so I resorted to a <a href=\"https://www.cgtrader.com/free-3d-models/various/various-models/simple-low-poly-heart\" rel=\"noreferrer noopener\" target=\"_blank\">free, low-poly 3D model</a> from the platform cgtrader.</p>\n\n\n\n<p>Defining the spawn-logic on the map in a way to have a good balance of challenge and reward requires sensible refining so after some experimenting this felt nice: Spawn the three weapons after a distance of 550, 1150 and 1750 respectively and spawn a life a short while after losing one.</p>\n\n\n\n<h2>Some more&nbsp;polish</h2>\n\n\n\n<ul><li>The ocean’s color gets darker as we progress through the levels</li><li>Show more prominently when we enter a new level</li><li>Show an end game screen after 5 levels</li><li>Adjusted the code for a newer version of the Three.js library</li><li>Tweaked the color theme</li></ul>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"768\" height=\"600\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/Aviator2_shot-768x600.jpg\" alt=\"\" class=\"wp-image-63322\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/Aviator2_shot-768x600.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/Aviator2_shot-384x300.jpg 384w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/Aviator2_shot.jpg 800w\" sizes=\"(max-width: 768px) 100vw, 768px\" /></figure>\n\n\n\n<h2>More, more, more&nbsp;fun!</h2>\n\n\n\n<p>We went from a simple fly-up-and-down gameplay to being able to collect guns and shoot the enemies. The sounds add to the atmosphere and the coins mechanics sets us up for new features later on.</p>\n\n\n\n<p>Make sure to <a href=\"https://beautiful-starburst-d981e5.netlify.app/\" rel=\"noreferrer noopener\" target=\"_blank\"><strong>play our result here</strong></a>! Collect the weapons, have fun with the guns and try to survive until the end of level 5.</p>\n\n\n\n<p>If you are interested in the source code, you find it <a href=\"https://github.com/Badestrand/TheAviator2\" target=\"_blank\" rel=\"noreferrer noopener\">here on GitHub</a>.</p>\n\n\n\n<p>How to proceed from here? We improved on some key mechanics and have a proper basis but this is not quite a finalized, polished game yet.</p>\n\n\n\n<p>As a next step we plan to dive more into game design theory. We will look at several of the most popular games of the endless runner genre to get insights into their structure and mechanics and how they keep their players engaged. The aim would be to learn more about the advanced concepts and build them into <em>The Aviator</em>.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://cdn-images-1.medium.com/max/1600/1*kRZIZ0KwdwbC7eDcS8R-wA.gif\" alt=\"\"/><figcaption>Subway Surfer, the most successful &#8220;endless runner&#8221; game.</figcaption></figure></div>\n\n\n\n<p>Stay tuned, so long!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/20/how-to-add-more-fun-to-a-game-extending-the-aviator/\">How to Add More Fun to a Game: Extending &#8220;The Aviator&#8221;</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A tutorial that explores some hands-on changes of \"The Aviator\" game to make it\nmore fun and engaging.\n\nThe post How to Add More Fun to a Game: Extending “The Aviator”\n[https://tympanus.net/codrops/20...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "author": [
            "Joseph Zimmerman"
        ],
        "title": [
            "How To Make A Drag-and-Drop File Uploader With Vue.js 3"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/03/drag-drop-file-uploader-vuejs-3/"
        ],
        "pubDate": [
            "Fri, 18 Mar 2022 10:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/03/drag-drop-file-uploader-vuejs-3/"
        ],
        "description": [
            "Building on a previous article on <a href=\"https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\">How to Build a Drag-and-Drop File Uploader</a>, we’ll be adding some new features, but more importantly (maybe), we’ll be learning how to build it in Vue 3 and learn some best practices for Vue along the waxy."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/03/drag-drop-file-uploader-vuejs-3/\" />\n              <title>How To Make A Drag-and-Drop File Uploader With Vue.js 3</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Make A Drag-and-Drop File Uploader With Vue.js 3</h1>\n                  \n                    \n                    <address>Joseph Zimmerman</address>\n                  \n                  <time datetime=\"2022-03-18T10:30:00&#43;00:00\" class=\"op-published\">2022-03-18T10:30:00+00:00</time>\n                  <time datetime=\"2022-03-18T10:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>What’s different about the file uploader we’re building in this article versus the previous one? The previous drag-and-drop file uploader was built with Vanilla JS and really focused on how to make file uploading and drag-and-drop file selection work, so its feature set was limited. It uploaded the files immediately after you chose them with a simple progress bar and an image thumbnail preview. You can see all of this at <a href=\"https://codepen.io/joezimjs/pen/yPWQbd\">this demo</a>.</p>\n\n<p>In addition to using Vue, we’ll be changing the features up: after an image is added, it will not upload immediately. Instead, a thumbnail preview will show up. There will be a button on the top right of the thumbnail that will remove the file from the list in case you didn’t mean to select an image or change your mind about uploading it.</p>\n\n<p>You’ll then click on the “Upload” button to send the image data to the server and each image will display its upload status. To top it all off, I crafted some snazzy styles (I’m no designer, though, so don’t judge too harshly). We won’t be digging into those styles in this tutorial, but they’ll be available for you to copy or sift through yourself in the <a href=\"https://github.com/joezimjs/vue-dd-uploader\">GitHub Repository</a> &mdash; though, if you’re going to copy them, make sure you set up your project to be able to use Stylus styles (or you can set it up to use Sass and change <code>lang</code> to <code>scss</code> for the style blocks and it will work that way). You can also see what we’re building today on <a href=\"https://vue-dd-uploader.pages.dev/\">the demo page</a>.</p>\n\n<p><strong>Note</strong>: <em>I will assume that readers have strong JavaScript knowledge and a good grasp of the Vue features and APIs, especially Vue 3’s composition API, but not necessarily the best ways to use them. This article is to learn how to create a drag-and-drop uploader in the context of a Vue app while discussing good patterns and practices and will not go deep into how to use Vue itself.</em></p>\n\n<h2 id=\"setup\">Setup</h2>\n\n<p>There are a lot of ways to set up a Vue project: <a href=\"https://cli.vuejs.org/guide/\">Vue CLI</a>, <a href=\"https://vitejs.dev/guide/#scaffolding-your-first-vite-project\">Vite</a>, <a href=\"https://v3.nuxtjs.org/getting-started/installation\">Nuxt</a>, and <a href=\"https://quasar.dev/start/pick-quasar-flavour\">Quasar</a> all have their own project scaffolding tools, and I’m sure there are more. I’m not all that familiar with most of them, and I’m not going to prescribe any one tool as of right for this project, so I recommend reading the documentation for whichever you choose to figure out how to set up the way we need it for this little project.</p>\n\n<p>We need to be set up with Vue 3 with the <a href=\"https://v3.vuejs.org/api/sfc-script-setup.html\">script setup</a> syntax, and if you’re snatching my styles from the <a href=\"https://github.com/joezimjs/vue-dd-uploader\">Github repo</a>, you’ll need to make sure you’re set up to have your Vue styles compiled from Stylus (or you can set it up to use Sass and change <code>lang</code> to “scss” for the style blocks and it will work that way).</p>\n\n<h2 id=\"drop-zone\">Drop Zone</h2>\n\n<p>Now that we have the project set up, let’s dive into the code. We’ll start with a component that handles the drag-and-drop functionality. This will be a simple wrapper <code>div</code> element with a bunch of event listeners and emitters for the most part. This sort of element is a great candidate for a reusable component (despite it only being used once in this particular project): it has a very specific job to do and that job is generic enough to be used in a lot of different ways/places without the need of a ton of customization options or complexity.</p>\n\n<p>This is one of those things good developers are always keeping an eye out for. Cramming a ton of functionality into a single component would be a bad idea for this project or any other because then 1) it can’t be reused if you find a similar situation later and 2) it’s more difficult to sort through the code and figure out how each piece relates to each other. So, we’re going to do what we can to follow this principle and it starts here with the <code>DropZone</code> component. We’ll start with a simple version of the component and then spruce it up a bit to help you grok what’s going on a bit easier, so let’s create a <code>DropZone.vue</code> file in the <code>src/components</code> folder:</p>\n\n<pre><code class=\"language-html\">&lt;template&gt;\n    &lt;div @drop.prevent=\"onDrop\"&gt;\n        &lt;slot&gt;&lt;/slot&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { onMounted, onUnmounted } from 'vue'\nconst emit = defineEmits(['files-dropped'])\n\nfunction onDrop(e) {\n    emit('files-dropped', [...e.dataTransfer.files])\n}\n\nfunction preventDefaults(e) {\n    e.preventDefault()\n}\n\nconst events = ['dragenter', 'dragover', 'dragleave', 'drop']\n\nonMounted(() =&gt; {\n    events.forEach((eventName) =&gt; {\n        document.body.addEventListener(eventName, preventDefaults)\n    })\n})\n\nonUnmounted(() =&gt; {\n    events.forEach((eventName) =&gt; {\n        document.body.removeEventListener(eventName, preventDefaults)\n    })\n})\n&lt;/script&gt;</code></pre>\n\n<p>First, looking at the template, you’ll see a <code>div</code> with a <code>drop</code> event handler (with a <code>prevent</code> modifier to prevent default actions) calling a function that we’ll get to in a moment. Inside that <code>div</code> is a <code>slot</code>, so we can reuse this component with custom content inside it. Then we get to the JavaScript code, which is inside a <code>script</code> tag with the <code>setup</code> attribute.</p>\n\n<p><strong>Note</strong>: <em>If you’re unfamiliar with what benefits we get from this attribute and you didn’t read the link we added above, head over to the <a href=\"https://v3.vuejs.org/api/sfc-script-setup.html\">&lt;script setup&gt; documentation for single file components</a>.</em></p>\n\n<p>Inside the script, we define an event that we’ll emit called ‘files-dropped’ that other components can use to do something with the files that get dropped here. Then we define the function <code>onDrop</code> to handle the drop event. Right now, all it does is emit the event we just defined and add an array of the files that were just dropped as the payload. Note, we’re using a trick with the spread operator to convert the list of files from the <code>FileList</code> that <code>e.dataTransfer.files</code> gives us to an array of <code>File</code>s so all the array methods can be called on it by the part of the system that takes the files.</p>\n\n<p>Finally, we come to the place where we handle the other drag/drop events that happen on the body, preventing the default behavior during the drag and drop (namely that it’ll open one of the files in the browser. We create a function that simply calls <code>preventDefault</code> on the event object. Then, in the <code>onMounted</code> lifecycle hook we iterate over the list of events and prevent default behavior for that even on the document body. In the <code>onUnmounted</code> hook, we remove those listeners.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"https://www.smashingconf.com/online-workshops/\">Smashing Online Workshops</a></strong> on <strong>front-end &amp; UX</strong>, with practical takeaways, live sessions, <strong>video recordings</strong> and a friendly Q&amp;A. On design systems, UX, web performance and CSS/JS. With Brad Frost, Stephanie Troeth and <a href=\"https://smashingconf.com/online-workshops/workshops\">so many others</a>.</p>\n<a data-instant href=\"smashing-workshops\" class=\"btn btn--green btn--large\">Jump to online workshops&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"smashing-workshops\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-scubadiving-panel.svg\"\n    alt=\"Feature Panel\"\n    width=\"257\"\n    height=\"355\"\n/>\n\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h3 id=\"active-state\">Active State</h3>\n\n<p>So, what extra functionality can we add? The one thing I decided to add was some state indicating whether the drop zone was “active”, meaning that a file is currently hovering over the drop zone. That’s simple enough; create a <code>ref</code> called <code>active</code>, set it to true on the events when the files are dragged over the drop zone and false when they leave the zone or are dropped.</p>\n\n<p>We’ll also want to expose this state to the components using <code>DropZone</code>, so we’ll turn our <code>slot</code> into a scoped slot and expose that state there. Instead of the scoped slot (or in addition to it for added flexibility), we could emit an event to inform the outside of the value of <code>active</code> as it changes. The advantage of this is that the entire component that is using <code>DropZone</code> can have access to the state, rather than it being limited to the components/elements within the slot in the template. We’re going to stick with the scoped slot for this article though.</p>\n\n<p>Finally, for good measure, we’ll add a <code>data-active</code> attribute that reflects <code>active</code>&rsquo;s value so we can key off it for styling. You could also use a class if you prefer, but I tend to like data attributes for state modifiers.</p>\n\n<p>Let’s write it out:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-html\">&lt;template&gt;\n    &lt;!-- add `data-active` and the event listeners --&gt;\n    &lt;div :data-active=\"active\" @dragenter.prevent=\"setActive\" @dragover.prevent=\"setActive\" @dragleave.prevent=\"setInactive\" @drop.prevent=\"onDrop\"&gt;\n        &lt;!-- share state with the scoped slot --&gt;\n        &lt;slot :dropZoneActive=\"active\"&gt;&lt;/slot&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n// make sure to import `ref` from Vue\nimport { ref, onMounted, onUnmounted } from 'vue'\nconst emit = defineEmits(['files-dropped'])\n\n// Create `active` state and manage it with functions\nlet active = ref(false)\n\nfunction setActive() {\n    active.value = true\n}\nfunction setInactive() {\n    active.value = false\n}\n\nfunction onDrop(e) {\n    setInactive() // add this line too\n    emit('files-dropped', [...e.dataTransfer.files])\n}\n\n// ... nothing changed below this\n&lt;/script&gt;\n</code></pre>\n</div>\n\n<p>I threw some comments in the code to note where the changes were, so I won’t dive too deep into it, but I have some notes. We’re using the <code>prevent</code> modifiers on all the event listeners again to make sure that default behavior doesn’t activate. Also, you’ll notice that the <code>setActive</code> and <code>setInactive</code> functions seem like a bit of overkill since you could just set <code>active</code> directly, and you could make that argument for sure, but just wait a bit; there will be another change that truly justifies the creation of functions.</p>\n\n<p>You see, there’s an issue with what we’ve done. As you can see in the video below, using this code for the drop zone means that it can flicker between active and inactive states while you drag something around inside the drop zone.</p>\n\n\n<figure class=\"video-embed-container break-out\">\n  <div\n  \n  class=\"video-embed-container--wrapper\">\n\t\t<lite-youtube\n\t\t\tvideoid=\"nqAxR3GcMI8\"\n\t\t\tvideotitle=\"Flickery Drag Interaction\"\n\t\t></lite-youtube>\n\t</div>\n\t\n\t\t<figcaption>Flickery Drag Interaction</figcaption>\n\t\n</figure>\n\n<p>Why is it doing that? When you drag something over a child element, it will “enter” that element and “leave” the drop zone, which causes it to go inactive. The <code>dragenter</code> event will bubble up to the drop zone, but it happens before the <code>dragleave</code> event, so that doesn’t help. Then a <code>dragover</code> event will fire again on the drop zone which will flip it back to active but not before flickering to the inactive state.</p>\n\n<p>To fix this, we’ll add a short timeout to the <code>setInactive</code> function to prevent it from going inactive immediately. Then <code>setActive</code> will clear that timeout so that if it is called before we actually set it as inactive, it won’t actually become inactive. Let’s make those changes:</p>\n\n<pre><code class=\"language-javascript\">// Nothing changed above\n\nlet active = ref(false)\nlet inActiveTimeout = null // add a variable to hold the timeout key\n\nfunction setActive() {\n    active.value = true\n    clearTimeout(inActiveTimeout) // clear the timeout\n}\nfunction setInactive() {\n    // wrap it in a `setTimeout`\n    inActiveTimeout = setTimeout(() =&gt; {\n        active.value = false\n    }, 50)\n}\n\n// Nothing below this changes</code></pre>\n\n<p>You’ll note a timeout of 50 milliseconds. Why this number? Because I’ve tested several different timeouts and this feels the best.</p>\n\n<p>I know that’s subjective but hear me out. I’ve tested much smaller timeouts and 15ms was about as low as I went where I never saw a flicker, but who knows how that’ll work on other hardware? It has too small a margin of error in my mind. You also probably don’t want to go over 100ms because that can cause perceived lag when a user intentionally does something that <em>should</em> cause it to go inactive. In the end, I settled somewhere in the middle that is long enough to pretty much guarantee there won’t be any flickering on any hardware and there should be no perceived lag.</p>\n\n<p>That’s all we need for the <code>DropZone</code> component, so let’s move on to the next piece of the puzzle: a file list manager.</p>\n\n<h2 id=\"file-list-manager\">File List Manager</h2>\n\n<p>I guess the first thing that needs to be done is an explanation of what I mean by the file list manager. This will be a composition function that returns several methods for managing the state of the files the user is attempting to upload. This could also be implemented as a <a href=\"https://vuex.vuejs.org/\">Vuex</a>/<a href=\"https://pinia.vuejs.org/\">Pinia</a>/<a href=\"https://awesome-vue.js.org/components-and-libraries/utilities.html#state-management\">alternative</a> store as well, but to keep things simple and prevent needing to install a dependency if we don’t need to, it makes a lot of sense to keep it as a composition function, especially since the data isn’t likely to be needed widely across the application, which is where the stores are the most useful.</p>\n\n<p>You could also just build the functionality directly into the component that will be using our <code>DropZone</code> component, but this functionality seems like something that could very easily be reused; pulling it out of the component makes the component easier to understand the intent of what is going on (assuming good function and variable names) without needing to wade through the entire implementation.</p>\n\n<p>Now that we’ve made it clear this is going to be a composition function and why, here’s what the file list manager will do:</p>\n\n<ol>\n<li>Keep a list of files that have been selected by the user;</li>\n<li>Prevent duplicate files;</li>\n<li>Allow us to remove files from the list;</li>\n<li>Augment the files with useful metadata: an ID, a URL that can be used to show a preview of the file, and the file’s upload status.</li>\n</ol>\n\n<p>So, let’s build it in <code>src/compositions/file-list.js</code>:</p>\n\n<pre><code class=\"language-javascript\">import { ref } from 'vue'\n\nexport default function () {\n    const files = ref([])\n\n    function addFiles(newFiles) {\n        let newUploadableFiles = [...newFiles]\n            .map((file) =&gt; new UploadableFile(file))\n            .filter((file) =&gt; !fileExists(file.id))\n        files.value = files.value.concat(newUploadableFiles)\n    }\n\n    function fileExists(otherId) {\n        return files.value.some(({ id }) =&gt; id === otherId)\n    }\n\n    function removeFile(file) {\n        const index = files.value.indexOf(file)\n\n        if (index &gt; -1) files.value.splice(index, 1)\n    }\n\n    return { files, addFiles, removeFile }\n}\n\nclass UploadableFile {\n    constructor(file) {\n        this.file = file\n        this.id = `${file.name}-${file.size}-${file.lastModified}-${file.type}`\n        this.url = URL.createObjectURL(file)\n        this.status = null\n    }\n}</code></pre>\n\n<p>We’re exporting a function by default that returns the file list (as a <code>ref</code>) and a couple of methods that are used to add and remove files from the list. It would be nice to make the file list returned as read-only to force you to use the methods for manipulating the list, which you can do pretty easily using the <code>readonly</code> function imported from Vue, but that would cause issues with the uploader that we’ll build later.</p>\n\n<p>Note that <code>files</code> is scoped to the composition function and set inside it, so each time you call the function, you’ll receive a new file list. If you want to share the state across multiple components/calls, then you’ll need to pull that declaration out of the function so it’s scoped and set once in the module, but in our case we’re only using it once, so it doesn’t really matter, and I was working under the thought that each instance of the file list would be used by a separate uploader and any state can be passed down to child components rather than shared via the composition function.</p>\n\n<p>The most complex piece of this file list manager is adding new files to the list. First, we’re making sure that if a <code>FileList</code> object was passed instead of an array of <code>File</code> objects, then we convert it to an array (as we did in the <code>DropZone</code> when we emitted the files. This means we could probably skip that transformation, but better safe than sorry). Then we convert the file to an <code>UploadableFile</code>, which is a class we’re defining that wraps the file and gives us a few extra properties. We’re generating an <code>id</code> based on several aspects of the file so we can detect duplicates, a <code>blob://</code> URL of the image so we can show preview thumbnails and a status for tracking uploads.</p>\n\n<p>Now that we have the IDs on the files, we filter out any files that already exist in the file list before concatenating them to the end of the file list.</p>\n\n<h3 id=\"possible-improvements\">Possible Improvements</h3>\n\n<p>While this file list manager works well for what it does, there are a number of upgrades that can be done. For one thing, instead of wrapping the file in a new class and then having to call <code>.file</code> on it to access the original file object, we could wrap the file in a proxy that specifies our new properties, but then will forward any other property requests on to the original object, so it is more seamless.</p>\n\n<p>As an alternative to wrapping each file in an <code>UploadableFile</code>, we could have provided utility functions that could return the ID or URL given a file, but that’s slightly less convenient and would mean that you’re potentially calculating these properties multiple times (for each render, and so on), but that shouldn’t really matter unless you’re dealing with people dropping thousands of images at once, in which case you can try memorizing it.</p>\n\n<p>As for the status, that isn’t pulled straight from the <code>File</code>, so a simple utility function like the others wouldn’t be possible, but you could store the status of each file with the uploader (we’ll be building that later) rather than directly with the files. This might be a better way of handling it in a large app so we don’t end up filling the <code>UploadableFile</code> class with a bunch of properties that just facilitate a single area of the app and are useless elsewhere.</p>\n\n<p><strong>Note</strong>: <em>For our purposes, having the properties available directly on our file object is by far the most convenient, but it can definitely be argued that it isn’t the most appropriate.</em></p>\n\n<p>Another possible improvement is allowing you to specify a filter so that it only allows certain file types to be added to the list. This would also require <code>addFiles</code> to return errors when some files don’t match the filter in order to let the user know they made a mistake. This is definitely something that should be done in production-ready applications.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"better-together\">Better Together</h2>\n\n<p>We’re far from a finished product, but let’s put the pieces we have together to verify everything is working so far. We’re going to be editing the <code>/src/App.vue</code> file, to put these pieces in, but you can add them to whatever page/section component you want. If you’re putting it inside an alternate component, though, ignore anything (like an ID of “app”) that would only be seen on the main app component.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-html\">&lt;template&gt;\n    &lt;div id=\"app\"&gt;\n        &lt;DropZone class=\"drop-area\" @files-dropped=\"addFiles\" #default=\"{ dropZoneActive }\"&gt;\n            &lt;div v-if=\"dropZoneActive\"&gt;\n                &lt;div&gt;Drop Them&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div v-else&gt;\n                &lt;div&gt;Drag Your Files Here&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/DropZone&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport useFileList from './compositions/file-list'\nimport DropZone from './components/DropZone.vue'\n\nconst { files, addFiles, removeFile } = useFileList()\n&lt;/script&gt;</code></pre>\n</div>\n\n<p>If you start with the <code>script</code> section, you’ll see we’re not doing a whole lot. We’re importing the two files we just finished writing and we’re initializing the file list. Note, we’re not using <code>files</code> or <code>removeFile</code> yet, but we will later, so I’m just keeping them there for now. Sorry if ESLint is complaining about unused variables. We’ll want <code>files</code> at the very least so we can see if it’s working later.</p>\n\n<p>Moving on to the template, you can see we’re using the <code>DropZone</code> component right away. We’re giving it a class so we can style it, passing the <code>addFiles</code> function for the “files-dropped” event handler, and grabbing the scoped slot variable so our content can be dynamic based on whether or not the drop zone is active. Then, inside the drop zone’s slot, we create a <code>div</code> showing a message to drag files over if it’s inactive and a message to drop them when it is active.</p>\n\n<p>Now, you’ll probably want some styles to at least make the drop zone larger and easier to find. I won’t be pasting any here, but you can find the styles I used for <a href=\"https://github.com/joezimjs/vue-dd-uploader/blob/main/src/App.vue\"><code>App.vue</code> in the repo</a>.</p>\n\n<p>Now, before we can test the current state of the app, we’ll need the beta version of Vue DevTools installed in our browser (stable version doesn’t support Vue 3 quite yet). You can get <a href=\"https://chrome.google.com/webstore/detail/vuejs-devtools/ljjemllljcmogpfapbkkighbhhppjdbg\">Vue DevTools from Chrome web store</a> for most Chromium-based browsers or <a href=\"https://github.com/vuejs/vue-devtools/releases/download/v6.0.0-beta.8/vuejs_devtools_beta-6.0.0.8-an+fx.xpi\">download Vue DevTools here for Firefox</a>.</p>\n\n<p>After you’ve installed that, run your app with <code>npm run serve</code> (Vue CLI), <code>npm run dev</code> (Vite), or whatever script you use in your app, then open it in your browser via the URL given in the command line. Open up the Vue DevTools, then drag and drop some images onto the drop zone. If it worked, you should see an array of however many files you added when you view the component we just wrote (see screenshot below).</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"273\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot with Vue Devtools showing the files we added\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Vue DevTools showing the files we added. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f5a0917c-20b3-475c-9a0f-05a31a61cb94/1-drag-and-drop-file-uploader-vuejs-3.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Nice! Now Let’s make this a bit more accessible for users who can’t (or don’t want to) drag and drop, by adding a hidden file input (that becomes visible when focused via keyboard for those that need it, assuming you’re using my styles) and wrapping a big label around everything to allow us to use it despite its invisibility. Finally, we’ll need to add an event listener to the file input so that when a user selects a file, we can add it to our file list.</p>\n\n<p>Let’s start with the changes to the <code>script</code> section. We’re just going to add a function to the end of it:</p>\n\n<pre><code class=\"language-javascript\">function onInputChange(e) {\n    addFiles(e.target.files)\n    e.target.value = null\n}</code></pre>\n\n<p>This function handles the “change” event fired from the input and adds the files from the input to the file list. Note the last line in the function resetting the value of the input. If a user adds a file via the input, decides to remove it from our file list, then changes their mind and decides to use the input to add that file again, then the file input will not fire the “change” event because the file input has not changed. By resetting the value like this, we ensure the event will always be fired.</p>\n\n<p>Now, let’s make our changes to the template. Change all of the code inside the <code>DropZone</code> slot to the following:</p>\n\n<pre><code class=\"language-javascript\">&lt;label for=\"file-input\"&gt;\n    &lt;span v-if=\"dropZoneActive\"&gt;\n        &lt;span&gt;Drop Them Here&lt;/span&gt;\n        &lt;span class=\"smaller\"&gt;to add them&lt;/span&gt;\n    &lt;/span&gt;\n    &lt;span v-else&gt;\n        &lt;span&gt;Drag Your Files Here&lt;/span&gt;\n        &lt;span class=\"smaller\"&gt;\n            or &lt;strong&gt;&lt;em&gt;click here&lt;/em&gt;&lt;/strong&gt; to select files\n        &lt;/span&gt;\n    &lt;/span&gt;\n\n    &lt;input type=\"file\" id=\"file-input\" multiple @change=\"onInputChange\" /&gt;\n&lt;/label&gt;</code></pre>\n\n<p>We wrap the entire thing in a label that is linked to the file input, then we add our dynamic messages back in, though I’ve added a bit more messages to inform users they can click to select files. I also added a bit for the “drop them” message so that they have the same number of lines of text so the drop zone won’t change size when active. Finally, we add the file input, set the <code>multiple</code> attribute to allow users to select multiple files at a time, then wire up the “change” event listener to the function we just wrote.</p>\n\n<p>Run the app again, if you stopped it, we should see the same result in the Vue DevTools whether we drag and drop files or click the box to use the file selector.</p>\n\n<h2 id=\"previewing-selected-images\">Previewing Selected Images</h2>\n\n<p>Great, but users aren’t going to be using Vue DevTools to see if the files they dropped are actually added, so let’s start showing the users those files. We’ll start just by editing <code>App.vue</code> (or whatever component file you added the <code>DropZone</code> to) and showing a simple text list with the file names.</p>\n\n<p>Let’s add the following bit of code to the template immediately following the <code>label</code> we just added in the previous step:</p>\n\n<pre><code class=\"language-javascript\">&lt;ul v-show=\"files.length\"&gt;\n    &lt;li v-for=\"file of files\" :key=\"file.id\"&gt;{{ file.file.name }}&lt;/li&gt;\n&lt;/ul&gt;</code></pre>\n\n<p>Now, with the app running, if you add some files to the list, you should see a bulleted list of the file names. If you copied my styles, it might look a bit odd, but that’s alright because we’re changing it soon. Make note that thanks to adding the file’s ID in the file list manager, we now have a key in the loop. The only thing that annoys me personally is that since we wrapped the files, we need to write <code>file.file</code> to access the original file object to get its name. In the end, though, it’s a small sacrifice to make.</p>\n\n<p>Now, let’s start showing the images instead of just listing their names, but it’s time to move this functionality out of this main component. We certainly could, keep putting the file preview functionality here, but there are two good reasons to pull it out:</p>\n\n<ol>\n<li>The functionality is potentially reusable in other cases.</li>\n<li>As this functionality expands, separating it out prevents the main component from getting too bloated.</li>\n</ol>\n\n<p>So, let’s create <code>/src/FilePreview.vue</code> to put this functionality in and we’ll start with just showing the image in a wrapper.</p>\n\n<pre><code class=\"language-html\">&lt;template&gt;\n    &lt;component :is=\"tag\" class=\"file-preview\"&gt;\n        &lt;img :src=\"file.url\" :alt=\"file.file.name\" :title=\"file.file.name\" /&gt;\n    &lt;/component&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\ndefineProps({\n    file: { type: Object, required: true },\n    tag: { type: String, default: 'li' },\n})\n&lt;/script&gt;</code></pre>\n\n<p>Once again, the styles aren’t included here, but you can find them <a href=\"https://github.com/joezimjs/vue-dd-uploader/blob/main/src/components/FilePreview.vue\">on GitHub</a>. First thing to note about the code we have, though, is that we’re wrapping this in a <code>component</code> tag and setting what type of tag it is with a <code>tag</code> prop. This can be a good way to make a component more generic and reusable. We’re currently using this inside an unordered list, so <code>li</code> is the obvious choice, but if we want to use this component somewhere else at some point, it might not be in a list, so we would want a different tag.</p>\n\n<p>For the image, we’re using the URL created by the file list manager, and we’re using the file name as the alt text and as the <code>title</code> attribute so we get that free functionality of users being able to hover over the image and see the file name as a tooltip. Of course, you can always create your own file preview where the file name is written out where it’s always visible for the user. There’s certainly a lot of freedom in how this can be handled.</p>\n\n<p>Moving on to the JavaScript, we see props defined so we can pass in the file that we’re previewing and a tag name to customize the wrapper in order to make this usable in more situations.</p>\n\n<p>Of course, if you try to run this, it doesn’t seem to do anything because we currently aren’t using the <code>FilePreview</code> components. Let’s remedy that now. In the template, replace the current list with this:</p>\n\n<pre><code class=\"language-javascript\">&lt;ul class=\"image-list\" v-show=\"files.length\"&gt;\n    &lt;FilePreview v-for=\"file of files\" :key=\"file.id\" :file=\"file\" tag=\"li\" /&gt;\n&lt;/ul&gt;</code></pre>\n\n<p>Also, we need to import our new component in the <code>script</code> section:</p>\n\n<pre><code class=\"language-javascript\">import  FilePreview  from  './components/FilePreview.vue'</code></pre>\n\n<p>Now if you run this, you’ll see some nice thumbnails of each image you drop or select.</p>\n\n<h3 id=\"remove-files-from-the-list\">Remove Files From the List</h3>\n\n<p>Let’s augment this with the ability to remove a file from the list. We’ll add a button with an “X” in the corner of the image that people can click/tap on to remove the image. To do this, we’ll need to add 2 lines of code to <code>FilePreview.vue</code>. In the template, just above the <code>img</code> tag add the following:</p>\n\n<pre><code class=\"language-javascript\">&lt;button @click=\"$emit('remove', file)\" class=\"close-icon\" aria-label=\"Remove\"&gt;&times;&lt;/button&gt;</code></pre>\n\n<p>Then add this line somewhere in the <code>script</code> section:</p>\n\n<pre><code class=\"language-javascript\">defineEmits(['remove'])</code></pre>\n\n<p>Now, clicking that button will fire a <code>remove</code> event, passing the file along as the payload. Now we need to head back to the main app component to handle that event. All we need to do is to add the event listener to the <code>FilePreview</code> tag:</p>\n\n<pre><code class=\"language-javascript\">&lt;FilePreview  v-for=\"file  of  files\" :key=\"file.id\" :file=\"file\"  tag=\"li\" @remove=\"removeFile\" /&gt;</code></pre>\n\n<p>Thanks to <code>removeFile</code> already being defined by the file list manager and taking the same arguments that we’re passing from the event, we’re done in seconds. Now if you run the app and select some images, you can click on the little “X” and the corresponding image will disappear from the list.</p>\n\n<h3 id=\"possible-improvements-1\">Possible Improvements</h3>\n\n<p>As usual, there are improvements that could be made to this if you’re so inclined and your application is able to reuse this component elsewhere if it is more generic or customizable.</p>\n\n<p>First of all, you could manage the styles better. I know that I didn’t post the styles here, but if you copied them from GitHub and you’re a person that cares a lot about which components control which styles, then you may be thinking that it’d be wiser to have some specific files moved out of this component. As with most of these possible improvements, this is mostly to do with making the component more useful in more situations. Some of the styles are very specific to how I wanted to display the previews for this one little app, but to make it more reusable, we either need to make styles customizable via props or pull them out and let an outer component define the styles.</p>\n\n<p>Another possible change would be to add props that allow you to hide certain elements such as the button that fires the “remove” event. There are more elements coming later in the article that might be good to hide via props as well.</p>\n\n<p>And finally, it might be wise to separate the <code>file</code> prop into multiple props such as <code>url</code>, <code>name</code>, and &mdash; as we’ll see later &mdash; <code>status</code>. This would allow this component to be used in situations where you just have an image URL and name rather than an <code>UploadableFile</code> instance, so it’s more useful in more situations.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"uploading-files\">Uploading Files</h2>\n\n<p>Alright, we have the drag and drop and a preview of the files selected, so now we need to upload those files and keep the user informed of the status of those uploads. We’ll start with creating a new file: <code>/compositions/file-uploader.js</code>. In this file, we’ll export some functions that allow our component to upload the files.</p>\n\n<pre><code class=\"language-javascript\">export async function uploadFile(file, url) {\n    // set up the request data\n    let formData = new FormData()\n    formData.append('file', file.file)\n\n    // track status and upload file\n    file.status = 'loading'\n    let response = await fetch(url, { method: 'POST', body: formData })\n\n    // change status to indicate the success of the upload request\n    file.status = response.ok\n\n    return response\n}\n\nexport function uploadFiles(files, url) {\n    return Promise.all(files.map((file) =&gt; uploadFile(file, url)))\n}\n\nexport default function createUploader(url) {\n    return {\n        uploadFile: function (file) {\n            return uploadFile(file, url)\n        },\n        uploadFiles: function (files) {\n            return uploadFiles(files, url)\n        },\n    }\n}</code></pre>\n\n<p>Before looking into specific functions, note that every function in this file is exported separately so it can be used on its own, but you’ll see that we’ll only be using one of them in our application. This gives some flexibility in how this module is used without actually making the code any more complicated since all we do is add an <code>export</code> statement to enable it.</p>\n\n<p>Now, starting at the top, we have an asynchronous function for uploading a single file. This is constructed in a very similar manner to how it was done in the previous article, but we are using an <code>async</code> function instead (for that wonderful <code>await</code> keyword) and we’re updating the <code>status</code> property on the provided <code>file</code> to keep track of the upload’s progress. This <code>status</code> can have 4 possible values:</p>\n\n<ul>\n<li><code>null</code>: initial value; indicates that it has not started uploading;</li>\n<li><code>&quot;loading&quot;</code>: indicates that the upload is in progress;</li>\n<li><code>true</code>: indicates the upload was successful;</li>\n<li><code>false</code>: indicates the upload failed.</li>\n</ul>\n\n<p>So, when we start the upload, we mark the status as <code>&quot;loading&quot;</code>. Once it’s finished, we mark it as <code>true</code> or <code>false</code> depending on the result’s <code>ok</code> property. Soon we’ll be using these values to show different messages in the <code>FilePreview</code> component. Finally, we return the response in case the caller can use that information.</p>\n\n<p><strong>Note</strong>: <em>Depending on which service you upload your files to, you may need some additional headers for authorization or something, but you can get those from the documentation for those services since I can’t write an example for every service out there.</em></p>\n\n<p>The next function, <code>uploadFiles</code>, is there to allow you to easily upload an array of files. The final function, <code>createUploader</code>, is a function that grants you the ability to use the other functions without having to specify the URL that you’re uploading to every time you call it. It “caches” the URL via a closure and returns versions of each of the two previous functions that don’t require the URL parameter to be passed in.</p>\n\n<h3 id=\"using-the-uploader\">Using the Uploader</h3>\n\n<p>Now that we have these functions defined, we need to use them, so go back to our main app component. Somewhere in the <code>script</code> section, we’ll need to add the following two lines:</p>\n\n<pre><code class=\"language-javascript\">import  createUploader  from  './compositions/file-uploader'\nconst { uploadFiles } = createUploader('YOUR URL HERE')</code></pre>\n\n<p>Of course, you’ll need to change the URL to match whatever your upload server uses. Now we just need to call <code>uploadFiles</code> from somewhere, so let’s add a button that calls it in its click handler. Add the following at the end of the template:</p>\n\n<pre><code class=\"language-javascript\">&lt;button @click.prevent=\"uploadFiles(files)\"  class=\"upload-button\"&gt;Upload&lt;/button&gt;</code></pre>\n\n<p>There you go. Now if you run the app, add some images, and smash that button, they should be headed for the server. But… we can’t tell if it worked or not &mdash; at least not without checking the server or the network panel in the dev tools. Let’s fix that.</p>\n\n<h3 id=\"showing-the-status\">Showing The Status</h3>\n\n<p>Open up <code>FilePreview.vue</code>. In the template after the <code>img</code> tag but still within <code>component</code>, let’s add the following:</p>\n\n<pre><code class=\"language-javascript\">&lt;span class=\"status-indicator loading-indicator\" v-show=\"file.status == 'loading'\"&gt;In Progress&lt;/span&gt;\n&lt;span class=\"status-indicator success-indicator\" v-show=\"file.status == true\"&gt;Uploaded&lt;/span&gt;\n&lt;span class=\"status-indicator failure-indicator\" v-show=\"file.status == false\"&gt;Error&lt;/span&gt;</code></pre>\n\n<p>All the styles are already included to control how these look if you copied the styles from GitHub earlier. These all sit in the bottom right corner of the images displaying the current status. Only one of them is shown at a time based on <code>file.status</code>.</p>\n\n<p>I used <code>v-show</code> here, but it also makes a lot of sense to use <code>v-if</code>, so you can use either one. By using <code>v-show</code>, it always has the elements in the DOM but hides them. This means we can inspect the elements and cause them to show up even if they aren’t in the correct state, so we can test if they look right without trying to do it by putting the app into a certain state. Alternatively, you could go into the Vue DevTools, make sure you’re in the “Inspector” screen, click the three dots menu button in the top right and toggle “Editable props” to true, then edit the props or state in the component(s) to bring about the states needed to test each indicator.</p>\n\n<p><strong>Note</strong>: <em>Just be aware that once you edit the <code>file</code> state/prop, it is no longer the same object as the one that was passed in, so clicking the button to remove the image will not work (can’t remove a file that isn’t in the array) and clicking “Upload” won’t show any state changes for that image (because the one in the array that is being uploaded isn’t the same file object as the one being displayed by the preview).</em></p>\n\n<h3 id=\"possible-improvements-2\">Possible Improvements</h3>\n\n<p>As with other parts of this app, there are a few things we could do to make this better, but that we won’t actually be changing. First of all, the status values are pretty ambiguous. It would be a good idea to implement the values as constants or an enum (TypeScript supports enums). This would ensure that you don’t misspell a value such as “loading” or try to set the status to “error” instead of false and run into a bug. The status could also be implemented as a state machine since there is a very defined set of rules for how the state changes.</p>\n\n<p>In addition to better statuses, there should be better error handling. We inform the users that there was an issue with the upload, but they have no idea what the error is. Is it a problem with their internet? Was the file too big? Is the server down? Who knows? Users need to know what the problem is so they know what they can do about it &mdash; if anything.</p>\n\n<p>We could also keep the users better apprised of the upload. By using XHR instead of <code>fetch</code> (which I discussed in the previous drag-and-drop uploader article), we can track “progress” events to know the percentage of the upload that was completed, which is very useful for large files and slow internet connections because it can prove to the user that progress is actually being made and that it didn’t get stuck.</p>\n\n<p>The one change that can increase the reusability of the code is opening up the file uploader to additional options (such as request headers) to be able to be passed in. In addition, we could check the status of a file to prevent us from uploading a file that’s already in progress or is already uploaded. To further help with this, we could disable the “Upload” button during the upload, and it should probably also be disabled when there are no files selected.</p>\n\n<p>And last, but most certainly not least, we should add some accessibility improvements. In particular, when adding files, removing them, and uploading them (with all those status changes), we should audibly inform screen reader users that things have changed using <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\">Live Regions</a>. I’m no expert on this, and they fall a bit outside the scope of this article, so I will not be going into any kind of detail, but it’s definitely something everyone should look into.</p>\n\n<h2 id=\"job-s-done\">Job’s Done</h2>\n\n<p>Well, that’s it. The Vue Drag-and-Drop Image Uploader is done! As mentioned at the beginning, you can see <a href=\"https://vue-dd-uploader.pages.dev/\">the finished product here</a> and look at the final code in the <a href=\"https://github.com/joezimjs/vue-dd-uploader\">GitHub Repository</a>.</p>\n\n<p>I hope you spend some time trying to implement the possible improvements that I’ve laid out in the previous sections to help you deepen your understanding of this app and keep sharpening your skills by thinking things through on your own. Do you have any other improvements that could be made to this uploader? Leave some suggestions in the comments and if you implemented any of the suggestions from above, you can share your work in the comments, too.</p>\n\n<p>God bless and happy coding!</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Building on a previous article on How to Build a Drag-and-Drop File Uploader\n[https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/],\nwe’ll be adding some new features, but more...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Weekly News for Designers № 640"
        ],
        "link": [
            "https://speckyboy.com/weekly-news-for-designers-640/"
        ],
        "comments": [
            "https://speckyboy.com/weekly-news-for-designers-640/#respond"
        ],
        "dc:creator": [
            "Speckyboy"
        ],
        "pubDate": [
            "Fri, 22 Apr 2022 12:02:16 +0000"
        ],
        "category": [
            "Designer News"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139190",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>This week’s Designer News – № 640 – includes The Anatomy of a Design System, How to Fix Your Low-Contrast Text, Lexical Text Editor, Skware Pixelated Icons, Picture Perfect Images with the Modern <img> Element, A Typographic Scale Calculator, and much, much more.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/weekly-news-for-designers-640/\">Weekly News for Designers № 640</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p><a href=\"https://bjango.com/articles/svgexports/\" target=\"_blank\" rel=\"noopener\">Ideal SVG exports</a> – Some thoughts regarding how design tools should export the vector format.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-01.jpg\" alt=\"Example from Ideal SVG exports\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://tympanus.net/codrops/2022/04/13/on-scroll-text-repetition-animation/\" target=\"_blank\" rel=\"noopener\">On-Scroll Text Repetition Animation</a> – This tutorial demonstrates an on-scroll animation that shows repeated fragments of big text.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-02.png\" alt=\"Example from On-Scroll Text Repetition Animation\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://sparkbox.com/foundry/design_system_makeup_design_system_layers_parts_of_a_design_system\" target=\"_blank\" rel=\"noopener\">The Anatomy of a Design System</a> – Defining a shared understanding of how systems connect core brand elements with digital interfaces.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-03.png\" alt=\"Example from The Anatomy of a Design System\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/css-javascript-animated-backgrounds/\" target=\"_blank\" rel=\"noopener\">8 Awesome Animated Backgrounds Built with CSS &amp; JavaScript</a> – Examples of animated backgrounds that run the gamut in terms of looks and use cases.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-04.jpg\" alt=\"Example from 8 Awesome Animated Backgrounds Built with CSS &amp; JavaScript\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://reasonable.work/colors/\" target=\"_blank\" rel=\"noopener\">Reasonable Colors</a> – Check out this free, open-source color system for building accessible color palettes.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-05.jpg\" alt=\"Example from Reasonable Colors\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://benmyers.dev/blog/fix-low-contrast-text/\" target=\"_blank\" rel=\"noopener\">How to Fix Your Low-Contrast Text</a> – Learn how to solve one of the most common website accessibility issues.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-06.jpg\" alt=\"Example from How to Fix Your Low-Contrast Text\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://lexical.dev/\" target=\"_blank\" rel=\"noopener\">Lexical</a> – An extensible JavaScript web text-editor framework from Facebook with an emphasis on reliability, accessibility and performance.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-07.png\" alt=\"Example from Lexical\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/picky-design-clients/\" target=\"_blank\" rel=\"noopener\">What You Can Learn from Picky Design Clients</a> – The big-picture benefits of working with even the pickiest of clients.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-08.jpg\" alt=\"Example from What You Can Learn from Picky Design Clients\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://ui8.net/unpixel/products/notable---email-template\" target=\"_blank\" rel=\"noopener\">Notable</a> – Download this free email template for Figma, complete with light and dark themes.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-09.jpg\" alt=\"Example from Notable Email Template\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://danylpo.com/skware/\" target=\"_blank\" rel=\"noopener\">Skware</a> – Give your projects a retro feel with this collection of free pixelated icons.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-10.png\" alt=\"Example from Skware Icons\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://resourceboy.com/photoshop-brushes/cloud-brushes/\" target=\"_blank\" rel=\"noopener\">100 Cloud Photoshop Brushes</a> – Create beautiful cloud effects with this free pack of brushes.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-11.jpg\" alt=\"Example from 100 Cloud Photoshop Brushes\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/glitch-effects-photoshop-actions/\" target=\"_blank\" rel=\"noopener\">The 20 Best Glitch Effect Photoshop Action Sets</a> – Incredible glitch effects are just a click away with these Photoshop actions.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-12.jpg\" alt=\"Example from The 20 Best Glitch Effect Photoshop Action Sets\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://github.com/Wikifox/wikifox.js\" target=\"_blank\" rel=\"noopener\">WikifoxJS</a> – Grab content from Wikipedia with this powerful API.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-13.jpg\" alt=\"Example from WikifoxJS\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://stackoverflow.blog/2022/03/28/picture-perfect-images-with-the-modern-element/\" target=\"_blank\" rel=\"noopener\">Picture perfect images with the modern <code>&lt;img&gt;</code> element</a> – A look at how images impact performance, along with helpful tips for optimization.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-14.jpg\" alt=\"Example from Picture perfect images with the modern &lt;img&gt; element\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/free-wordpress-widget-plugins/\" target=\"_blank\" rel=\"noopener\">10 Super-Useful Free WordPress Widget Plugins</a> – Add flexibility and functionality to WordPress with these widget plugins.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-15.jpg\" alt=\"Example from 10 Super-Useful Free WordPress Widget Plugins \" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://themeselection.com/item/sneat-free-bootstrap-html-admin-template/\" target=\"_blank\" rel=\"noopener\">Sneat</a> – A free, open-source HTML admin template built with Bootstrap 5.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-16.jpg\" alt=\"Example from Sneat Admin Template\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://www.layoutgridcalculator.com/typographic-scale/\" target=\"_blank\" rel=\"noopener\">A Typographic Scale Calculator</a> – Use this tool to create a harmonious type scale.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-17.jpg\" alt=\"Example from A Typographic Scale Calculator\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://github.com/massCodeIO/massCode\" target=\"_blank\" rel=\"noopener\">massCode</a> – Keep your code snippets within reach with this free, open-source organization app.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-april-24-18.jpg\" alt=\"Example from massCode\" width=\"750\" height=\"500\" /></p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/weekly-news-for-designers-640/\">Weekly News for Designers № 640</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/weekly-news-for-designers-640/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "This week’s Designer News – № 640 – includes The Anatomy of a Design System, How\nto Fix Your Low-Contrast Text, Lexical Text Editor, Skware Pixelated Icons,\nPicture Perfect Images with the Modern Elem...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "How to Build Your Backend with Hasura and PostgreSQL"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss\"\n              title=\"How to Build Your Backend with Hasura and PostgreSQL\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql.jpg\"\n        alt=\"How to Build Your Backend with Hasura and PostgreSQL\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how Hasura and PostgreSQL can help you speed up app development and launch backends quickly with minimal effort.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss\">How to Build Your Backend with Hasura and PostgreSQL</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/hasura-postgresql-build-backend/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=238030",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Tue, 30 Nov 2021 02:00:38 GMT"
        ],
        "plainDescription": "How to Build Your Backend with Hasura and PostgreSQL\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638252308hasura-postgresql.jpg]\n[https://www.sitepoint.com/hasura-postgresql-build-backe...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The Best Markdown Editors for iOS"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss\"\n              title=\"The Best Markdown Editors for iOS\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown.png\"\n        alt=\"iOS Markdown apps\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown-300x158.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown-1024x538.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown-768x403.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Are you looking for a nice way to write in Markdown on your iPhone or iPad? Check out our rundown of the best Markdown editors for iOS.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss\">The Best Markdown Editors for iOS</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=200404",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Productivity Tools"
        ],
        "dc:creator": [
            "Adrian Try"
        ],
        "pubDate": [
            "Tue, 05 Apr 2022 01:00:00 GMT"
        ],
        "plainDescription": "iOS Markdown apps\n[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649190819ios-markdown.png]\n[https://www.sitepoint.com/best-ios-markdown-editors/?utm_source=rss] Are you\nlooking for a nice...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "10 Best WordPress Themes You Should Be Using in 2022"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss\"\n              title=\"10 Best WordPress Themes You Should Be Using in 2022\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes.jpg\"\n        alt=\"10 Best WordPress Themes You Should Be Using in 2022\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Need a fully-featured WordPress theme? Check out these 10 powerful WordPress themes that will save time and power your next website.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss\">10 Best WordPress Themes You Should Be Using in 2022</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/ten-best-wordpress-themes-2022/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256375",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Tue, 18 Jan 2022 02:00:28 GMT"
        ],
        "plainDescription": "10 Best WordPress Themes You Should Be Using in 2022\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642314568wordpress-themes.jpg]\n[https://www.sitepoint.com/ten-best-wordpress-themes-2022...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "10 Photoshop Actions for Creating Stunning Comic & Cartoon Effects"
        ],
        "link": [
            "https://speckyboy.com/comic-cartoon-effects-photoshop-actions/"
        ],
        "comments": [
            "https://speckyboy.com/comic-cartoon-effects-photoshop-actions/#respond"
        ],
        "dc:creator": [
            "Paul Andrew"
        ],
        "pubDate": [
            "Tue, 26 Apr 2022 07:06:45 +0000"
        ],
        "category": [
            "Photography",
            "Photoshop",
            "Cartoon",
            "Comic",
            "Photo Effects",
            "Photoshop Actions",
            "Photoshop Extensions"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=117605",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A collection of cartoon effect Photoshop actions that can help you to streamline your workflow and achieve that comic book look much faster.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/comic-cartoon-effects-photoshop-actions/\">10 Photoshop Actions for Creating Stunning Comic &#038; Cartoon Effects</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>If you want to give your photographs a cartoon or comic book effect, you could spend painstaking hours perfecting every detail. Or, you could rely on Photoshop actions to take some of the guesswork and manual labor out of the process for you.</p>\n<p>In fact, Photoshop actions can save you time on a wide variety of effects. That&#8217;s why today, we&#8217;ve put together a solid collection of comic and cartoon effect Photoshop actions that can help you to streamline your workflow and achieve the overall look you want faster. </p>\n<p>At least one of these is sure to help you in your efforts. Enjoy! </p>\n<div class=\"table-of-contents\"><input type=\"checkbox\" id=\"display-content\"><strong class=\"toc-title\"><label for=\"display-content\">More Photoshop Actions</label></strong></p>\n<div class=\"toc-content\">\n<ul>\n<li><a href=\"https://speckyboy.com/3d-photoshop-actions/\">3D Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/art-effects-photoshop-actions/\">Art Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/black-white-effects-photoshop-actions/\">Black &#038; White Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/bokeh-effects-photoshop-actions/\">Bokeh Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/cinema-movie-effects-photoshop-actions/\">Cinema Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/dispersion-effects-photoshop-actions/\">Dispersion Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/double-exposure-effects-photoshop-actions/\">Double Exposure Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/glitch-effects-photoshop-actions/\">Glitch Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/hdr-effects-photoshop-actions/\">HDR Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/light-leak-effects-photoshop-actions/\">Light Leak Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/retro-vintage-effects-photoshop-actions/\">Retro Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/sketch-effects-photoshop-actions/\">Sketch Effect Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/text-effects-photoshop-actions/\">Text Effect Photoshop Actions</a></li>\n</ul>\n<p style=\"margin-top:20px\"><strong>Free Photoshop Actions:</strong></p>\n<ul>\n<li><a href=\"https://speckyboy.com/50-free-photoshop-actions/\">50 Free Photoshop Actions</a></li>\n<li><a href=\"https://speckyboy.com/free-vintage-photoshop-actions/\">40 Free Vintage Photoshop Actions</a></li>\n</ul>\n</div>\n</div>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fmicropro-cartoon-oil-photoshop-action-V9PHHV\" rel=\"noopener noreferrer\">MicroPro Cartoon Oil Photoshop Action <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Another one you might want to consider is the MicroPro Cartoon Oil Photoshop Action. All layers are super easy to edit, and your changes are non-destructive, so you can always revert back to your original image should you wish to do so. This action creates a cartoony oil painting effect that could have a number of practical uses.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-05.jpg\" height=\"566\" width=\"849\" alt=\"MicroPro Cartoon Oil Photoshop Action\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fcartoon-melted-drips-action-59WKC6\" rel=\"noopener noreferrer\">Cartoon Melted Drips Photoshop Action <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The Cartoon Melted Drops Photoshop Action is a great one to have in your toolbox. With one click, you can create a slime effect that looks like it&#8217;s flowing off of specific parts of your photo. It comes with 25 color scripts, custom colors, and it&#8217;s super easy to use.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-06.jpg\" height=\"566\" width=\"849\" alt=\"Cartoon Melted Drips Photoshop Action\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fgta-photoshop-action-S3JL3H\" rel=\"noopener noreferrer\">GTA Photoshop Action <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The GTA Photoshop Action makes it possible to turn your photos into cartoon graphics that look hand-drawn like they could&#8217;ve been penned for Grand Theft Auto. This set includes five frame templates, five collage templates, and 15 color presets. These actions do work best with portraits, models, and inanimate objects and makes it easy to achieve these effects with minimal work.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-01.jpg\" height=\"566\" width=\"849\" alt=\"GTA Photoshop Action\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fretro-comic-book-photoshop-action-kit-PB9YXLF\" rel=\"noopener noreferrer\">Retro Comic Book Photoshop Action Kit <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>This Retro Comic Book Photoshop Action kit includes 15 vector speech bubbles, 15 vector comic elements, 12 comic sound effects, five comic book frame templates, and two comic book mockup templates, which give you plenty of options for creating the comic book effects you need.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-02.jpg\" height=\"566\" width=\"849\" alt=\"Retro Comic Book Photoshop Action Kit\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fcartoonize-photoshop-action-JBECFR8\" rel=\"noopener noreferrer\">Cartoonize Photoshop Actions <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The Cartoonize Photoshop Action is super easy to use. With it, you can create a digital artwork effect or oil paint effect with a single click, turning a standard photo into something really special. You can use it to customize photos for all sorts of ad campaigns, social media images, and more.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-03.jpg\" height=\"566\" width=\"849\" alt=\"Cartoonize Photoshop Actions\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fpainting-comics-photoshop-actions-5MRGHY\" rel=\"noopener noreferrer\">Painting &#038; Comics Photoshop Actions <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The Painting and Comics Photoshop Actions comes with 12 professional actions that can be used in a myriad of ways. Use these actions to retouch your photos with a single click. Each action includes specific calibrations to achieve the perfect desired effect. </p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-04.jpg\" height=\"566\" width=\"849\" alt=\"Painting Comics Photoshop Actions\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fcartoon-style-text-effects-Q94UXPL\" rel=\"noopener noreferrer\">Cartoon Style Text Effects Layer Styles <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The Cartoon Style Text Effects set is a great way to add bubbly, cartoony-looking effects to text in your images. This would be ideal for retro-inspired graphics. This set comes with ten styles and 10 PSD files, and all are well layered and super easy to use. Use them for titles, banners, and more.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-07.jpg\" height=\"566\" width=\"849\" alt=\"Cartoon Style Text Effects Layer Styles\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fcomic-oil-paint-photoshop-actions-RLTK9D\" rel=\"noopener noreferrer\">Comic Oil Paint Photoshop Actions <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>The Comic Oil Paint Photoshop Actions are another set of actions you should consider. Turn any photo into a piece of comic art without destroying the underlying image should you decide to revert the effect. This one-click action includes ten different comic filters.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-08.jpg\" height=\"566\" width=\"849\" alt=\"Comic Oil Paint Photoshop Actions\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fcomics-text-effects-3KDFL9T\" rel=\"noopener noreferrer\">Comics PSD Text Effects <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Here&#8217;s another set of actions you might want to consider if you need to give the text in your graphics a comic book effect. It comes with ten different styles, has smart objects, and is super easy to edit. There are well-organized layers within these actions, which make them easy to use and easy to revert should you want to make a change.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-09.jpg\" height=\"566\" width=\"849\" alt=\"Comics PSD Text Effects\"/></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=photoshop-comic-cartoon-effects&#038;u=https%3A%2F%2Felements.envato.com%2Fvector-painting-cs6-cc-photoshop-action-R9DKN26\" rel=\"noopener noreferrer\">Vector Painting Photoshop Action <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Last on our list is the Vector Painting Photoshop Action. This action includes well-organized layers and is a non-destructive action. With one click, this makes it easy to turn a photo into a vector painting. The end results are impressive and will really make a statement no matter how you decide to use it.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/photoshop-action-addon-comic-cartoon-effects-10.jpg\" height=\"566\" width=\"849\" alt=\"Vector Painting Photoshop Action\"/></p>\n<hr>\n<div class=\"tutorial\">\n<h2 id=\"photoshop-action-installation\">How to Install Photoshop Actions</h2>\n<ol>\n<li>Download and unzip the action file</li>\n<li>Launch Photoshop</li>\n<li>Go to <code>Window &gt; Actions</code></li>\n<li>Select <code>Load Actions</code> from the menu and go to the folder where you saved the unzipped action file to select it</li>\n<li>The Action will now be installed</li>\n<li>To use the newly installed action, locate it in the <code>Action</code> panel</li>\n<li>Click the triangle to the left of the action name to see the list of available actions</li>\n<li>Click the action you want to play and press the play button at the bottom of the <code>Actions</code> panel</li>\n</ol>\n</div>\n<hr>\n<p>We hope you&#8217;ve enjoyed this list of comic and cartoon effect Photoshop actions. Each of these brings something different to the table and are all well worth adding to your toolbox, especially if you anticipate creating a number of comic-inspired photographs.</p>\n<p>Now all that&#8217;s left to do is to get started creating something. Good luck!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/comic-cartoon-effects-photoshop-actions/\">10 Photoshop Actions for Creating Stunning Comic &#038; Cartoon Effects</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/comic-cartoon-effects-photoshop-actions/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "A collection of cartoon effect Photoshop actions that can help you to streamline\nyour workflow and achieve that comic book look much faster.\n\nThe post 10 Photoshop Actions for Creating Stunning Comic ...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "Inspirational Websites Roundup #37"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Wed, 04 May 2022 08:27:47 +0000"
        ],
        "category": [
            "Websites Roundups",
            "inspiration",
            "roundup",
            "website"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63487",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A special selection of the most creative websites with the finest designs from the past couple of weeks.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/\">Inspirational Websites Roundup #37</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Another month, another roundup of amazing websites! These past couple of weeks we&#8217;ve collected some fine designs for you that will update you on the current trends. What&#8217;s in? Dark designs are hip and pastel tones took over stronger colors. Some unique takes are setting a higher bar for designers. It&#8217;s good to keep in mind: who dares something new, stands out!</p>\n\n\n\n<p>Hope you get inspired and up-to-date on the latest web design trends! Enjoy!</p>\n\n\n\n<h2><a href=\"http://kargo.studiovoila.com/\">Kargo</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"http://kargo.studiovoila.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Kargo.jpg\" alt=\"\" class=\"wp-image-63490\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Kargo.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Kargo-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Kargo-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://baukunst.co/\">Baukunst: The Art of Building</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://baukunst.co/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Baukunst.jpg\" alt=\"\" class=\"wp-image-63496\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Baukunst.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Baukunst-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Baukunst-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://morningstar.ventures/\">Morningstar Ventures</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://morningstar.ventures/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Morningstar-Ventures.jpg\" alt=\"\" class=\"wp-image-63509\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Morningstar-Ventures.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Morningstar-Ventures-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Morningstar-Ventures-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.fundomo.com/\">Fundomo</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.fundomo.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Fundomo.jpg\" alt=\"\" class=\"wp-image-63504\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Fundomo.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Fundomo-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Fundomo-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://david-hckh.com/\">David</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://david-hckh.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/David.jpg\" alt=\"\" class=\"wp-image-63498\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/David.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/David-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/David-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.sector32.net/\">Sector 32</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.sector32.net/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Sector-32.jpg\" alt=\"\" class=\"wp-image-63516\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Sector-32.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Sector-32-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Sector-32-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://docent-art.com/\">Docent</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://docent-art.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Docent.jpg\" alt=\"\" class=\"wp-image-63499\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Docent.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Docent-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Docent-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.p2pstudios.com/\">P2P STUDIOS</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.p2pstudios.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/P2P-STUDIOS.jpg\" alt=\"\" class=\"wp-image-63511\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/P2P-STUDIOS.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/P2P-STUDIOS-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/P2P-STUDIOS-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.exoape.com/\">Exo Ape</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.exoape.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Exo-Ape.jpg\" alt=\"\" class=\"wp-image-63503\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Exo-Ape.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Exo-Ape-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Exo-Ape-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://rugby-man.fr/\">Rugby-Man</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://rugby-man.fr/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Rugby-Man.jpg\" alt=\"\" class=\"wp-image-63515\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Rugby-Man.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Rugby-Man-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Rugby-Man-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://eringwesley.com/\">Erin Wesley</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://eringwesley.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Erin-Wesley-.jpg\" alt=\"\" class=\"wp-image-63502\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Erin-Wesley-.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Erin-Wesley--400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Erin-Wesley--768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://ej-architecture.fr/\">Elsa Joseph</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://ej-architecture.fr/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Elsa-Joseph.jpg\" alt=\"\" class=\"wp-image-63501\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Elsa-Joseph.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Elsa-Joseph-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Elsa-Joseph-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://panicstudio.tv/\">Panic</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://panicstudio.tv/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Panic.jpg\" alt=\"\" class=\"wp-image-63512\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Panic.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Panic-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Panic-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://cydstumpel.nl/\">Cyd Stumpel</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://cydstumpel.nl/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Cyd-Stumpel.jpg\" alt=\"\" class=\"wp-image-63497\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Cyd-Stumpel.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Cyd-Stumpel-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Cyd-Stumpel-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.gradation.site/\">gradation</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.gradation.site/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/gradation.jpg\" alt=\"\" class=\"wp-image-63505\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/gradation.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/gradation-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/gradation-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.wildfoxsquad.com/\">Wild Fox Squad NFT</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.wildfoxsquad.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Wild-Fox-Squad-NFT.jpg\" alt=\"\" class=\"wp-image-63521\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Wild-Fox-Squad-NFT.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Wild-Fox-Squad-NFT-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Wild-Fox-Squad-NFT-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.dylanbrouwer.design/\">Dylan Brouwer Design</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.dylanbrouwer.design/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Dylan-Brouwer-Design.jpg\" alt=\"\" class=\"wp-image-63500\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Dylan-Brouwer-Design.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Dylan-Brouwer-Design-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Dylan-Brouwer-Design-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.hunteryeany.com/\">Hunter Yeany</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.hunteryeany.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Hunter-Yeany.jpg\" alt=\"\" class=\"wp-image-63507\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Hunter-Yeany.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Hunter-Yeany-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Hunter-Yeany-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.basisbcn.com/\">Basis Studio</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://www.basisbcn.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Basis-Studio.jpg\" alt=\"\" class=\"wp-image-63494\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Basis-Studio.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Basis-Studio-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Basis-Studio-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://moheim.com/\">MOHEIM</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://moheim.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/MOHEIM.jpg\" alt=\"\" class=\"wp-image-63508\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/MOHEIM.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/MOHEIM-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/MOHEIM-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.arcadiascience.com/\">Arcadia Science</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.arcadiascience.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcadia-Science.jpg\" alt=\"\" class=\"wp-image-63492\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcadia-Science.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcadia-Science-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcadia-Science-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.stabondar.com/\">Stas Bondar Thinking Designer</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.stabondar.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Stas-Bondar-Thinking-Designer.jpg\" alt=\"\" class=\"wp-image-63518\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Stas-Bondar-Thinking-Designer.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Stas-Bondar-Thinking-Designer-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Stas-Bondar-Thinking-Designer-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.sherruble.rocks/\">Anna Sherruble</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.sherruble.rocks/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Anna-Sherruble.jpg\" alt=\"\" class=\"wp-image-63491\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Anna-Sherruble.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Anna-Sherruble-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Anna-Sherruble-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.rocketair.com/\">RocketAir</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://www.rocketair.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/RocketAir.jpg\" alt=\"\" class=\"wp-image-63514\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/RocketAir.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/RocketAir-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/RocketAir-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://thehoneypot.co/\">Honey Pot Feminine Care</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://thehoneypot.co/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Honey-Pot-Feminine-Care.jpg\" alt=\"\" class=\"wp-image-63506\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Honey-Pot-Feminine-Care.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Honey-Pot-Feminine-Care-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Honey-Pot-Feminine-Care-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://news.vibia.com/plusminus/en/int/\">Vibia</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://news.vibia.com/plusminus/en/int/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Vibia.jpg\" alt=\"\" class=\"wp-image-63520\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Vibia.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Vibia-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Vibia-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"http://tenzr.ouiwill.com/\">Tenzr</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"http://tenzr.ouiwill.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Tenzr.jpg\" alt=\"\" class=\"wp-image-63519\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Tenzr.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Tenzr-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Tenzr-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://boulevard-en.solardigital.com.ua/\">Zhvanetsky Boulevard</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://boulevard-en.solardigital.com.ua/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Zhvanetsky-Boulevard.jpg\" alt=\"\" class=\"wp-image-63522\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Zhvanetsky-Boulevard.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Zhvanetsky-Boulevard-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Zhvanetsky-Boulevard-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.polybion.bio/\">Polybion</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://www.polybion.bio/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Polybion.jpg\" alt=\"\" class=\"wp-image-63513\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Polybion.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Polybion-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Polybion-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://arcana.earth/\">Arcana</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://arcana.earth/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcana.jpg\" alt=\"\" class=\"wp-image-63493\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcana.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcana-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Arcana-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<h2><a href=\"https://www.nan.xyz/\">NaN</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/nan.jpg\" alt=\"\" class=\"wp-image-63510\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/nan.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/nan-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/nan-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<h2><a href=\"https://madebysix.com/\">Six</a></h2>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://madebysix.com/\"><img loading=\"lazy\" width=\"800\" height=\"438\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Six.jpg\" alt=\"\" class=\"wp-image-63517\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Six.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Six-400x219.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/Six-768x420.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/\">Inspirational Websites Roundup #37</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A special selection of the most creative websites with the finest designs from\nthe past couple of weeks.\n\nThe post Inspirational Websites Roundup #37\n[https://tympanus.net/codrops/2022/05/04/inspirati...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "How to Make Your Website Pass Google’s Core Web Vitals"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss\"\n              title=\"How to Make Your Website Pass Google’s Core Web Vitals\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals.jpg\"\n        alt=\"How To Make Your Website Pass Google's Core Web Vitals\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Google's Core Web Vitals are key to ranking well. Learn the steps involved and tools available for ensuring your site is properly optimized.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss\">How to Make Your Website Pass Google’s Core Web Vitals</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/pass-googles-core-web-vitals/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=231377",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Thu, 25 Nov 2021 02:00:55 GMT"
        ],
        "plainDescription": "How To Make Your Website Pass Google's Core Web Vitals\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637799451google-core-web-vitals.jpg]\n[https://www.sitepoint.com/pass-googles-core-web-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Adding Tailwind CSS to New and Existing WordPress Themes"
        ],
        "link": [
            "https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/"
        ],
        "comments": [
            "https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/#comments"
        ],
        "dc:creator": [
            "Greg Sullivan"
        ],
        "pubDate": [
            "Wed, 20 Apr 2022 15:30:29 +0000"
        ],
        "category": [
            "Article",
            "tailwind",
            "WordPress"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364880",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>In the 15 or so years since I started making WordPress websites, nothing has had more of an impact on my productivity — and my ability to enjoy front-end development — than adding <a href=\"https://tailwindcss.com/\" rel=\"noopener\">Tailwind CSS</a> to my workflow (and it &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/\">Adding Tailwind CSS to New and Existing WordPress Themes</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>In the 15 or so years since I started making WordPress websites, nothing has had more of an impact on my productivity — and my ability to enjoy front-end development — than adding <a href=\"https://tailwindcss.com/\" rel=\"noopener\">Tailwind CSS</a> to my workflow (and it isn&#8217;t close).</p>\n\n\n\n<p>When I began working with Tailwind, there was an up-to-date, first-party repository on GitHub describing how to use Tailwind with WordPress. That repository hasn&#8217;t been updated since 2019. But that lack of updates isn&#8217;t a statement on Tailwind&#8217;s utility to WordPress developers. By allowing Tailwind to do what Tailwind does best while letting WordPress still be WordPress, it&#8217;s possible to take advantage of the best parts of both platforms and build modern websites in less time.</p>\n\n\n\n<p>The minimal setup example in this article aims to provide an update to that original setup repository, revised to work with the latest versions of both Tailwind and WordPress. This approach can be extended to work with all kinds of WordPress themes, from a forked default theme to something totally custom.</p>\n\n\n\n<span id=\"more-364880\"></span>\n\n\n\n<h3>Why WordPress developers should care about Tailwind</h3>\n\n\n\n<p>Before we talk about setup, it&#8217;s worth stepping back and discussing how Tailwind works and what that means in a WordPress context.</p>\n\n\n\n<p>Tailwind allows you to style HTML elements using pre-existing utility classes, removing the need for you to write most or all of your site’s CSS yourself. (Think classes like <code>hidden</code> for <code>display: hidden</code> or <code>uppercase</code> for <code>text-transform: uppercase</code>.) If you&#8217;ve used frameworks like Bootstrap and Foundation in the past, the biggest difference you&#8217;ll find with Tailwind CSS is its blank-slate approach to design combined with the lightness of being CSS-only, with just a CSS reset included by default. These properties allow for highly optimized sites without pushing developers towards an aesthetic built into the framework itself.</p>\n\n\n\n<p>Also unlike many other CSS frameworks, it&#8217;s infeasible to load a &#8220;standard&#8221; build of Tailwind CSS from an existing CDN. With all of its utility classes included, the generated CSS file would simply be too large. Tailwind offers a &#8220;<a href=\"https://tailwindcss.com/docs/installation/play-cdn\" rel=\"noopener\">Play CDN</a>,&#8221; but it&#8217;s not meant for production, as it significantly reduces Tailwind&#8217;s performance benefits. (It does come in handy, though, if you want to do some rapid prototyping or otherwise experiment with Tailwind without actually installing it or setting up a build process.)</p>\n\n\n\n<p>This need to use Tailwind&#8217;s build process to create a subset of the framework&#8217;s utility classes specific to your project makes it important to understand how Tailwind decides which utility classes to include, and how this process affects the use of utility classes in WordPress&#8217;s editor.</p>\n\n\n\n<p>And, finally, Tailwind&#8217;s aggressive <a href=\"https://tailwindcss.com/docs/preflight\" rel=\"noopener\">Preflight</a> (its version of a <a href=\"https://css-tricks.com/reboot-resets-reasoning/\">CSS reset</a>) means some parts of WordPress are not well-suited to the framework with its default settings.</p>\n\n\n\n<p>Let’s begin by looking at where Tailwind works well with WordPress.</p>\n\n\n\n<h3>Where Tailwind and WordPress work well together</h3>\n\n\n\n<p>In order for Tailwind to work well without significant customization, it needs to act as the primary CSS for a given page; this eliminates a number of use cases within WordPress.</p>\n\n\n\n<p>If you&#8217;re building a WordPress plugin and you need to include front-end CSS, for example, Tailwind’s Preflight would be in direct conflict with the active theme. Similarly, if you need to style the WordPress administration area — outside of the editor — the administration area&#8217;s own styles may be overridden.</p>\n\n\n\n<p class=\"is-style-explanation\">There are ways around both of these issues: You can disable Preflight and add a prefix to all of your utility classes, or you could use PostCSS to add a namespace to all of your selectors. Either way, your configuration and workflow are going to get more complicated.</p>\n\n\n\n<p>But if you&#8217;re building a theme, Tailwind is an excellent fit right out of the box. I&#8217;ve had success creating custom themes using both the classic editor and the block editor, and I&#8217;m optimistic that as full-site editing matures, there will be a number of full-site editing features that work well alongside Tailwind.</p>\n\n\n\n<p class=\"is-style-explanation\">In her blog post &#8220;<a href=\"https://extendify.com/gutenberg-full-site-editing-does-not-have-to-be-full/\" rel=\"noopener\">Gutenberg Full Site Editing does not have to be full</a>,&#8221; Tammie Lister describes full-site editing as a set of separate features that can be adopted in part or in full. It&#8217;s unlikely full-site editing&#8217;s Global Styles functionality will ever work with Tailwind, but many other features probably will.</p>\n\n\n\n<p>So: You&#8217;re building a theme, Tailwind is installed and configured, and you&#8217;re adding utility classes with a smile on your face. But will those utility classes work in the WordPress editor?</p>\n\n\n\n<p>With planning, yes! Utility classes will be available to use in the editor so long as you decide which ones you&#8217;d like to use in advance. You&#8217;re unable to open up the editor and use any and all Tailwind utility classes; baked into Tailwind&#8217;s emphasis on performance is the limitation of only including the utility classes your theme uses, so you need to let Tailwind know in advance which ones are required in the editor despite them being absent elsewhere in your code.</p>\n\n\n\n<p>There are a number of ways to do this: You can create a <a href=\"https://tailwindcss.com/docs/content-configuration#safelisting-classes\" rel=\"noopener\">safelist</a> within your Tailwind configuration file; you can include comments containing lists of classes alongside the code for custom blocks you&#8217;ll want to style in the block editor; you could even just create a file listing all of your editor-specific classes and tell Tailwind to include it as one of the source files it monitors for class names.</p>\n\n\n\n<p>The need to commit to editor classes in advance has never held me back in my work, but this remains the aspect of the relationship between Tailwind and WordPress I get asked about the most.</p>\n\n\n\n<h3>A minimal WordPress theme with a minimal Tailwind CSS integration</h3>\n\n\n\n<p>Let&#8217;s start with the most basic WordPress theme possible. There are only two required files:</p>\n\n\n\n<ul><li><code>style.css</code></li><li><code>index.php</code></li></ul>\n\n\n\n<p>We&#8217;ll generate <code>style.css</code> using Tailwind. For <code>index.php</code>, let&#8217;s start with something simple:</p>\n\n\n\n<pre rel=\"PHP\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">&lt;!doctype html>\n&lt;html lang=\"en\">\n  &lt;head>\n    &lt;?php wp_head(); ?>\n    &lt;link rel=\"stylesheet\" href=\"&lt;?php echo get_stylesheet_uri(); ?>\" type=\"text/css\" media=\"all\" />\n  &lt;/head>\n  &lt;body>\n    &lt;?php\n    if ( have_posts() ) {\n      while ( have_posts() ) {\n        the_post();\n        the_title( '&lt;h1 class=\"entry-title\">', '&lt;/h1>' );\n        ?>\n        &lt;div class=\"entry-content\">\n          &lt;?php the_content(); ?>\n        &lt;/div>\n        &lt;?php\n      }\n    }\n    ?>\n  &lt;/body>\n&lt;/html></code></pre>\n\n\n\n<p>There are a lot of things a WordPress theme should do that the above code doesn&#8217;t — things like pagination, post thumbnails, enqueuing stylesheets instead of using <code>link</code> elements, and so on — but this will be enough to display a post and test that Tailwind is working as it should.</p>\n\n\n\n<p>On the Tailwind side, we need three files:</p>\n\n\n\n<ul><li><code>package.json</code></li><li><code>tailwind.config.js</code></li><li>An input file for Tailwind</li></ul>\n\n\n\n<p class=\"is-style-explanation\">Before we go any further, you&#8217;re going to need <a href=\"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm\" rel=\"noopener\">npm</a>. If you&#8217;re uncomfortable working with it, we have a <a href=\"https://css-tricks.com/a-complete-beginners-guide-to-npm/\">beginner&#8217;s guide to npm</a> that is a good place to start!</p>\n\n\n\n<p>Since there is no <code>package.json</code> file yet, we&#8217;ll create an empty JSON file in the same folder with <code>index.php</code> by running this command in our terminal of choice:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">echo {} > ./package.json</code></pre>\n\n\n\n<p>With this file in place, we can install Tailwind:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npm install tailwindcss --save-dev</code></pre>\n\n\n\n<p>And generate our Tailwind configuration file:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npx tailwindcss init</code></pre>\n\n\n\n<p>In our <code>tailwind.config.js</code> file, all we need to do is tell Tailwind to search for utility classes in our PHP files:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"2\"><code markup=\"tt\">module.exports = {\n  content: [\"./**/*.php\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}</code></pre>\n\n\n\n<p class=\"is-style-explanation\">If our theme used <a href=\"https://getcomposer.org/\" rel=\"noopener\">Composer</a>, we&#8217;d want to ignore the <code>vendor</code> directory by adding something like <code>\"!**/vendor/**\"</code> to the <code>content</code> array. But if all of your PHP files are part of your theme, the above will work!</p>\n\n\n\n<p>We can name our input file anything we want. Let&#8217;s create a file called <code>tailwind.css</code> and add this to it:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">/*!\nTheme Name: WordPress + Tailwind\n*/\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;</code></pre>\n\n\n\n<p>The top comment is required by WordPress to recognize the theme; the three <code>@tailwind</code> directives add each of Tailwind&#8217;s layers.</p>\n\n\n\n<p>And that&#8217;s it! We can now run the following command:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npx tailwindcss -i ./tailwind.css -o ./style.css --watch</code></pre>\n\n\n\n<p>This tells the Tailwind CLI to generate our <code>style.css</code> file using <code>tailwind.css</code> as the input file. The <code>--watch</code> flag will continuously rebuild the <code>style.css</code> file as utility classes are added or removed from any PHP file in our project repository.</p>\n\n\n\n<p>That&#8217;s as simple as a Tailwind-powered WordPress theme could conceivably be, but it’s unlikely to be something you&#8217;d ever want to deploy to production. So, let&#8217;s talk about some pathways to a production-ready theme.</p>\n\n\n\n<h3>Adding TailwindCSS to an existing theme</h3>\n\n\n\n<p>There are two reasons why you might want to add Tailwind CSS to an existing theme that already has its own vanilla CSS:</p>\n\n\n\n<ul><li>To experiment with adding Tailwind components to an already styled theme</li><li>To transition a theme from vanilla CSS to Tailwind</li></ul>\n\n\n\n<p>We&#8217;ll demonstrate this by installing Tailwind inside Twenty Twenty-One, the WordPress default theme. (Why not Twenty Twenty-Two? The most recent WordPress default theme is meant to showcase full-site editing and isn&#8217;t a good fit for a Tailwind integration.)</p>\n\n\n\n<p>To start, you should download and install the theme in your development environment if it isn&#8217;t installed there. We only need to follow a handful of steps after that:</p>\n\n\n\n<ul><li>Navigate to the theme folder in your terminal.</li><li>Because Twenty Twenty-One already has its own <code>package.json</code> file, install Tailwind without creating a new one:</li></ul>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">npm install tailwindcss --save-dev</code></pre>\n\n\n\n<ul><li>Add your <code>tailwind.config.json</code> file:</li></ul>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">npx tailwindcss init</code></pre>\n\n\n\n<ul><li>Update your <code>tailwind.config.json</code> file to look the same as the one in the previous section.</li><li>Copy Twenty Twenty-One&#8217;s existing <code>style.css</code> file to <code>tailwind.css</code>.</li></ul>\n\n\n\n<p>Now we need to add our three <code>@tailwind</code> directives to the <code>tailwind.css</code> file. I suggest structuring your tailwind.css file as follows:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"1,5\"><code markup=\"tt\">/* The WordPress theme file header goes here. */\n\n@tailwind base;\n\n/* All of the existing CSS goes here. */\n\n@tailwind components;\n@tailwind utilities;</code></pre>\n\n\n\n<p>Putting the <code>base</code> layer immediately after the theme header ensures that WordPress continues to detect your theme while also ensuring the Tailwind CSS reset comes as early in the file as possible.</p>\n\n\n\n<p>All of the existing CSS follows the <code>base</code> layer, ensuring that these styles take precedence over the reset.</p>\n\n\n\n<p>And finally, the <code>components</code> and <code>utilities</code> layers follow so they can take precedence over any CSS declarations with the same specificity.</p>\n\n\n\n<p>And now, as with our minimal theme, we&#8217;ll run the following command:</p>\n\n\n\n<pre rel=\"Terminal\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">npx tailwindcss -i ./tailwind.css -o ./style.css --watch</code></pre>\n\n\n\n<p>With your new <code>style.css</code> file now being generated each time you change a PHP file, you should check your revised theme for minor rendering differences from the original. These are caused by Tailwind&#8217;s CSS reset, which resets things a bit further than some themes might expect. In the case of Twenty Twenty-One, the only fix I made was to add <code>text-decoration-line: underline</code> to the <code>a</code> element.</p>\n\n\n\n<p>With that rendering issue resolved, let&#8217;s add the <a href=\"https://tailwindui.com/preview#component-1a63aa510db7761c581486c7259487e8\" rel=\"noopener\">Header Banner Component</a> from <a href=\"https://tailwindui.com/\" rel=\"noopener\">Tailwind UI</a>, Tailwind&#8217;s first-party component library. Copy the code from the Tailwind UI site and paste it immediately following the &#8220;Skip to content&#8221; link in <code>header.php</code>:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2048\" height=\"1536\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?resize=2048%2C1536&#038;ssl=1\" alt=\"Showing a Tailwind CSS component on the front end of a WordPress theme.\" class=\"wp-image-364881\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?w=2048&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?resize=300%2C225&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?resize=1024%2C768&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?resize=768%2C576&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091945897_tailwind-2021-01.png?resize=1536%2C1152&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Pretty good! Because we&#8217;re now going to want to use utility classes to override some of the existing higher-specificity classes built into the theme, we&#8217;re going to add a single line to the <code>tailwind.config.js</code> file:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"2\"><code markup=\"tt\">module.exports = {\n  important: true,\n  content: [\"./**/*.php\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}</code></pre>\n\n\n\n<p>This marks all Tailwind CSS utilities as <code>!important</code> so they can override existing classes with a higher specificity. (I&#8217;ve never set <code>important</code> to <code>true</code> in production, but I almost certainly would if I were in the process of converting a site from vanilla CSS to Tailwind.)</p>\n\n\n\n<p>With a quick <code>no-underline</code> class added to the &#8220;Learn more&#8221; link and <code>bg-transparent</code> and <code>border-0</code> added to the dismiss button, we&#8217;re all set:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2048\" height=\"1536\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?resize=2048%2C1536&#038;ssl=1\" alt=\"Showing a Tailwind CSS component in the front end of a WordPress theme, but with more refined styles for the buttons and links.\" class=\"wp-image-364882\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?w=2048&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?resize=300%2C225&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?resize=1024%2C768&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?resize=768%2C576&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_349576FCA73DF70C623F39721FAA4B755C1910247D3A7EBAE2AD130C30E937A5_1646091961143_tailwind-2021-02.png?resize=1536%2C1152&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>It looks a bit jarring to see Tailwind UI&#8217;s components merged into a WordPress default theme, but it&#8217;s a great demonstration of Tailwind components and their inherent portability.</p>\n\n\n\n<h3>Starting from scratch</h3>\n\n\n\n<p>If you&#8217;re creating a new theme with Tailwind, your process will look a lot like the minimal example above. Instead of running the Tailwind CLI directly from the command line, you&#8217;ll probably want to create separate npm scripts for development and production builds, and to watch for changes. You may also want to create a separate build specifically for the WordPress editor.</p>\n\n\n\n<p>If you&#8217;re looking for a starting point beyond the minimal example above — but not so far beyond that it comes with opinionated styles of its own — I&#8217;ve created a <a href=\"https://underscoretw.com\" rel=\"noopener\">Tailwind-optimized WordPress theme generator</a> inspired by <a href=\"https://github.com/Automattic/_s\" rel=\"noopener\">Underscores</a> (_s), once the canonical WordPress starter theme. Called _tw, this is the quick-start I wish I had when I first combined Tailwind with WordPress. It remains the first step in all of my client projects.</p>\n\n\n\n<p>If you&#8217;re willing to go further from the structure of a typical WordPress theme and add Laravel Blade templates to your toolkit, <a href=\"https://roots.io/sage/\" rel=\"noopener\">Sage</a> is a great choice, and they have a <a href=\"https://roots.io/guides/how-to-setup-tailwind-css-in-sage/\" rel=\"noopener\">setup guide</a> specific to Tailwind to get you started.</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>However you choose to begin, I encourage you to take some time to acclimate yourself to Tailwind CSS and to styling HTML documents using utility classes: It may feel unusual at first, but you&#8217;ll soon find yourself taking on more client work than before because you&#8217;re building sites faster than you used to — and hopefully, like me, having more fun doing it.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/\">Adding Tailwind CSS to New and Existing WordPress Themes</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/feed/"
        ],
        "slash:comments": [
            "10"
        ],
        "post-id": [
            {
                "_": "364880",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "In the 15 or so years since I started making WordPress websites, nothing has had\nmore of an impact on my productivity — and my ability to enjoy front-end\ndevelopment — than adding Tailwind CSS [https:...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Webflow Review: Is It a Serious Option for Tech-Savvy Users?"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/review-webflow-is-it-a-serious-option-for-tech-savvy-users/?utm_source=rss\"\n              title=\"Webflow Review: Is It a Serious Option for Tech-Savvy Users?\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Find out if Webflow is a viable option for tech-savvy users who want to build custom websites. This review covers the pros and cons of using this online builder service.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/review-webflow-is-it-a-serious-option-for-tech-savvy-users/?utm_source=rss\">Webflow Review: Is It a Serious Option for Tech-Savvy Users?</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/review-webflow-is-it-a-serious-option-for-tech-savvy-users/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=260058",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "HTML & CSS",
            "Low Code",
            "Review",
            "Startups",
            "Web",
            "Web Hosting & Domains"
        ],
        "dc:creator": [
            "Alex Walker"
        ],
        "pubDate": [
            "Mon, 02 May 2022 00:10:41 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/05/1651545056webflow.jpg]\n[https://www.sitepoint.com/review-webflow-is-it-a-serious-option-for-tech-savvy-users/?utm_source=rss]\nFind out if Webf...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Build a Link Previewer with Puppeteer and Serverless Functions"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss\"\n              title=\"Build a Link Previewer with Puppeteer and Serverless Functions\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions.jpg\"\n        alt=\"Build a Link Previewer with Puppeteer and Serverless Functions\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to deploy serverless functions alongside a front-end app and create an API that generates images and grabs metadata from links.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss\">Build a Link Previewer with Puppeteer and Serverless Functions</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/puppeteer-serverless-functions-link-previewer/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=237998",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Miracle Onyenma"
        ],
        "pubDate": [
            "Mon, 29 Nov 2021 02:00:02 GMT"
        ],
        "plainDescription": "Build a Link Previewer with Puppeteer and Serverless Functions\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1638152303serverless-functions.jpg]\n[https://www.sitepoint.com/puppeteer-server...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Create Reusable Components with the Vue 3 Composition API"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss\"\n              title=\"How to Create Reusable Components with the Vue 3 Composition API\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api.jpg\"\n        alt=\"How to Create Reusable Components with the Vue 3 Composition API\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to make Vue code more reusable, compact, and clean, by harnessing the Composition API, along with the Reactivity API and slots.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss\">How to Create Reusable Components with the Vue 3 Composition API</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vue-composition-api-reusable-components/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=209359",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Wed, 17 Nov 2021 02:00:03 GMT"
        ],
        "plainDescription": "How to Create Reusable Components with the Vue 3 Composition API\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636951555vue-composition-api.jpg]\n[https://www.sitepoint.com/vue-composition...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "HELP!!!! Python Error"
        ],
        "dc:creator": [
            "Ahmad Khan"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:55:40 +0000"
        ],
        "link": [
            "https://dev.to/creatorarno/python-error-no-module-named-pyqt5qtwebenginewidgets-13jo"
        ],
        "guid": [
            "https://dev.to/creatorarno/python-error-no-module-named-pyqt5qtwebenginewidgets-13jo"
        ],
        "description": [
            "<p><strong>No module named 'PyQt5.QtWebEngineWidgets'</strong></p>\n\n<p>I tried reinstalling PyQt5 And PyQtWebEngine<br>\nbut still its not working</p>\n\n<p><em>This is my code</em><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import sys\nfrom PyQt5.QtCore import *\nfrom PyQt5.QtWidgets import *\nfrom PyQt5.QtWebEngineWidgets import *\n\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super(MainWindow, self).__init__()\n        self.browser = QWebEngineView()\n        self.browser.setUrl(QUrl('http://google.com'))\n        self.setCentralWidget(self.browser)\n        self.showMaximized()\n\n\napp = QApplication(sys.argv)\nQApplication.setApplicationName('Pheonix Browser')\nwindow = MainWindow()\napp.exec()\n</code></pre>\n\n</div>\n\n\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c2UtrRIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0p8gn8ytkj4ga5bmr8c.PNG\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--c2UtrRIq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0p8gn8ytkj4ga5bmr8c.PNG\" alt=\"Image description\" width=\"880\" height=\"306\"></a></p>\n\n"
        ],
        "category": [
            "python",
            "beginners"
        ],
        "plainDescription": "No module named 'PyQt5.QtWebEngineWidgets'\n\nI tried reinstalling PyQt5 And PyQtWebEngine\nbut still its not working\n\nThis is my code\n\n\nimport sys\nfrom PyQt5.QtCore import *\nfrom PyQt5.QtWidgets import ...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "A Step-by-Step Guide to Generating & Validating SaaS Ideas"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/generating-saas-ideas/?utm_source=rss\"\n              title=\"A Step-by-Step Guide to Generating & Validating SaaS Ideas\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb-1536x806.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb-2048x1075.jpg 2048w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Picking the right SaaS idea is critical to your success as a startup business. This guide will show you how to generate ideas and know which one to pursue.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/generating-saas-ideas/?utm_source=rss\">A Step-by-Step Guide to Generating & Validating SaaS Ideas</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/generating-saas-ideas/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259846",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Entrepreneur",
            "Entrepreneurship",
            "Startups"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Wed, 13 Apr 2022 09:00:00 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649907256saas-thmb.jpg]\n[https://www.sitepoint.com/generating-saas-ideas/?utm_source=rss] Picking the\nright SaaS idea is critical to your suc...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "💬NodeJs WebSocketS Chat App"
        ],
        "dc:creator": [
            "alexpaper"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:43:32 +0000"
        ],
        "link": [
            "https://dev.to/alexpaper/nodejs-websockets-chat-app-4d51"
        ],
        "guid": [
            "https://dev.to/alexpaper/nodejs-websockets-chat-app-4d51"
        ],
        "description": [
            "<p>If you want create a super simple chat application, of course you must use socket.io, which is the absolute number one, <br>\nyou can also use WebSocket API on frontend and in the backend.</p>\n<h3>\n  \n  \n  WebSocket Client\n</h3>\n\n<p>The WebSocket object provides the API for creating and managing a WebSocket connection to a server, <br>\nas well as for sending and receiving data on the connection.</p>\n\n<p>In the client side first of all you need to create a WebSocket connection<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const socket = new WebSocket('ws://localhost:8080');\n\n</code></pre>\n\n</div>\n\n\n\n<h3>\n  \n  \n  Events\n</h3>\n\n<p>You need to create three event listeners using addEventListener(),</p>\n\n<ol>\n<li><p>the first one for the 'open' event,<br>\nfired when a connection with a WebSocket is opened,</p></li>\n<li><p>the second one for the 'close' event<br>\nfired when a connection with a WebSocket is closed,</p></li>\n<li><p>and the last one for the 'message' event,<br>\nfired when data is received through a WebSocket.<br>\n</p></li>\n</ol>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>socket.addEventListener('open', function (event) {\n    socket.send('Hello Server!');\n});\n\nsocket.addEventListener('message', function (event) {\n    console.log('Message from server ', event.data);\n});\n\n</code></pre>\n\n</div>\n\n\n\n<h3>\n  \n  \n  WebSocket on the Server Side\n</h3>\n\n<p>In the backend you can also use WebSocket tecnology, in NodeJs you can install <br>\n<a href=\"https://www.npmjs.com/package/ws\">ws library</a><br>\nit is very easy to implement, to install it perform this command</p>\n\n<blockquote>\n<p>npm i ws</p>\n</blockquote>\n\n<p>import and crete the WebSocket Server 'wss'<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>import WebSocket, {WebSocketServer} from 'ws';\n\nconst wss = new WebSocketServer({port:8080});\n\n</code></pre>\n\n</div>\n\n\n\n<p>listen for connection and send a string or an object welcome message<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>wss.on('connection', (ws, req)=&gt;{\n\n ws.send(JSON.stringify({time: datetime, message:`💬 Welcome from the Server 🎉.`}));\n});\n\n</code></pre>\n\n</div>\n\n\n\n<p>In this video guide you can see a super simple implementation, have a nice day!</p>\n\n<p><a href=\"https://youtu.be/qJ2SfFcYUrM\">Video Guide</a><br>\n🆗 👋</p>\n\n"
        ],
        "plainDescription": "If you want create a super simple chat application, of course you must use\nsocket.io, which is the absolute number one,\nyou can also use WebSocket API on frontend and in the backend.\n\n\nWEBSOCKET CLIEN...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "Marketing Automation: The Best AI Tools for Boosting Growth"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss\"\n              title=\"Marketing Automation: The Best AI Tools for Boosting Growth\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation.jpg\"\n        alt=\"Marketing Automation: the Best AI Tools for Boosting Growth\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn about nine AI-powered marketing automation tools for optimizing content, increasing sales, analyzing data, and promoting your business.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss\">Marketing Automation: The Best AI Tools for Boosting Growth</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/marketing-automation-ai-tools-boost-growth/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206951",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Content Marketing",
            "Email Marketing",
            "Entrepreneur",
            "Low Code",
            "Marketing",
            "SEO & SEM"
        ],
        "dc:creator": [
            "Christian Coulson"
        ],
        "pubDate": [
            "Wed, 06 Oct 2021 02:00:07 GMT"
        ],
        "plainDescription": "Marketing Automation: the Best AI Tools for Boosting Growth\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633400963ai-marketing-automation.jpg]\n[https://www.sitepoint.com/marketing-automa...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Build a Code Snippet Web App with Next.js and FaunaDB"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss\"\n              title=\"Build a Code Snippet Web App with Next.js and FaunaDB\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb.jpg\"\n        alt=\"Build a Code Snippet Web App with Next.js and FaunaDB\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to build a CRUD app with Next.js and FaunaDB, and how to perform CRUD operations based on user authentication.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss\">Build a Code Snippet Web App with Next.js and FaunaDB</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/nextjs-faunadb-build-code-snippet-app/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=213199",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Victory Tuduo"
        ],
        "pubDate": [
            "Mon, 22 Nov 2021 02:00:12 GMT"
        ],
        "plainDescription": "Build a Code Snippet Web App with Next.js and FaunaDB\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637110868next-faunadb.jpg]\n[https://www.sitepoint.com/nextjs-faunadb-build-code-snippet...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Yarn vs npm: Everything You Need to Know"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss\"\n              title=\"Yarn vs npm: Everything You Need to Know\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn.jpg\"\n        alt=\"Yarn vs npm: Everything You Need to Know\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Modern web development is virtually impossible without a package manager. Our Yarn vs npm comparison will help you decide which to use.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss\">Yarn vs npm: Everything You Need to Know</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=141636",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "npm",
            "Tools & Libraries"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Tue, 21 Sep 2021 02:00:24 GMT"
        ],
        "plainDescription": "Yarn vs npm: Everything You Need to Know\n[https://uploads.sitepoint.com/wp-content/uploads/2016/10/1631950170package-management-npm-vs-yarn.jpg]\n[https://www.sitepoint.com/yarn-vs-npm/?utm_source=rss]...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Use the for Loop in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/javascript-for-loop/?utm_source=rss\"\n              title=\"How to Use the for Loop in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop.png\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop-300x158.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop-1024x538.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop-768x403.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn about for...in loops in JavaScript: their syntax, how they work, when to use them, when not to use them, and what you can use instead.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/javascript-for-loop/?utm_source=rss\">How to Use the for Loop in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/javascript-for-loop/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207439",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Vanilla JavaScript"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Tue, 22 Feb 2022 14:00:53 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1645567223loop.png]\n[https://www.sitepoint.com/javascript-for-loop/?utm_source=rss] Learn about\nfor...in loops in JavaScript: their syntax, ho...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "React Tutorial: Build a Calculator App from Scratch"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss\"\n              title=\"React Tutorial: Build a Calculator App from Scratch\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app.jpg\"\n        alt=\"React Tutorial: Build a Calculator App from Scratch\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn by doing! Build calculator app with React, from creating the layout and components to updating states and formatting the output.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss\">React Tutorial: Build a Calculator App from Scratch</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-tutorial-build-calculator-app/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206749",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Madars Biss"
        ],
        "pubDate": [
            "Mon, 27 Sep 2021 02:00:09 GMT"
        ],
        "plainDescription": "React Tutorial: Build a Calculator App from Scratch\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632727310react-calculator-app.jpg]\n[https://www.sitepoint.com/react-tutorial-build-calcul...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #492"
        ],
        "link": [
            "https://css-weekly.com/issue-492/"
        ],
        "pubDate": [
            "Wed, 16 Feb 2022 15:59:26 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-492/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how cascade layers work, how you can become a better writer as a software engineer, how to connect to a database using CSS, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Hello, CSS Cascade Layers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://ishadeed.com/article/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/hello-css-cascade-layers.jpg\" alt=\"Hello, CSS Cascade Layers\" /></a>\n\t\t\t\t\t\t<p>Ahmad Shadeed explores how cascade layers work and how they can help you write CSS with more confidence.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.pragmaticengineer.com/becoming-a-better-writer-in-tech/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Becoming a Better Writer as a Software Engineer</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://blog.pragmaticengineer.com/becoming-a-better-writer-in-tech/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/becoming-a-better-writer-in-tech.png\" alt=\"Becoming a Better Writer as a Software Engineer\" /></a>\n\t\t\t\t\t\t<p>Gergely Orosz offers some tactics for clearer, more frequent, and more confident writing.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.pragmaticengineer.com/becoming-a-better-writer-in-tech/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/tailwind-css-a-new-way-to-think-css\">Tailwind CSS - A new way to > THINK < CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/tailwind-css-a-new-way-to-think-css\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/tailwindcss.png\" alt=\"Tailwind CSS - A new way to > THINK < CSS\" /></a>\n\t\t\t\t\t\t<p>An in-depth introduction to Tailwind CSS, a framework that will help you rapidly build modern websites without ever leaving your HTML.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/tailwind-css-a-new-way-to-think-css\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.leemeichin.com/posts/yes-i-can-connect-to-a-db-in-css.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Connect to DB Using CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A fascinating experiment that explores how you can connect to a database using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.leemeichin.com/posts/yes-i-can-connect-to-a-db-in-css.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-irl.info/aspect-ratio-is-great/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Aspect Ratio is Great</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker gives a fantastic introduction to the <code>aspect-ratio</code> property.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-irl.info/aspect-ratio-is-great/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-an-adaptive-favicon/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building an Adaptive Favicon</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adam Argyle shares a foundational overview of how to build an adaptive favicon.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-an-adaptive-favicon/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/from-font-value-text-decoration-thickness/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">The CSS from-font Value Explained in 4 Demos</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Silvestar Bistrović explains how <code>from-font</code> value works.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/from-font-value-text-decoration-thickness/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-slanted-containers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How to Make CSS Slanted Containers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Dave Seidman shows how to create slanted containers using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-slanted-containers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-16022022\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-16022022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/10/debugging-css1.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>A fantastic book by Ahmad Shadeed full of tips and techniques on how to debug CSS. It will help you significantly improve your CSS debugging skills.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-16022022\">Find out more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/zachleat/details-utils?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">details-utils</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A suite of utilities that adds more features to the <code>&lt;details&gt;</code> element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/zachleat/details-utils?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.a11yproject.com/checklist/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A11Y Checklist</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An accessibility checklist that uses The Web Content Accessibility Guidelines (WCAG) as a reference point.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.a11yproject.com/checklist/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/ykadosh/pen/yLzmKYp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">DeLorean (CSS Art)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/ykadosh/pen/yLzmKYp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/delorean-css-art.jpg\" alt=\"DeLorean (CSS Art)\" /></a>\n\t\t\t\t\t\t<p>Yoav Kadosh created an impressive, pure CSS illustration of Back To The Future&#8217;s DeLorean.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/ykadosh/pen/yLzmKYp?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how cascade layers work, how you can become a better writer as a software\nengineer, how to connect to a database using CSS, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Add a Contact Form to a React App with Netlify Forms"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss\"\n              title=\"Add a Contact Form to a React App with Netlify Forms\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify.jpg\"\n        alt=\"Add a Contact Form to a React App with Netlify Forms\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            With Netlify Forms, you can set up a contact form in React without writing your own server-side code to handle form submissions.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss\">Add a Contact Form to a React App with Netlify Forms</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-app-contact-form-netlify-forms/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207591",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Taminoturoko Briggs"
        ],
        "pubDate": [
            "Thu, 28 Oct 2021 10:00:22 GMT"
        ],
        "plainDescription": "Add a Contact Form to a React App with Netlify Forms\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635315601react-form-netlify.jpg]\n[https://www.sitepoint.com/react-app-contact-form-netli...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Cool Hover Effects That Use Background Properties"
        ],
        "link": [
            "https://css-tricks.com/cool-hover-effects-using-background-properties/"
        ],
        "comments": [
            "https://css-tricks.com/cool-hover-effects-using-background-properties/#comments"
        ],
        "dc:creator": [
            "Temani Afif"
        ],
        "pubDate": [
            "Wed, 27 Apr 2022 14:20:07 +0000"
        ],
        "category": [
            "Article",
            "background",
            "background-position",
            "hover",
            "links"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365383",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A while ago, Geoff wrote an <a href=\"https://css-tricks.com/adam-argyles-sick-mouse-out-css-hover-effect/\">article about a cool hover effect</a>. The effect relies on a combination of CSS pseudo-elements, transforms, and transitions. A lot of comments have shown that the same effect can be done using background &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/cool-hover-effects-using-background-properties/\">Cool Hover Effects That Use Background Properties</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>A while ago, Geoff wrote an <a href=\"https://css-tricks.com/adam-argyles-sick-mouse-out-css-hover-effect/\">article about a cool hover effect</a>. The effect relies on a combination of CSS pseudo-elements, transforms, and transitions. A lot of comments have shown that the same effect can be done using background properties. Geoff mentioned that was his initial thought and that’s what I was thinking as well. I am not saying the pseudo-element he landed on is bad, but knowing different methods to achieve the same effect can only be a good thing.</p>\n\n\n\n<p>In this post, we will re-work that hover effect, but also expand it into other types of hover effects that only use CSS <code>background</code> properties.</p>\n\n\n\n<span id=\"more-365383\"></span>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_xxXNpBW\" src=\"//codepen.io/anon/embed/xxXNpBW?height=450&amp;theme-id=1&amp;slug-hash=xxXNpBW&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed xxXNpBW\" title=\"CodePen Embed xxXNpBW\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>You can see the <code>background</code> properties at work in that demo, as well as how we can use custom properties and the <code>calc()</code> function to do even more. We are going to learn how to combine all of these so we are left with nicely optimized code!</p>\n\n\n\n<h3>Hover effect #1</h3>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_NWXZWEa\" src=\"//codepen.io/anon/embed/NWXZWEa?height=350&amp;theme-id=1&amp;slug-hash=NWXZWEa&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed NWXZWEa\" title=\"CodePen Embed NWXZWEa\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Let’s start with the first effect which is the reproduction of the one detailed by Geoff in his article. The code used to achieve that effect is the following:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-1 {\n  background: linear-gradient(#1095c1 0 0) var(--p, 0) / var(--p, 0) no-repeat;\n  transition: .4s, background-position 0s;\n}\n.hover-1:hover {\n  --p: 100%;\n  color: #fff;\n}</code></pre>\n\n\n\n<p>If we omit the color transition (which is optional), we only need three CSS declarations to achieve the effect. You are probably surprised how small the code is, but you will see how we got there.</p>\n\n\n\n<p>First, let’s start with a simple <code>background-size</code> transition:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_GROYeYQ\" src=\"//codepen.io/anon/embed/GROYeYQ?height=350&amp;theme-id=1&amp;slug-hash=GROYeYQ&amp;default-tab=css,result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed GROYeYQ\" title=\"CodePen Embed GROYeYQ\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>We are animating the size of a linear gradient from <code>0 100%</code> to <code>100% 100%</code>. That means the width is going from <code>0</code> to <code>100%</code> while the background itself remains at full height. Nothing complex so far.</p>\n\n\n\n<p>Let’s start our optimizations. We first transform our gradient to use the color only once:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">background-image: linear-gradient(#1095c1 0 0);</code></pre>\n\n\n\n<p>The syntax might look a bit strange, but we are telling the browser that one color is applied to two color stops, and that’s enough to define a gradient in CSS. Both color stops are <code>0</code>, so the browser automatically makes the last one <code>100%</code> and fills our gradient with the same color. Shortcuts, FTW!</p>\n\n\n\n<p>With <code>background-size</code>, we can omit the height because gradients are full height by default. We can do a transition from <code>background-size: 0</code> to <code>background-size: 100%</code>.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-1 {\n  background-image: linear-gradient(#1095c1 0 0);\n  background-size: 0;\n  background-repeat: no-repeat;\n  transition: .4s;\n}\n.hover-1:hover {\n  background-size: 100%;\n}</code></pre>\n\n\n\n<p>Let’s introduce a custom property to avoid the repetition of <code>background-size</code>:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"3,8\"><code markup=\"tt\">.hover-1 {\n  background-image: linear-gradient(#1095c1 0 0);\n  background-size: var(--p, 0%);\n  background-repeat: no-repeat;\n  transition: .4s;\n}\n.hover-1:hover {\n  --p: 100%;\n}</code></pre>\n\n\n\n<p>We are not defining <code>--p</code> initially, so the fallback value (<code>0%</code> in our case) will be used. On hover, we define a value that replaces the fallback one ( <code>100%</code>).</p>\n\n\n\n<p>Now, let’s combine all the background properties using the shorthand version to get:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"2\"><code markup=\"tt\">.hover-1 {\n  background: linear-gradient(#1095c1 0 0) left / var(--p, 0%) no-repeat;\n  transition: .4s;\n}\n.hover-1:hover {\n  --p: 100%;\n}</code></pre>\n\n\n\n<p>We are getting closer! Note that I have introduced a <code>left</code> value (for the <code>background-position</code>) which is mandatory when defining the size in the <code>background</code> shorthand. Plus, we need it anyway to achieve our hover effect.</p>\n\n\n\n<p>We need to also update the position on hover. We can do that in two steps:</p>\n\n\n\n<ol><li>Increase the size from the right on mouse hover.</li><li>Decrease the size from the left on mouse out.</li></ol>\n\n\n\n<p>To do this, we need to update the <code>background-position</code> on hover as well:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_wvPYZKN\" src=\"//codepen.io/anon/embed/wvPYZKN?height=450&amp;theme-id=1&amp;slug-hash=wvPYZKN&amp;default-tab=css,result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed wvPYZKN\" title=\"CodePen Embed wvPYZKN\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>We added two things to our code:</p>\n\n\n\n<ul><li>A <code>background-position</code> value of <code>right</code> on hover</li><li>A <code>transition-duration</code> of <code>0s</code> on the <code>background-position</code></li></ul>\n\n\n\n<p>This means that, on hover, we instantly change the <code>background-position</code> from <code>left</code> (see, we needed that value!) to <code>right</code> so the background’s size will increase from the right side. Then, when the mouse cursor leaves the link, the transition plays in reverse, from <code>right</code> to <code>left</code>, making it appear that we are decreasing the background’s size from the left side. Our hover effect is done!</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>But you said we only needed three declarations and there are four.</p></blockquote>\n\n\n\n<p>That’s true, nice catch. The <code>left</code> and <code>right</code> values can be changed to <code>0 0</code> and <code>100% 0</code>, respectively; and since our gradient is already full height by default, we can get by using <code>0</code> and <code>100%</code>.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-1 {\n  background: linear-gradient(#1095c1 0 0) 0 / var(--p, 0%) no-repeat;\n  transition: .4s, background-position 0s;\n}\n.hover-1:hover {\n  --p: 100%;\n  background-position: 100%;\n}</code></pre>\n\n\n\n<p>See how <code>background-position</code> and <code>--p</code> are using the same values? Now we can reduce the code down to three declarations:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"2\"><code markup=\"tt\">.hover-1 {\n  background: linear-gradient(#1095c1 0 0) var(--p, 0%) / var(--p,0%) no-repeat;\n  transition: .4s, background-position 0s;\n}\n.hover-1:hover {\n  --p: 100%;\n}</code></pre>\n\n\n\n<p>The custom property <code>--p</code> is defining both the background position and size. On hover, It will update both of them as well. This is a perfect use case showing how custom properties can help us reduce redundant code and avoid writing properties more than once. We define our setting using custom properties and we only update the latter on hover.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>But the effect Geoff described is doing the opposite, starting from left and ending at right. How do we do that when it seems we cannot rely on the same variable?</p></blockquote>\n\n\n\n<p>We can still use one variable and update our code slightly to achieve the opposite effect. What we want is to go from <code>100%</code> to <code>0%</code> instead of <code>0%</code> to <code>100%</code>. We have a difference of <code>100%</code> that we can express using <code>calc()</code>, like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"2\"><code markup=\"tt\">.hover-1 {\n  background: linear-gradient(#1095c1 0 0) calc(100% - var(--p,0%)) / var(--p,0%) no-repeat;\n  transition: .4s, background-position 0s;\n}\n.hover-1:hover {\n  --p: 100%;\n}</code></pre>\n\n\n\n<p><code>--p</code> will change from <code>0%</code> to <code>100%</code>, but the background’s position will change from <code>100%</code> to <code>0%</code>, thanks to <code>calc()</code>.</p>\n\n\n\n<p>We still have three declarations and one custom property, but a different effect.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_podxBrj\" src=\"//codepen.io/anon/embed/podxBrj?height=450&amp;theme-id=1&amp;slug-hash=podxBrj&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed podxBrj\" title=\"CodePen Embed podxBrj\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Before we move to the next hover effect, I want to highlight something important that you have probably noticed. When dealing with custom properties, I am using <code>0%</code> (with a unit) instead of a unit-less <code>0</code>. The unit-less zero may work when the custom property is alone, but will fail inside <code>calc()</code> where we need to explicitly define the unit. I may need another article to explain this quirk but always remember to add the unit when dealing with custom properties. I have two answers on StackOverflow (<a href=\"https://stackoverflow.com/a/55406181/8620333\" rel=\"noopener\">here</a> and <a href=\"https://stackoverflow.com/a/62523544/8620333\" rel=\"noopener\">here</a>) that go into more detail.</p>\n\n\n\n<h3>Hover effect #2</h3>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_eYywmzo\" src=\"//codepen.io/anon/embed/eYywmzo?height=350&amp;theme-id=1&amp;slug-hash=eYywmzo&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed eYywmzo\" title=\"CodePen Embed eYywmzo\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>We need a more complex transition for this effect. Let’s take a look at a step-by-step illustration to understand what is happening.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"606\" height=\"394\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646129513433_image.png?resize=606%2C394&#038;ssl=1\" alt=\"Diagram showing the hover effect in three pieces.\" class=\"wp-image-365386\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646129513433_image.png?w=606&amp;ssl=1 606w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646129513433_image.png?resize=300%2C195&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Initially, a fixed-height, full-width gradient is outside of view. Then we move the gradient to the right to cover the bottom side. Finally, we increase the size of the gradient from the fixed height to <code>100%</code> to cover the whole element.</figcaption></figure>\n\n\n\n<p>We first have a <code>background-position</code> transition followed by a <code>background-size</code> one. Let’s translate this into code:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-2 {\n  background-image: linear-gradient(#1095c1 0 0);\n  background-size: 100% .08em; /* .08em is our fixed height; modify as needed. */\n  background-position: /* ??? */;\n  background-repeat: no-repeat;\n  transition: background-size .3s, background-position .3s .3s;\n}\n.hover-2:hover {\n  transition: background-size .3s .3s, background-position .3s;\n  background-size: 100% 100%;\n  background-position: /* ??? */;\n}</code></pre>\n\n\n\n<p>Note the use of two transition values. On hover, we need to first change the position and later the size, which is why we are adding a delay to the size. On mouse out, we do the opposite.</p>\n\n\n\n<p>The question now is: what values do we use for <code>background-position</code>? We left those blank above. The <code>background-size</code> values are trivial, but the ones for <code>background-position</code> are not. And if we keep the actual configuration we’re unable to move our gradient.</p>\n\n\n\n<p>Our gradient has a width equal to <code>100%</code>, so we cannot use percentage values on <code>background-position</code> to move it.</p>\n\n\n\n<p>Percentage values used with <code>background-position</code> are always a pain especially when you use them for the first time. Their behavior is non-intuitive but well defined and easy to understand if we get the logic behind it. I think it would take another article for a full explanation why it works this way, but here’s <a href=\"https://stackoverflow.com/a/51734530/8620333\" rel=\"noopener\">another “long” explanation I posted over at Stack Overflow</a>. I recommend taking a few minutes to read that answer and you will thank me later!</p>\n\n\n\n<p class=\"is-style-default\">The trick is to change the width to something different than <code>100%</code>. Let’s use <code>200%</code>. We’re not worried about the background exceeding the element because the overflow is hidden anyway.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"3,4,10,11\"><code markup=\"tt\">.hover-2 {\n  background-image: linear-gradient(#1095c1 0 0);\n  background-size: 200% .08em;\n  background-position: 200% 100%;\n  background-repeat: no-repeat;\n  transition: background-size .3s, background-position .3s .3s;\n}\n.hover-2:hover {\n  transition: background-size .3s .3s, background-position .3s;\n  background-size: 200% 100%;\n  background-position: 100% 100%;\n}</code></pre>\n\n\n\n<p>And here’s what we get:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_JjOeXaz\" src=\"//codepen.io/anon/embed/JjOeXaz?height=350&amp;theme-id=1&amp;slug-hash=JjOeXaz&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed JjOeXaz\" title=\"CodePen Embed JjOeXaz\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>It’s time to optimize our code. If we take the ideas we learned from the first hover effect, we can use shorthand properties and write fewer declarations to make this work:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-2 {\n  background: \n    linear-gradient(#1095c1 0 0) no-repeat\n    var(--p, 200%) 100% / 200% var(--p, .08em);\n  transition: .3s var(--t, 0s), background-position .3s calc(.3s - var(--t, 0s));\n}\n.hover-2:hover {\n  --p: 100%;\n  --t: .3s;\n}</code></pre>\n\n\n\n<p>We add all the background properties together using the shorthand version then we use <code>--p</code> to express our values. The sizes change from <code>.08em</code> to <code>100%</code> and the position from <code>200%</code> to <code>100%</code></p>\n\n\n\n<p>I am also using another variable <code>--t</code> , to optimize the transition property. On mouse hover we have it set to a <code>.3s</code> value, which gives us this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">transition: .3s .3s, background-position .3s 0s;</code></pre>\n\n\n\n<p>On mouse out, <code>--t</code> is undefined, so the fallback value will be used:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">transition: .3s 0s, background-position .3s .3s;</code></pre>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Shouldn’t we have <code>background-size</code> in the <code>transition</code>?</p></blockquote>\n\n\n\n<p>That is indeed another optimization we can make. If we don’t specify any property it means “all” the properties, so the transition is defined for “all” the properties (including <code>background-size</code> and <code>background-position</code>). Then it’s defined again for <code>background-position</code> which is similar to defining it for <code>background-size</code>, then <code>background-position</code>.</p>\n\n\n\n<p>“Similar” is different than saying something is the “same.” You will see a difference if you change more properties on hover, so the last optimization might be unsuitable in some cases.</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Can we still optimize the code and use only one custom property?</p></blockquote>\n\n\n\n<p>Yes, we can! Ana Tudor shared a <a href=\"https://css-tricks.com/dry-switching-with-css-variables-the-difference-of-one-declaration/\">great article explaining how to create <abbr>DRY</abbr> switching</a> where one custom property can update multiple properties. I won’t go into the details here, but our code can be revised like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-2 {\n  background: \n    linear-gradient(#1095c1 0 0) no-repeat\n    calc(200% - var(--i, 0) * 100%) 100% / 200% calc(100% * var(--i, 0) + .08em);\n  transition: .3s calc(var(--i, 0) * .3s), background-position .3s calc(.3s - calc(var(--i, 0) * .3s));\n}\n.hover-2:hover {\n  --i: 1;\n}</code></pre>\n\n\n\n<p>The <code>--i</code> custom property is initially undefined, so the fallback value, <code>0</code>, is used. On hover though, we replace <code>0</code> with <code>1</code>. You can do the math for both cases and get the values for each one. You can see that variable as a “switch” that update all our values at once on hover.</p>\n\n\n\n<p>Again, we’re back to only three declarations for a pretty cool hover effect!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_RwjqRBZ\" src=\"//codepen.io/anon/embed/RwjqRBZ?height=350&amp;theme-id=1&amp;slug-hash=RwjqRBZ&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed RwjqRBZ\" title=\"CodePen Embed RwjqRBZ\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Hover effect #3</h3>\n\n\n\n<p>We are going to use two gradients instead of one for this effect. We will see that combining multiple gradients is another way to create fancy hover effects.</p>\n\n\n\n<p>Here’s a diagram of what we’re doing:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"475\" height=\"393\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646166338419_image.png?resize=475%2C393&#038;ssl=1\" alt=\"\" class=\"wp-image-365388\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646166338419_image.png?w=475&amp;ssl=1 475w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646166338419_image.png?resize=300%2C248&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>We initially have two gradients that overflow the element so that they are out of view. Each one has a fixed height and toes up half of the element’s width. Then we slide them into view to make them visible. The first gradient is placed at the bottom-left and the second one at the top-right. Finally, we increase the height to cover the whole element.</figcaption></figure>\n\n\n\n<p>Here’s how that looks in CSS:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-3 {\n  background-image:\n    linear-gradient(#1095c1 0 0),\n    linear-gradient(#1095c1 0 0);\n  background-repeat: no-repeat;\n  background-size: 50% .08em;\n  background-position:\n    -100% 100%,\n    200% 0;\n  transition: background-size .3s, background-position .3s .3s;\n}\n.hover-3:hover {\n  background-size: 50% 100%;\n  background-position:\n    0 100%,\n    100% 0;  \n  transition: background-size .3s .3s, background-position .3s;\n}</code></pre>\n\n\n\n<p>The code is almost the same as the other hover effects we’ve covered. The only difference is that we have two gradients with two different positions. The position values may look strange but, again, that’s related to how percentages work with the <code>background-position</code> property in CSS, so I highly recommend reading my <a href=\"https://stackoverflow.com/a/51734530/8620333\" rel=\"noopener\">Stack Overflow answer</a> if you want to get into the gritty details.</p>\n\n\n\n<p>Now let’s optimize! You get the idea by now — we’re using shorthand properties, custom properties, and <code>calc()</code> to tidy things up.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-3 {\n  --c: no-repeat linear-gradient(#1095c1 0 0);\n  background: \n    var(--c) calc(-100% + var(--p, 0%)) 100% / 50% var(--p, .08em),\n    var(--c) calc( 200% - var(--p, 0%)) 0    / 50% var(--p, .08em);\n  transition: .3s var(--t, 0s), background-position .3s calc(.3s - var(--t, 0s));\n}\n.hover-3:hover {\n  --p: 100%;\n  --t: 0.3s;\n}</code></pre>\n\n\n\n<p>I have added an extra custom property, <code>--c</code>, that defines the gradient since the same gradient is used in both places.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_XWzyEjG/02bfbaa78fb6cb8907d11b058d0d51ff\" src=\"//codepen.io/anon/embed/XWzyEjG/02bfbaa78fb6cb8907d11b058d0d51ff?height=350&amp;theme-id=1&amp;slug-hash=XWzyEjG/02bfbaa78fb6cb8907d11b058d0d51ff&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed XWzyEjG/02bfbaa78fb6cb8907d11b058d0d51ff\" title=\"CodePen Embed XWzyEjG/02bfbaa78fb6cb8907d11b058d0d51ff\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>I am using <code>50.1%</code> in that demo instead of <code>50%</code> for the background size because it prevents a gap from showing between the gradients. I also added <code>1%</code> to the positions for similar reasons.</p>\n\n\n\n<p>Let’s do the second optimization by using the switch variable:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-3 {\n  --c: no-repeat linear-gradient(#1095c1 0 0);\n  background: \n    var(--c) calc(-100% + var(--i, 0) * 100%) 100% / 50% calc(100% * var(--i, 0) + .08em),\n    var(--c) calc( 200% - var(--i, 0) * 100%) 0 / 50% calc(100% * var(--i, 0) + .08em);\n  transition: .3s calc(var(--i, 0) * .3s), background-position .3s calc(.3s - var(--i, 0) * .3s);\n}\n.hover-3:hover {\n  --i: 1;\n}</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNYQvYL/cedf25897c74453e66145df59aa75860\" src=\"//codepen.io/anon/embed/rNYQvYL/cedf25897c74453e66145df59aa75860?height=350&amp;theme-id=1&amp;slug-hash=rNYQvYL/cedf25897c74453e66145df59aa75860&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNYQvYL/cedf25897c74453e66145df59aa75860\" title=\"CodePen Embed rNYQvYL/cedf25897c74453e66145df59aa75860\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p class=\"ticss-3a359989\">Are you started to see the patterns here? It’s not so much that the effects we’re making are difficult. It’s more the “final step” of code optimization. We start by writing verbose code with a lot of properties, then reduce it following simple rules (e.g. using shorthand, removing default values, avoiding redundant values, etc) to simplify things down as much as possible.</p>\n\n\n\n<h3>Hover effect #4</h3>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_XWVLJQX\" src=\"//codepen.io/anon/embed/XWVLJQX?height=350&amp;theme-id=1&amp;slug-hash=XWVLJQX&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed XWVLJQX\" title=\"CodePen Embed XWVLJQX\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>I will raise the difficulty level for this last effect, but you know enough from the other examples that I doubt you’ll have any issues with this one.</p>\n\n\n\n<p>This hover effect relies on two conic gradients and more calculations.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"763\" height=\"428\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646219422579_image.png?resize=763%2C428&#038;ssl=1\" alt=\"\" class=\"wp-image-365389\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646219422579_image.png?w=763&amp;ssl=1 763w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646219422579_image.png?resize=300%2C168&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Initially, we have both gradients with zero dimensions in Step 1. We increase the size of each one in Step 2. We keep increasing their widths until they fully cover the element, as shown in Step 3. After that, we slide them to the bottom to update their position. This is the “magic” part of the hover effect. Since both gradients will use the same coloration, changing their position in Step 4 will make no visual difference — but we will see a difference once we reduce the size on mouse out during Step 5.</p>\n\n\n\n<p>If you compare Step 2 and Step 5, you can see that we have a different inclination. Let’s translate that into code:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-4 {\n  background-image:\n    conic-gradient(/* ??? */),\n    conic-gradient(/* ??? */);\n  background-position:\n    0 0,\n    100% 0;\n  background-size: 0% 200%;\n  background-repeat: no-repeat;\n  transition: background-size .4s, background-position 0s;\n}\n.hover-4:hover {\n  background-size: /* ??? */ 200%;\n  background-position:\n    0 100%,\n    100% 100%;\n}</code></pre>\n\n\n\n<p>The positions are pretty clear. One gradient starts at top left (<code>0 0</code>) and ends at bottom left (<code>0 100%</code>) while the other starts at top right (<code>100% 0</code>) and ends at bottom right (<code>100% 100%</code>).</p>\n\n\n\n<p>We’re using a <code>transition</code> on the background positions and sizes to reveal them. We only need a transition value for the <code>background-size</code>. And like before, <code>background-position</code> needs to change instantly, so we’re assigning a <code>0s</code> value for the transition’s duration.</p>\n\n\n\n<p>For the sizes, both gradient need to have 0 width and twice the element height (<code>0% 200%</code>). We will see later how their sizes change on hover. Let’s first define the gradient configuration.</p>\n\n\n\n<p>The diagram below illustrates the configuration of each gradient:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"705\" height=\"246\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646407935594_image.png?resize=705%2C246&#038;ssl=1\" alt=\"\" class=\"wp-image-365390\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646407935594_image.png?w=705&amp;ssl=1 705w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646407935594_image.png?resize=300%2C105&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Note that for the second gradient (indicated in green), we need to know the height to use it inside the <code>conic-gradient</code> we’re creating. For this reason, I am going to add a <code>line-height</code> that sets the element’s height and then try that same value for the conic gradient values we left out.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"4,5,6\"><code markup=\"tt\">.hover-4 {\n  --c: #1095c1;\n  line-height: 1.2em;\n  background-image:\n    conic-gradient(from -135deg at 100%  50%, var(--c) 90deg, #0000 0),\n    conic-gradient(from -135deg at 1.2em 50%, #0000 90deg, var(--c) 0);\n  background-position:\n    0 0,\n    100% 0;\n  background-size: 0% 200%;\n  background-repeat: no-repeat;\n  transition: background-size .4s, background-position 0s;\n}\n.hover-4:hover {\n  background-size: /* ??? */ 200%;\n  background-position:\n    0 100%,\n    100% 100%;\n}</code></pre>\n\n\n\n<p>The last thing we have left is to figure out the background’s size. Intuitively, we may think that each gradient needs to take up half of the element’s width but that’s actually not enough.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"508\" height=\"243\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646253789244_image.png?resize=508%2C243&#038;ssl=1\" alt=\"\" class=\"wp-image-365391\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646253789244_image.png?w=508&amp;ssl=1 508w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_EA68E5405AB1BB1BDA6A2167A62B88866B527F71366124FEAA163CB2E34C7522_1646253789244_image.png?resize=300%2C144&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>We’re left with a large gap if we use <code>50%</code> as the <code>background-size</code> value for both gradients.</figcaption></figure>\n\n\n\n<p>We get a gap equal to the height, so we actually need to do is increase the size of each gradient by <em>half the height</em> on hover for them to cover the whole element.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"2\"><code markup=\"tt\">.hover-4:hover {\n  background-size: calc(50% + .6em) 200%;\n  background-position:\n    0 100%,\n    100% 100%;\n}</code></pre>\n\n\n\n<p>Here’s what we get after optimizing them like the previous examples:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.hover-4 {\n  --c: #1095c1;\n  line-height: 1.2em;\n  background:\n    conic-gradient(from -135deg at 100%  50%, var(--c) 90deg, #0000 0) \n      0  var(--p, 0%) / var(--s, 0%) 200% no-repeat,\n    conic-gradient(from -135deg at 1.2em 50%, #0000 90deg, var(--c) 0) \n      100% var(--p, 0%) / var(--s, 0%) 200% no-repeat;\n  transition: .4s, background-position 0s;\n}\n.hover-4:hover {\n  --p: 100%;\n  --s: calc(50% + .6em);\n}\n</code></pre>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_gOXZWJa/e1a13fa9e71b3c002d0dc39ef950d0e1\" src=\"//codepen.io/anon/embed/gOXZWJa/e1a13fa9e71b3c002d0dc39ef950d0e1?height=350&amp;theme-id=1&amp;slug-hash=gOXZWJa/e1a13fa9e71b3c002d0dc39ef950d0e1&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed gOXZWJa/e1a13fa9e71b3c002d0dc39ef950d0e1\" title=\"CodePen Embed gOXZWJa/e1a13fa9e71b3c002d0dc39ef950d0e1\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>What about the version with only one custom property?</p></blockquote>\n\n\n\n<p>I will leave that for you! After looking at four similar hover effects, you should be able to get the final optimization down to a single custom property. Share your work in the comment section! There’s no prize, but we may end up with different implementations and ideas that benefit everyone!</p>\n\n\n\n<p>Before we end, let me share a version of that last hover effect that <a href=\"https://twitter.com/anatudor\" rel=\"noopener\">Ana Tudor</a> cooked up. It’s an improvement! But note that it lacks Firefox supports due to a known bug. Still, it’s a great idea that shows how to combine gradients with blend modes to create even cooler hover effects.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_PoOYjJN\" src=\"//codepen.io/anon/embed/PoOYjJN?height=350&amp;theme-id=1&amp;slug-hash=PoOYjJN&amp;default-tab=result\" height=\"350\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed PoOYjJN\" title=\"CodePen Embed PoOYjJN\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Wrapping up</h3>\n\n\n\n<p>We made four super cool hover effects! And even though they are different effects, they all take the same approach of using CSS <code>background</code> properties, custom properties, and <code>calc()</code>. Different combinations allowed us to make different versions, all using the same techniques that leave us with clean, maintainable code.</p>\n\n\n\n<p>If you want to get some ideas, I made a <a href=\"https://codepen.io/collection/JGYGwo\" rel=\"noopener\">collection of 500</a> (yes, 500!) hover effects, 400 of which are done without pseudo-elements. The four we covered in this article are just the tip of the iceberg!</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/cool-hover-effects-using-background-properties/\">Cool Hover Effects That Use Background Properties</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/cool-hover-effects-using-background-properties/feed/"
        ],
        "slash:comments": [
            "2"
        ],
        "post-id": [
            {
                "_": "365383",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "A while ago, Geoff wrote an article about a cool hover effect\n[https://css-tricks.com/adam-argyles-sick-mouse-out-css-hover-effect/]. The\neffect relies on a combination of CSS pseudo-elements, transfo...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Setting Up CloudFront to Host Your Web App"
        ],
        "link": [
            "https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/"
        ],
        "comments": [
            "https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/#comments"
        ],
        "dc:creator": [
            "Adam Rackis"
        ],
        "pubDate": [
            "Thu, 28 Apr 2022 14:42:48 +0000"
        ],
        "category": [
            "Article",
            "cache",
            "cdn",
            "cloudfront",
            "performance",
            "webpagetest"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365413",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p><a href=\"https://css-tricks.com/adding-cdn-caching-to-a-vite-build/\">In my last article</a>, we went over how to set up a web app that serves chunks and bundles of CSS and JavaScript from CloudFront. We integrated it into <a href=\"https://vitejs.dev\" rel=\"noopener\">Vite</a> so that when the app runs in a browser, &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/\">Setting Up CloudFront to Host Your Web App</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p><a href=\"https://css-tricks.com/adding-cdn-caching-to-a-vite-build/\">In my last article</a>, we went over how to set up a web app that serves chunks and bundles of CSS and JavaScript from CloudFront. We integrated it into <a href=\"https://vitejs.dev\" rel=\"noopener\">Vite</a> so that when the app runs in a browser, the assets requested from the app’s root HTML file would pull from CloudFront as the CDN.</p>\n\n\n\n<p>While CloudFront’s edge caching does offer benefits, serving your app’s resources from these multiple locations is not without a cost of its own. Let’s take a look at a <a href=\"https://www.webpagetest.org/\" rel=\"noopener\">WebPageTest</a> trace of my own web app, running with the configuration from the last blog post.</p>\n\n\n\n<span id=\"more-365413\"></span>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1726\" height=\"480\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?resize=1726%2C480&#038;ssl=1\" alt=\"\" class=\"wp-image-365415\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?w=1726&amp;ssl=1 1726w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?resize=300%2C83&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?resize=1024%2C285&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?resize=768%2C214&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645936087800_image.png?resize=1536%2C427&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Notice the large connection times for lines 2-4. Line 1 is our HTML entry point. That HTML is parsed, the browser sees script and link tags for the JavaScript and CSS assets that reside on the CDN, and requests them. This causes a new connection to be set up which, as you can see, takes time.</figcaption></figure>\n\n\n\n<p>This post will show you how to get around this. We’ll walk through how to host the <em>entire</em> web app on CloudFront and have CloudFront forward — or “proxy&#8221; — non-cacheable requests for data, auth, etc., onto our underlying web server.</p>\n\n\n\n<p>Note that this is substantially more work than what we saw in the last article, and the instructions are likely to be different for you based on the exact needs of your web app, so your mileage may vary. We’ll be changing DNS records and, depending on your web app, you may have to add some cache headers in order to prevent certain assets from ever being cached. We’ll get into all of this!</p>\n\n\n\n<p>You may be wondering whether the setup we covered in the last article even offers any benefits because of what we’re doing here in this article. Given the long connection time, would we have been better off forgoing the CDN, and instead serve all our assets from the web server to avoid that longer wait? I measured this with my own web app, and the CDN version, above, was indeed faster, but not by a lot. The initial <a href=\"https://css-tricks.com/core-web-vitals/\">LCP</a> page load was about 200-300ms faster. And remember, that’s just for the initial load. Once this connection has been set up, edge caching should add much more value for all your subsequent, asynchronously loaded chunks.</p>\n\n\n\n<h3>Setting up our DNS</h3>\n\n\n\n<p>Our end goal is to serve our entire web app from CloudFront. That means when we hit our domain, we want the results to come from CloudFront instead of whatever web server it’s currently linked to. That means we’ll have to modify our DNS settings. We’ll use AWS Route 53 for this.</p>\n\n\n\n<p class=\"is-style-explanation\">I’m using <code>mydemo.technology</code> as an example, which is a domain I own. I’ll show you all the steps here. But by the time you read this, I’ll have removed this domain from my web app. So, later when I start showing you actual CNAME records, and similar, those will no longer exist.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2820\" height=\"770\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=2820%2C770&#038;ssl=1\" alt=\"\" class=\"wp-image-365416\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?w=2820&amp;ssl=1 2820w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=300%2C82&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=1024%2C280&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=768%2C210&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=1536%2C419&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645834717715_image.png?resize=2048%2C559&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Go to the Route 53 homepage, and click on hosted zones:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"821\" height=\"847\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?resize=821%2C847&#038;ssl=1\" alt=\"Showing the hosted zone configuration screen in the CloudFront settings.\" class=\"wp-image-365417\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?w=821&amp;ssl=1 821w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?resize=291%2C300&amp;ssl=1 291w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645994751238_image.png?resize=768%2C792&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Click <strong>Create hosted zone</strong> and enter the app’s domain:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1186\" height=\"274\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=1186%2C274&#038;ssl=1\" alt=\"\" class=\"wp-image-365418\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?w=1186&amp;ssl=1 1186w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=300%2C69&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=1024%2C237&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645908142161_image.png?resize=768%2C177&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Now, take note of the name servers listed in the next screen. They should look something like this.</figcaption></figure>\n\n\n\n<p>We haven’t really accomplished anything yet. We told AWS we want it to manage this domain for us, and AWS gave us the name servers it&#8217;ll route our traffic through. To put this into effect, we need to go to wherever our domain is registered. There should be a place for you to enter in your own custom name servers.</p>\n\n\n\n<p class=\"is-style-explanation\">Note that my domain is registered with GoDaddy and that is reflected in the screenshots throughout this article. The UI, settings, and options may differ from what you see in your registrar.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"762\" height=\"760\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?resize=762%2C760&#038;ssl=1\" alt=\"\" class=\"wp-image-365419\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?w=762&amp;ssl=1 762w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?resize=300%2C300&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645835018979_image.png?resize=150%2C150&amp;ssl=1 150w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p class=\"is-style-explanation\"><strong>Warning:</strong> I recommend writing down the original name servers as well as any and all DNS records before making changes. That way, should something fail, you have everything you need to roll back to how things were before you started. And even if everything works fine, you’ll still want to re-add any other records into Route 53, ie MX records, etc.</p>\n\n\n\n<h3>Setting up a CloudFront distribution</h3>\n\n\n\n<p>Let’s make a CloudFront distribution to host our web app. We covered the basics in the last post, so we’ll get right to it. One big change from last time is what we enter for the origin domain. <strong>Do not put the top-level domain</strong>, e.g. your-app.net. What you need is the underlying domain where your app is hosted. If that’s Heroku, then enter the URL Heroku provides you.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1658\" height=\"472\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=1658%2C472&#038;ssl=1\" alt=\"\" class=\"wp-image-365420\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?w=1658&amp;ssl=1 1658w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=300%2C85&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=1024%2C292&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=768%2C219&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841894888_image.png?resize=1536%2C437&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Next, be sure to change the default protocol if you plan to use this site over a secure HTTPS connection:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1186\" height=\"946\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=1186%2C946&#038;ssl=1\" alt=\"\" class=\"wp-image-365421\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?w=1186&amp;ssl=1 1186w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=300%2C239&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=1024%2C817&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934723593_image.png?resize=768%2C613&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This part is crucial. If your web app is running authentication, hosting data, or anything else, be sure to enable other verbs besides GET. If you skip this part, then any POST requests for authentication, mutating data, etc., will be rejected and fail. If your web app is doing nothing but serving assets and all those things are handled by external services, then outstanding! You have a great setup, and you can skip this step.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"730\" height=\"420\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841986703_image.png?resize=730%2C420&#038;ssl=1\" alt=\"\" class=\"wp-image-365422\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841986703_image.png?w=730&amp;ssl=1 730w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645841986703_image.png?resize=300%2C173&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We have to make quite a few changes to the cache key and origin requests settings compared to last time:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1402\" height=\"1044\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=1402%2C1044&#038;ssl=1\" alt=\"\" class=\"wp-image-365423\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?w=1402&amp;ssl=1 1402w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=300%2C223&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=1024%2C763&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842121040_image.png?resize=768%2C572&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We need to create a cache policy with a minimum TTL of 0, so non-caching headers we send back will are properly respected. You may also want to enable all query strings. I was seeing weird behavior when multiple GraphQL requests went out together with different query strings, which were ignored, causing all these requests to appear identical from CloudFront’s perspective.</p>\n\n\n\n<p>My policy wound up looking like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1770\" height=\"1482\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=1770%2C1482&#038;ssl=1\" alt=\"\" class=\"wp-image-365424\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?w=1770&amp;ssl=1 1770w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=300%2C251&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=1024%2C857&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=768%2C643&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842200731_image.png?resize=1536%2C1286&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>For an origin request policy, if needed, we should make sure to send query strings and cookies for things like authentication and data queries to work. To be clear, this determines whether cookies and query strings will be sent from CloudFront down to your web server (e.g. Heroku, or similar).</p>\n\n\n\n<p>Mine looks like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1672\" height=\"1120\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=1672%2C1120&#038;ssl=1\" alt=\"\" class=\"wp-image-365425\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?w=1672&amp;ssl=1 1672w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=300%2C201&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=1024%2C686&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=768%2C514&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842297987_image.png?resize=1536%2C1029&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Lastly, for response headers policy, we can select &#8220;CORS With Preflight&#8221; from the list. In the end, your first two will have different names depending on how you set them up. But mine looks like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1374\" height=\"918\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=1374%2C918&#038;ssl=1\" alt=\"\" class=\"wp-image-365426\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?w=1374&amp;ssl=1 1374w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=300%2C200&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=1024%2C684&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645842362649_image.png?resize=768%2C513&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Let’s connect our domain, whatever it is, to this CloudFront distribution. Unfortunately, this is more work than you might expect. We need to prove to AWS that we actually own the domain because, for all Amazon knows, we don’t. We created a hosted zone in Route 53. And we took the nameservers it gave us and registered them with GoDaddy (or whoever your domain is registered with). But Amazon doesn’t know this yet. We need to demonstrate to Amazon that we do, in fact, control the DNS for this domain.</p>\n\n\n\n<p>First, we’ll request an SSL certificate.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1730\" height=\"1456\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=1730%2C1456&#038;ssl=1\" alt=\"\" class=\"wp-image-365427\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?w=1730&amp;ssl=1 1730w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=300%2C252&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=1024%2C862&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=768%2C646&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932319102_image.png?resize=1536%2C1293&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Next, let’s request the certificate link:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1432\" height=\"504\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=1432%2C504&#038;ssl=1\" alt=\"\" class=\"wp-image-365428\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?w=1432&amp;ssl=1 1432w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=300%2C106&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=1024%2C360&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845081306_image.png?resize=768%2C270&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Now, we’ll select the option to request a public certificate option:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1634\" height=\"882\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=1634%2C882&#038;ssl=1\" alt=\"\" class=\"wp-image-365429\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?w=1634&amp;ssl=1 1634w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=300%2C162&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=1024%2C553&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=768%2C415&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645845178014_image.png?resize=1536%2C829&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We need to provide the domain:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1466\" height=\"1702\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=1466%2C1702&#038;ssl=1\" alt=\"\" class=\"wp-image-365430\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?w=1466&amp;ssl=1 1466w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=258%2C300&amp;ssl=1 258w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=882%2C1024&amp;ssl=1 882w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=768%2C892&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932453934_image.png?resize=1323%2C1536&amp;ssl=1 1323w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>And, in my case, the certificate is pending:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2318\" height=\"478\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=2318%2C478&#038;ssl=1\" alt=\"\" class=\"wp-image-365431\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?w=2318&amp;ssl=1 2318w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=300%2C62&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=1024%2C211&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=768%2C158&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=1536%2C317&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932554825_image.png?resize=2048%2C422&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>So, I’m going to click it:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2378\" height=\"528\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=2378%2C528&#038;ssl=1\" alt=\"\" class=\"wp-image-365432\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?w=2378&amp;ssl=1 2378w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=300%2C67&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=1024%2C227&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=768%2C171&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=1536%2C341&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932616235_image.png?resize=2048%2C455&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This proves that we own and control this domain. In a separate tab, go back to Route 53, and open our hosted zone:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2388\" height=\"1078\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=2388%2C1078&#038;ssl=1\" alt=\"\" class=\"wp-image-365433\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?w=2388&amp;ssl=1 2388w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=300%2C135&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=1024%2C462&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=768%2C347&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=1536%2C693&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932927217_image.png?resize=2048%2C925&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Now we need to create the CNAME record. Copy the first part for the <strong>Record name</strong>. For example, if the CNAME is <code>_xhyqtrajdkrr.mydemo.technology</code>, then put the <code>_xhyqtrajdkrr</code> part. For the <strong>Record value</strong>, copy the entire value.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1944\" height=\"1210\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=1944%2C1210&#038;ssl=1\" alt=\"\" class=\"wp-image-365434\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?w=1944&amp;ssl=1 1944w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=300%2C187&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=1024%2C637&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=768%2C478&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645932742028_image.png?resize=1536%2C956&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Assuming you registered the AWS name servers with your domain host, GoDaddy or whomever, AWS will soon be able to ping the DNS entry it just asked you to create, see the response it expects, and validate your certificate.</p>\n\n\n\n<p class=\"is-style-explanation\">It can take time for the name servers you set at the beginning to propagate. In theory, it can take up to 72 hours, but it usually updates within an hour for me.</p>\n\n\n\n<p>You’ll see success on the domain:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2404\" height=\"474\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=2404%2C474&#038;ssl=1\" alt=\"\" class=\"wp-image-365435\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?w=2404&amp;ssl=1 2404w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=300%2C59&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=1024%2C202&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=768%2C151&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=1536%2C303&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933155607_image.png?resize=2048%2C404&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>…as well as the certificate:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2762\" height=\"420\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=2762%2C420&#038;ssl=1\" alt=\"\" class=\"wp-image-365436\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?w=2762&amp;ssl=1 2762w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=300%2C46&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=1024%2C156&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=768%2C117&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=1536%2C234&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933066086_image.png?resize=2048%2C311&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p><em>Whew</em>! Almost done. Now let’s connect all of this to our CloudFront distribution. We can head back to the CloudFront settings screen. Now, under custom <strong>SSL certificate</strong>, we should see what we created (and any others you’ve created in the past):</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1392\" height=\"988\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=1392%2C988&#038;ssl=1\" alt=\"\" class=\"wp-image-365438\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?w=1392&amp;ssl=1 1392w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=300%2C213&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=1024%2C727&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933691496_image.png?resize=768%2C545&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Then, let’s add the app’s top-level domain:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1388\" height=\"596\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=1388%2C596&#038;ssl=1\" alt=\"\" class=\"wp-image-365439\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?w=1388&amp;ssl=1 1388w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=300%2C129&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=1024%2C440&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933782796_image.png?resize=768%2C330&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>All that’s left is to tell Route 53 to route our domain to this CloudFront distribution. So, let’s go back to Route 53 and create another DNS record.</p>\n\n\n\n<p>We need to enter an A record for IPv4, and an AAAA record for IPv6. For both, leave the record name empty since we’re only registering our top-level domain and nothing else.</p>\n\n\n\n<p>Select the A record type. Next, specify the record as an alias, then map the alias to the CloudFront distribution. That should open up an option to choose your CloudFront distribution, and since we previously registered the domain with CloudFront, you should see that distribution, and only that distribution when making a selection.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2210\" height=\"1162\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=2210%2C1162&#038;ssl=1\" alt=\"\" class=\"wp-image-365440\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?w=2210&amp;ssl=1 2210w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=300%2C158&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=1024%2C538&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=768%2C404&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=1536%2C808&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645933944994_image.png?resize=2048%2C1077&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>We repeat the exact same steps for the AAAA record type we need for IPv6 support.</p>\n\n\n\n<p>Run your web app, and make sure it actually, you know, works. It should!</p>\n\n\n\n<h3>Things to test and verify</h3>\n\n\n\n<p>OK, while we’re technically done here, chances are there are still a few things left to do to meet the exact needs of your web app. Different apps have different needs and what I’ve demonstrated so far has walked us through the common steps to route things through CloudFront for better performance. Chances are there are things unique to your app that require more love. So, for that, let me cover a few possible additional items you might encounter during setup.</p>\n\n\n\n<p>First off, make sure any POSTs you have are correctly sent to your origin. Assuming CloudFront is correctly configured to forward cookies to your origin, this should already work but there’s no harm in checking.</p>\n\n\n\n<p>The bigger concern are all other GET requests that are sent to your web app. By default, any GET requests CloudFront receives, if cached, are served to your web app with the cached response. This can be disastrous. Any data requests to any REST or GraphQL endpoints sent with GET are cached by the CDN. And if you’re shipping a service worker, that will be cached too, instead of the normal behavior, where the current version is sent down in the background and updated if there are changes.</p>\n\n\n\n<p>In order to tell CloudFront <em>not</em> to cache certain things, be sure to set the <code>\"Cache-Control\"</code> header to <code>\"no-cache\"</code> . If you’re using a framework, like <a href=\"https://expressjs.com\" rel=\"noopener\">Express</a>, you can set middleware for your data access with something like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">app.use(\"/graphql\", (req, res, next) => {\n  res.set(\"Cache-Control\", \"no-cache\");\n  next();\n});\napp.use(\n  \"/graphql\",\n  expressGraphql({\n    schema: executableSchema,\n    graphiql: true,\n    rootValue: root\n  })\n); </code></pre>\n\n\n\n<p>For things like service workers, you can put specific rules for those files before your static middleware:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">app.get(\"/service-worker.js\", express.static(__dirname + \"/react/dist\", { setHeaders: resp => resp.set(\"Cache-Control\", \"no-cache\") }));\napp.get(\"/sw-index-bundle.js\", express.static(__dirname + \"/react/dist\", { setHeaders: resp => resp.set(\"Cache-Control\", \"no-cache\") }));\napp.use(express.static(__dirname + \"/react/dist\", { maxAge: 432000 * 1000 * 10 }));</code></pre>\n\n\n\n<p>And so on. Test everything thoroughly because there’s so much that can go wrong. And after each change you make, be sure to run a full invalidation in CloudFront and clear the cache before re-running your web app to test that things are correctly excluded from cache. You can do this from the <strong>Invalidations</strong> tab in CloudFront. Open that up and put <code>/*</code> in for the value, to clear everything.</p>\n\n\n\n<h3>A working CloudFront implementation</h3>\n\n\n\n<p>Now that we have everything running, let’s re-run our trace in WebPageTest:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1722\" height=\"488\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?resize=1722%2C488&#038;ssl=1\" alt=\"\" class=\"wp-image-365441\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?w=1722&amp;ssl=1 1722w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?resize=300%2C85&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?resize=1024%2C290&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?resize=768%2C218&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9EC4D5B81B6CD9C28657A6DEAF8D3C9C2A6DFB1D0DE42C8A4034DB1807C8212F_1645934248993_image.png?resize=1536%2C435&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>And just like that, we no longer have setup connections like we saw before for our assets. For my own web app, I was seeing a substantial improvement of 500ms in LCP. That’s a solid win!</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>Hosting an entire web app on a CDN can offer the best of all worlds. We get edge caching for static resources, but without the connection costs. Unfortunately, this improvement doesn’t come for free. Getting all of the necessary proxying correctly set up isn’t entirely intuitive, and then there’s still the need to set up cache headers in order to avoid non-cacheable requests from winding up in the CDN’s cache.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/\">Setting Up CloudFront to Host Your Web App</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/setting-up-cloudfront-to-host-your-web-app/feed/"
        ],
        "slash:comments": [
            "1"
        ],
        "post-id": [
            {
                "_": "365413",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "In my last article [https://css-tricks.com/adding-cdn-caching-to-a-vite-build/],\nwe went over how to set up a web app that serves chunks and bundles of CSS and\nJavaScript from CloudFront. We integrate...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Creating the DigitalOcean Logo in 3D With CSS"
        ],
        "link": [
            "https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/"
        ],
        "comments": [
            "https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/#comments"
        ],
        "dc:creator": [
            "Jhey Tompkins"
        ],
        "pubDate": [
            "Fri, 29 Apr 2022 14:37:10 +0000"
        ],
        "category": [
            "Article",
            "3d",
            "digital ocean"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365447",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Howdy y&#8217;all! Unless you’ve been living under a rock (and maybe even then), you’ve undoubtedly heard the news that <a href=\"https://css-tricks.com/css-tricks-is-joining-digitalocean/\">CSS-Tricks, was acquired by DigitalOcean</a>. Congratulations to everyone! &#x1f973;</p>\n<p>As a little hurrah to commemorate the occasion, I wanted to &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/\">Creating the DigitalOcean Logo in 3D With CSS</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Howdy y&#8217;all! Unless you’ve been living under a rock (and maybe even then), you’ve undoubtedly heard the news that <a href=\"https://css-tricks.com/css-tricks-is-joining-digitalocean/\">CSS-Tricks, was acquired by DigitalOcean</a>. Congratulations to everyone! &#x1f973;</p>\n\n\n\n<p>As a little hurrah to commemorate the occasion, I wanted to create the DigitalOcean logo in CSS. I did that, but then took it a little further with some 3D and parallax. This also makes for quite a good article because the way I made the logo uses various pieces from <a href=\"https://css-tricks.com/author/jheytompkins/\">previous articles I&#8217;ve written</a>. This cool little demo brings many of those concepts together.</p>\n\n\n\n<span id=\"more-365447\"></span>\n\n\n\n<p>So, let’s dive right in!</p>\n\n\n\n<h3>Creating the DigitalOcean logo</h3>\n\n\n\n<p>We are going to “trace” the DigitalOcean logo by grabbing an SVG version of it from <a href=\"https://simpleicons.org/?q=digitalocean\" rel=\"noopener\">simpleicons.org</a>.</p>\n\n\n\n<pre rel=\"SVG\" class=\"wp-block-csstricks-code-block language-svg\" data-line=\"\"><code markup=\"tt\">&lt;svg role=\"img\" viewbox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  &lt;title>DigitalOcean&lt;/title>\n  &lt;path d=\"M12.04 0C5.408-.02.005 5.37.005 11.992h4.638c0-4.923 4.882-8.731 10.064-6.855a6.95 6.95 0 014.147 4.148c1.889 5.177-1.924 10.055-6.84 10.064v-4.61H7.391v4.623h4.61V24c7.86 0 13.967-7.588 11.397-15.83-1.115-3.59-3.985-6.446-7.575-7.575A12.8 12.8 0 0012.039 0zM7.39 19.362H3.828v3.564H7.39zm-3.563 0v-2.978H.85v2.978z\">&lt;/path>\n&lt;/svg></code></pre>\n\n\n\n<p>Being mindful that we&#8217;re taking this 3D, we can wrap our SVG in a <code>.scene</code> element. Then we can use the tracing technique from my <a href=\"https://css-tricks.com/advice-for-complex-css-illustrations/#aa-tracing-is-perfectly-acceptable\">&#8220;Advice for Advanced CSS Illustrations&#8221;</a> article. We are using <a href=\"https://pugjs.org/api/getting-started.html\" rel=\"noopener\">Pug</a> so we can leverage its mixins and reduce the amount of markup we need to write for the 3D part.</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">- const SIZE = 40\n.scene\n  svg(role='img' viewbox='0 0 24 24' xmlns='http://www.w3.org/2000/svg')\n    title DigitalOcean\n    path(d='M12.04 0C5.408-.02.005 5.37.005 11.992h4.638c0-4.923 4.882-8.731 10.064-6.855a6.95 6.95 0 014.147 4.148c1.889 5.177-1.924 10.055-6.84 10.064v-4.61H7.391v4.623h4.61V24c7.86 0 13.967-7.588 11.397-15.83-1.115-3.59-3.985-6.446-7.575-7.575A12.8 12.8 0 0012.039 0zM7.39 19.362H3.828v3.564H7.39zm-3.563 0v-2.978H.85v2.978z')\n  .logo(style=`--size: ${SIZE}`)\n    .logo__arc.logo__arc--inner\n    .logo__arc.logo__arc--outer\n    .logo__square.logo__square--one\n    .logo__square.logo__square--two\n    .logo__square.logo__square--three</code></pre>\n\n\n\n<p>The idea is to style these elements so that they overlap our logo. We don&#8217;t need to create the &#8220;arc&#8221; portion of the logo as we&#8217;re thinking ahead because we are going to make this logo in 3D and can create the arc with two cylinder shapes. That means for now all we need is the containing elements for each cylinder, the inner arc, and the outer arc.</p>\n\n\n\n<p>Check out this demo that lays out the different pieces of the DigitalOcean logo. If you toggle the &#8220;Explode&#8221; and hover elements, you can what the logo consists of.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_yLpJWrr\" src=\"//codepen.io/anon/embed/yLpJWrr?height=300&amp;theme-id=1&amp;slug-hash=yLpJWrr&amp;default-tab=result\" height=\"300\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed yLpJWrr\" title=\"CodePen Embed yLpJWrr\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>If we wanted a flat DigitalOcean logo, we could use a CSS mask with a <a href=\"https://css-tricks.com/a-complete-guide-to-css-gradients/#h-conic-gradients\">conic gradient</a>. Then we would only need one &#8220;arc&#8221; element that uses a solid border.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.logo__arc--outer {\n  border: calc(var(--size) * 0.1925vmin) solid #006aff;\n  mask: conic-gradient(transparent 0deg 90deg, #000 90deg);\n  transform: translate(-50%, -50%) rotate(180deg);\n}</code></pre>\n\n\n\n<p>That would give us the logo. The “reveal” transitions a <code>clip-path</code> that shows the traced SVG image underneath.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_yLpJmbb\" src=\"//codepen.io/anon/embed/yLpJmbb?height=450&amp;theme-id=1&amp;slug-hash=yLpJmbb&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed yLpJmbb\" title=\"CodePen Embed yLpJmbb\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p class=\"is-style-explanation\">Check out my <a href=\"https://css-tricks.com/advice-for-complex-css-illustrations/\">“Advice for Complex CSS Illustrations”</a> article for tips on working with advanced illustrations in CSS.</p>\n\n\n\n<h3>Extruding for the 3D</h3>\n\n\n\n<p>We have the blueprint for our DigitalOcean logo, so it&#8217;s time to make this 3D. Why didn&#8217;t we create 3D blocks from the start? Creating containing elements, makes it easier to create 3D via extrusion.</p>\n\n\n\n<p>We covered creating 3D scenes in CSS in my <a href=\"https://css-tricks.com/css-in-3d-learning-to-think-in-cubes-instead-of-boxes/\">&#8220;Learning to Think in Cubes Instead of Boxes&#8221;</a> article. We are going to use some of those techniques for what we’re making here. Let&#8217;s start with the squares in the logo. Each square is a cuboid. And using Pug, we are going to create and use a <code>cuboid</code> mixin to help generate all of them.</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">mixin cuboid()\n  .cuboid(class!=attributes.class)\n    if block\n      block\n    - let s = 0\n    while s &lt; 6\n      .cuboid__side\n      - s++</code></pre>\n\n\n\n<p>Then we can use this in our markup:</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">.scene\n  .logo(style=`--size: ${SIZE}`)\n    .logo__arc.logo__arc--inner\n    .logo__arc.logo__arc--outer\n    .logo__square.logo__square--one\n      +cuboid().square-cuboid.square-cuboid--one\n    .logo__square.logo__square--two\n      +cuboid().square-cuboid.square-cuboid--two\n    .logo__square.logo__square--three\n      +cuboid().square-cuboid.square-cuboid--three</code></pre>\n\n\n\n<p>Next, we need the styles to display our cuboids. Note that cuboids have six sides, so we’re styling those with the <code>nth-of-type()</code> pseudo selector while leveraging the <code>vmin</code> length unit to keep things responsive.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.cuboid {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n.cuboid__side {\n  filter: brightness(var(--b, 1));\n  position: absolute;\n}\n.cuboid__side:nth-of-type(1) {\n  --b: 1.1;\n  height: calc(var(--depth, 20) * 1vmin);\n  width: 100%;\n  top: 0;\n  transform: translate(0, -50%) rotateX(90deg);\n}\n.cuboid__side:nth-of-type(2) {\n  --b: 0.9;\n  height: 100%;\n  width: calc(var(--depth, 20) * 1vmin);\n  top: 50%;\n  right: 0;\n  transform: translate(50%, -50%) rotateY(90deg);\n}\n.cuboid__side:nth-of-type(3) {\n  --b: 0.5;\n  width: 100%;\n  height: calc(var(--depth, 20) * 1vmin);\n  bottom: 0;\n  transform: translate(0%, 50%) rotateX(90deg);\n}\n.cuboid__side:nth-of-type(4) {\n  --b: 1;\n  height: 100%;\n  width: calc(var(--depth, 20) * 1vmin);\n  left: 0;\n  top: 50%;\n  transform: translate(-50%, -50%) rotateY(90deg);\n}\n.cuboid__side:nth-of-type(5) {\n  --b: 0.8;\n  height: 100%;\n  width: 100%;\n  transform: translate3d(0, 0, calc(var(--depth, 20) * 0.5vmin));\n  top: 0;\n  left: 0;\n}\n.cuboid__side:nth-of-type(6) {\n  --b: 1.2;\n  height: 100%;\n  width: 100%;\n  transform: translate3d(0, 0, calc(var(--depth, 20) * -0.5vmin)) rotateY(180deg);\n  top: 0;\n  left: 0;\n}</code></pre>\n\n\n\n<p>We are approaching this in a different way from how we have done it in past articles. Instead of applying height, width, and depth to a cuboid, we are only concerned with its depth. And instead of trying to color each side, we can make use of <a href=\"https://css-tricks.com/almanac/properties/f/filter/#aa-brightness\"><code>filter: brightness</code></a> to handle that for us.</p>\n\n\n\n<p class=\"is-style-explanation\">If you need to have cuboids or other 3D elements as a child of a side using <a href=\"https://css-tricks.com/almanac/properties/f/filter/\"><code>filter</code></a>, you may need to shuffle things. A filtered side will flatten any 3D children.</p>\n\n\n\n<p>The DigitalOcean logo has three cuboids, so we have a class for each one and are styling them like this:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.square-cuboid .cuboid__side {\n  background: hsl(var(--hue), 100%, 50%);\n}\n.square-cuboid--one {\n  /* 0.1925? It's a percentage of the --size for that square */\n  --depth: calc((var(--size) * 0.1925) * var(--depth-multiplier));\n}\n.square-cuboid--two {\n  --depth: calc((var(--size) * 0.1475) * var(--depth-multiplier));\n}\n.square-cuboid--three {\n  --depth: calc((var(--size) * 0.125) * var(--depth-multiplier));\n}</code></pre>\n\n\n\n<p>…which gives us something like this:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_MWrjWLe\" src=\"//codepen.io/anon/embed/MWrjWLe?height=450&amp;theme-id=1&amp;slug-hash=MWrjWLe&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed MWrjWLe\" title=\"CodePen Embed MWrjWLe\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>You can play with the depth slider to extrude the cuboids as you wish! For our demo, we&#8217;ve chosen to make the cuboids true cubes with equal height, width, and depth. The depth of the arc will match the largest cuboid.</p>\n\n\n\n<p>Now for the cylinders. The idea is to create two ends that use <code>border-radius: 50%</code>. Then, we can use many elements as the sides of the cylinder to create the effect. The trick is positioning all the sides.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_jOGQXBz\" src=\"//codepen.io/anon/embed/jOGQXBz?height=450&amp;theme-id=1&amp;slug-hash=jOGQXBz&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed jOGQXBz\" title=\"CodePen Embed jOGQXBz\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>There are various approaches we can take to create the cylinders in CSS. But, for me, if this is something I can foresee using many times, I&#8217;ll try and future-proof it. That means making a mixin and some styles I can reuse for other demos. And those styles should try and cater to scenarios I could see popping up. For a cylinder, there is some configuration we may want to consider:</p>\n\n\n\n<ul><li>radius</li><li>sides</li><li>how many of those sides are displayed</li><li>whether to show one or both ends of the cylinder</li></ul>\n\n\n\n<p>Putting that together, we can create a Pug mixin that caters to those needs:</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">mixin cylinder(radius = 10, sides = 10, cut = [5, 10], top = true, bottom = true)\n  - const innerAngle = (((sides - 2) * 180) / sides) * 0.5\n  - const cosAngle = Math.cos(innerAngle * (Math.PI / 180))\n  - const side =  2 * radius * Math.cos(innerAngle * (Math.PI / 180))\n  //- Use the cut to determine how many sides get rendered and from what point\n  .cylinder(style=`--side: ${side}; --sides: ${sides}; --radius: ${radius};` class!=attributes.class)\n    if top\n      .cylinder__end.cylinder__segment.cylinder__end--top\n    if bottom\n      .cylinder__end.cylinder__segment.cylinder__end--bottom\n    - const [start, end] = cut\n    - let i = start\n    while i &lt; end\n      .cylinder__side.cylinder__segment(style=`--index: ${i};`)\n      - i++</code></pre>\n\n\n\n<p class=\"is-style-explanation\">See how <code>//-</code> is prepended to the comment in the code? <a href=\"https://pugjs.org/language/comments.html\" rel=\"noopener\">That tells Pug to ignore the comment</a> and leave it out from the compiled HTML markup.</p>\n\n\n\n<p>Why do we need to pass the radius into the cylinder? Well, unfortunately, <a href=\"https://css-tricks.com/a-complete-guide-to-calc-in-css/#aa-the-math-operators-of-calc\">we can&#8217;t quite handle trigonometry with CSS <code>calc()</code> just yet</a> (but it <a href=\"https://drafts.csswg.org/css-values/#trig-funcs\" rel=\"noopener\">is coming</a>). And we need to work out things like the width of the cylinder sides and how far out from the center they should project. The great thing is that we have a nice way to pass that information to our styles via inline custom properties.</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">.cylinder(\n  style=`\n    --side: ${side};\n    --sides: ${sides};\n    --radius: ${radius};`\n  class!=attributes.class\n)</code></pre>\n\n\n\n<p>An example use for our mixin would be as follows:</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">+cylinder(20, 30, [10, 30])</code></pre>\n\n\n\n<p>This would create a cylinder with a radius of <code>20</code>, <code>30</code> sides, where only sides <code>10</code> to <code>30</code> are rendered.</p>\n\n\n\n<p>Then we need some styling. Styling the cylinders for the DigitalOcean logo is pretty straightforward, thankfully:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.cylinder {\n  --bg: hsl(var(--hue), 100%, 50%);\n  background: rgba(255,43,0,0.5);\n  height: 100%;\n  width: 100%;\n  position: relative;\n}\n.cylinder__segment {\n  filter: brightness(var(--b, 1));\n  background: var(--bg, #e61919);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}\n.cylinder__end {\n  --b: 1.2;\n  --end-coefficient: 0.5;\n  height: 100%;\n  width: 100%;\n  border-radius: 50%;\n  transform: translate3d(-50%, -50%, calc((var(--depth, 0) * var(--end-coefficient)) * 1vmin));\n}\n.cylinder__end--bottom {\n  --b: 0.8;\n  --end-coefficient: -0.5;\n}\n.cylinder__side {\n  --b: 0.9;\n  height: calc(var(--depth, 30) * 1vmin);\n  width: calc(var(--side) * 1vmin);\n  transform: translate(-50%, -50%) rotateX(90deg) rotateY(calc((var(--index, 0) * 360 / var(--sides)) * 1deg)) translate3d(50%, 0, calc(var(--radius) * 1vmin));\n}</code></pre>\n\n\n\n<p>The idea is that we create all the sides of the cylinder and put them in the middle of the cylinder. Then we rotate them on the Y-axis and project them out by roughly the distance of the radius.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_popEvYd\" src=\"//codepen.io/anon/embed/popEvYd?height=450&amp;theme-id=1&amp;slug-hash=popEvYd&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed popEvYd\" title=\"CodePen Embed popEvYd\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>There’s no need to show the ends of the cylinder in the inner part since they’re already obscured. But we do need to show them for the outer portion. Our two-cylinder mixin use look like this:</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">.logo(style=`--size: ${SIZE}`)\n  .logo__arc.logo__arc--inner\n    +cylinder((SIZE * 0.61) * 0.5, 80, [0, 60], false, false).cylinder-arc.cylinder-arc--inner\n  .logo__arc.logo__arc--outer\n    +cylinder((SIZE * 1) * 0.5, 100, [0, 75], true, true).cylinder-arc.cylinder-arc--outer</code></pre>\n\n\n\n<p>We know the radius from the diameter we used when tracing the logo earlier. Plus, we can use the outer cylinder ends to create the faces of the DigitalOcean logo. A combination of <code>border-width</code> and <a href=\"https://css-tricks.com/almanac/properties/c/clip-path/\"><code>clip-path</code></a> comes in handy here.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.cylinder-arc--outer .cylinder__end--top,\n.cylinder-arc--outer .cylinder__end--bottom {\n  /* Based on the percentage of the size needed to cap the arc */\n  border-width: calc(var(--size) * 0.1975vmin);\n  border-style: solid;\n  border-color: hsl(var(--hue), 100%, 50%);\n  --clip: polygon(50% 0, 50% 50%, 0 50%, 0 100%, 100% 100%, 100% 0);\n  clip-path: var(--clip);\n}</code></pre>\n\n\n\n<p>We&#8217;re pretty close to where we want to be!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_wvpzMyM\" src=\"//codepen.io/anon/embed/wvpzMyM?height=450&amp;theme-id=1&amp;slug-hash=wvpzMyM&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed wvpzMyM\" title=\"CodePen Embed wvpzMyM\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>There is one thing missing though: capping the arc. We need to create some ends for the arc, which requires two elements that we can position and rotate on the X or Y-axis:</p>\n\n\n\n<pre rel=\"Pug\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"13,14\"><code markup=\"tt\">.scene\n  .logo(style=`--size: ${SIZE}`)\n    .logo__arc.logo__arc--inner\n      +cylinder((SIZE * 0.61) * 0.5, 80, [0, 60], false, false).cylinder-arc.cylinder-arc--inner\n    .logo__arc.logo__arc--outer\n      +cylinder((SIZE * 1) * 0.5, 100, [0, 75], true, true).cylinder-arc.cylinder-arc--outer\n    .logo__square.logo__square--one\n      +cuboid().square-cuboid.square-cuboid--one\n    .logo__square.logo__square--two\n      +cuboid().square-cuboid.square-cuboid--two\n    .logo__square.logo__square--three\n      +cuboid().square-cuboid.square-cuboid--three\n    .logo__cap.logo__cap--top\n    .logo__cap.logo__cap--bottom</code></pre>\n\n\n\n<p>The arc’s capped ends will assume the height and width based on the end&#8217;s <code>border-width</code> value as well as the depth of the arc.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.logo__cap {\n  --hue: 10;\n  position: absolute;\n  height: calc(var(--size) * 0.1925vmin);\n  width: calc(var(--size) * 0.1975vmin);\n  background: hsl(var(--hue), 100%, 50%);\n}\n.logo__cap--top {\n  top: 50%;\n  left: 0;\n  transform: translate(0, -50%) rotateX(90deg);\n}\n.logo__cap--bottom {\n  bottom: 0;\n  right: 50%;\n  transform: translate(50%, 0) rotateY(90deg);\n  height: calc(var(--size) * 0.1975vmin);\n  width: calc(var(--size) * 0.1925vmin);\n}</code></pre>\n\n\n\n<p>We&#8217;ve capped the arc!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_BaJLjXQ\" src=\"//codepen.io/anon/embed/BaJLjXQ?height=450&amp;theme-id=1&amp;slug-hash=BaJLjXQ&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed BaJLjXQ\" title=\"CodePen Embed BaJLjXQ\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Throwing everything together, we have our DigitalOcean logo. This demo allows you to rotate it in different directions.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_rNpMemP\" src=\"//codepen.io/anon/embed/rNpMemP?height=450&amp;theme-id=1&amp;slug-hash=rNpMemP&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed rNpMemP\" title=\"CodePen Embed rNpMemP\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>But there’s still one more trick up our sleeve!</p>\n\n\n\n<h3>Adding a parallax effect to the logo</h3>\n\n\n\n<p>We&#8217;ve got our 3D DigitalOcean logo but it would be neat if it was interactive in some way. Back in November 2021, we covered <a href=\"https://css-tricks.com/parallax-powered-by-css-custom-properties/\">how to create a parallax effect with CSS custom properties</a>. Let&#8217;s use that same technique here, the idea being that the logo rotates and moves by following a user’s mouse cursor.</p>\n\n\n\n<p>We do need a dash of JavaScript so that we can update the custom properties we need for a coefficient that sets the logo’s movement along the X and Y-axes in the CSS. Those coefficients are calculated from a user’s pointer position. I&#8217;ll often use <a href=\"https://greensock.com\" rel=\"noopener\">GreenSock</a> so I can use <code>gsap.utils.mapRange</code>. But, here is a vanilla JavaScript version of it that implements <code>mapRange</code>:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const mapRange = (inputLower, inputUpper, outputLower, outputUpper) => {\n  const INPUT_RANGE = inputUpper - inputLower\n  const OUTPUT_RANGE = outputUpper - outputLower\n  return value => outputLower + (((value - inputLower) / INPUT_RANGE) * OUTPUT_RANGE || 0)\n}\n\nconst BOUNDS = 100      \nconst update = ({ x, y }) => {\n  const POS_X = mapRange(0, window.innerWidth, -BOUNDS, BOUNDS)(x)\n  const POS_Y = mapRange(0, window.innerHeight, -BOUNDS, BOUNDS)(y)\n  document.body.style.setProperty('--coefficient-x', POS_X)\n  document.body.style.setProperty('--coefficient-y', POS_Y)\n}\n\ndocument.addEventListener('pointermove', update)</code></pre>\n\n\n\n<p>The magic happens in CSS-land. This is one of the major benefits of using custom properties this way. JavaScript is telling CSS what&#8217;s happening with the interaction. But, it doesn&#8217;t care what CSS does with it. That&#8217;s a rad decoupling. I use this JavaScript snippet in so many of my demos for this very reason. We can create different experiences simply by updating the CSS.</p>\n\n\n\n<p>How do we do that? Use <code>calc()</code> and custom properties <a href=\"https://css-tricks.com/the-power-and-fun-of-scope-with-css-custom-properties/\">that are scoped</a> directly to the <code>.scene</code> element. Consider these updated styles for <code>.scene</code>:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.scene {\n  --rotation-y: 75deg;\n  --rotation-x: -14deg;\n  transform: translate3d(0, 0, 100vmin)\n    rotateX(-16deg)\n    rotateY(28deg)\n    rotateX(calc(var(--coefficient-y, 0) * var(--rotation-x, 0deg)))\n    rotateY(calc(var(--coefficient-x, 0) * var(--rotation-y, 0deg)));\n}</code></pre>\n\n\n\n<p>The makes the scene rotate on the X and Y-axes based on the user’s pointer movement. But we can adjust this behavior by tweaking the values for <code>--rotation-x</code> and <code>--rotation-y</code>.</p>\n\n\n\n<p>Each cuboid will move its own way. They are able to move on either the X, Y, or Z-axis. But, we only need to define one <code>transform</code>. Then we can use scoped custom properties to do the rest.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.logo__square {\n  transform: translate3d(\n    calc(min(0, var(--coefficient-x, 0) * var(--offset-x, 0)) * 1%),\n    calc((var(--coefficient-y) * var(--offset-y, 0)) * 1%),\n    calc((var(--coefficient-x) * var(--offset-z, 0)) * 1vmin)\n  );\n}\n.logo__square--one {\n  --offset-x: 50;\n  --offset-y: 10;\n  --offset-z: -2;\n}\n.logo__square--two {\n  --offset-x: -35;\n  --offset-y: -20;\n  --offset-z: 4;\n}\n.logo__square--three {\n  --offset-x: 25;\n  --offset-y: 30;\n  --offset-z: -6;\n}</code></pre>\n\n\n\n<p>That will give you something like this:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_abEmGVY\" src=\"//codepen.io/anon/embed/abEmGVY?height=450&amp;theme-id=1&amp;slug-hash=abEmGVY&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed abEmGVY\" title=\"CodePen Embed abEmGVY\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>And we can tweak these to our heart’s content until we get something we&#8217;re happy with!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ZEvpRBj\" src=\"//codepen.io/anon/embed/ZEvpRBj?height=450&amp;theme-id=1&amp;slug-hash=ZEvpRBj&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ZEvpRBj\" title=\"CodePen Embed ZEvpRBj\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Adding an intro animation to the mix</h3>\n\n\n\n<p>OK, I fibbed a bit and have one final (I promise!) way we can enhance our work. What if we had some sort of intro animation? How about a wave or something that washes across and reveals the logo?</p>\n\n\n\n<p>We could do this with the pseudo-elements of the <code>body</code> element:</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">:root {\n  --hue: 215;\n  --initial-delay: 1;\n  --wave-speed: 2;\n}\n\nbody:after,\nbody:before {\n  content: '';\n  position: absolute;\n  height: 100vh;\n  width: 100vw;\n  background: hsl(var(--hue), 100%, calc(var(--lightness, 50) * 1%));\n  transform: translate(100%, 0);\n  animation-name: wave;\n  animation-duration: calc(var(--wave-speed) * 1s);\n  animation-delay: calc(var(--initial-delay) * 1s);\n  animation-timing-function: ease-in;\n}\nbody:before {\n  --lightness: 85;\n  animation-timing-function: ease-out;\n}\n@keyframes wave {\n  from {\n    transform: translate(-100%, 0);\n  }\n}</code></pre>\n\n\n\n<p>Now, the idea is that the DigitalOcean logo is hidden until the wave washes over the top of it. For this effect, we&#8217;re going to animate our 3D elements <code>from</code> an opacity of <code>0</code>. And we&#8217;re going to animate all the sides to our 3D elements from a <code>brightness</code> of <code>1</code> to reveal the logo. Because the wave color matches that of the logo, we won&#8217;t see it fade in. Also, using <code>animation-fill-mode: both</code> means that our elements will extend the styling of our keyframes in both directions.</p>\n\n\n\n<p>This requires some form of animation timeline. And this is where custom properties come into play. We can use the duration of our animations to calculate the delays of others. We looked at this in my <a href=\"https://css-tricks.com/how-to-make-a-pure-css-3d-package-toggle/\">&#8220;How to Make a Pure CSS 3D Package Toggle&#8221;</a> and <a href=\"https://css-tricks.com/animated-matryoshka-dolls-in-css/\">&#8220;Animated Matryoshka Dolls in CSS&#8221;</a> articles.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">:root {\n  --hue: 215;\n  --initial-delay: 1;\n  --wave-speed: 2;\n  --fade-speed: 0.5;\n  --filter-speed: 1;\n}\n\n.cylinder__segment,\n.cuboid__side,\n.logo__cap {\n  animation-name: fade-in, filter-in;\n  animation-duration: calc(var(--fade-speed) * 1s),\n    calc(var(--filter-speed) * 1s);\n  animation-delay: calc((var(--initial-delay) + var(--wave-speed)) * 0.75s),\n    calc((var(--initial-delay) + var(--wave-speed)) * 1.15s);\n  animation-fill-mode: both;\n}\n\n@keyframes filter-in {\n  from {\n    filter: brightness(1);\n  }\n}\n\n@keyframes fade-in {\n  from {\n    opacity: 0;\n  }\n}</code></pre>\n\n\n\n<p>How do we get the timing right? A little tinkering and making use of the &#8220;Animations Inspector&#8221; in Chrome&#8217;s DevTool goes a long ways. Try adjusting the timings in this demo:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ExogpmK\" src=\"//codepen.io/anon/embed/ExogpmK?height=450&amp;theme-id=1&amp;slug-hash=ExogpmK&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ExogpmK\" title=\"CodePen Embed ExogpmK\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>You may find that the fade timing is unnecessary if you want the logo to be there once the wave has passed. In that case, try setting the fade to <code>0</code>. And in particular, experiment with the <code>filter</code> and <code>fade</code> coefficients. They relate to the <code>0.75s</code> and <code>1.15s</code> from the code above. It’s worth adjusting things and having a play in <a href=\"https://developer.chrome.com/docs/devtools/css/animations/\" rel=\"noopener\">Chrome’s Animation Inspector</a> to see how things time in.</p>\n\n\n\n<h3>That&#8217;s it!</h3>\n\n\n\n<p>Putting it all together, we have this neat intro for our 3D DigitalOcean logo!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ZEvpjoG\" src=\"//codepen.io/anon/embed/ZEvpjoG?height=450&amp;theme-id=1&amp;slug-hash=ZEvpjoG&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ZEvpjoG\" title=\"CodePen Embed ZEvpjoG\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>And, of course, this only one approach to create the DigitalOcean logo in 3D with CSS. If you see other possibilities or perhaps something that can be optimized further, drop a link to your demo in the comments!</p>\n\n\n\n<p>Congratulations, again, to the CSS-Tricks team and DigitalOcean for their new partnership. I’m excited to see where things go with the acquisition. One thing is for sure: CSS-Tricks will continue to inspire and produce fantastic content for the community. &#x1f60e;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/\">Creating the DigitalOcean Logo in 3D With CSS</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/creating-the-digitalocean-logo-in-3d-with-css/feed/"
        ],
        "slash:comments": [
            "1"
        ],
        "post-id": [
            {
                "_": "365447",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "Howdy y’all! Unless you’ve been living under a rock (and maybe even then),\nyou’ve undoubtedly heard the news that CSS-Tricks, was acquired by DigitalOcean\n[https://css-tricks.com/css-tricks-is-joining...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "A Step-by-Step TypeScript Tutorial for Beginners"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss\"\n              title=\"A Step-by-Step TypeScript Tutorial for Beginners\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial.jpg\"\n        alt=\"A Step by Step TypeScript Tutorial for Beginners\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            In this beginner-friendly TypeScript tutorial, you'll learn why it's useful to add types to JavaScript, and how to take advantage of them.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss\">A Step-by-Step TypeScript Tutorial for Beginners</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/typescript-tutorial-for-beginners/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207577",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Jack Franklin"
        ],
        "pubDate": [
            "Wed, 27 Oct 2021 02:00:21 GMT"
        ],
        "plainDescription": "A Step by Step TypeScript Tutorial for Beginners\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1635316165typescript-tutorial.jpg]\n[https://www.sitepoint.com/typescript-tutorial-for-beginne...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Fetch Data in Svelte"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss\"\n              title=\"How to Fetch Data in Svelte\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte.jpg\"\n        alt=\"How to Fetch Data in Svelte\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Need to consume and render data from an API in a Svelte application? Learn how to consume a REST API using the Fetch API vs the Axios client.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss\">How to Fetch Data in Svelte</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=209307",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "David Adeneye"
        ],
        "pubDate": [
            "Mon, 15 Nov 2021 02:00:00 GMT"
        ],
        "plainDescription": "How to Fetch Data in Svelte\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636688238rest-api-svelte.jpg]\n[https://www.sitepoint.com/svelte-fetch-data/?utm_source=rss] Need to consume\nand r...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "8 Multipurpose WordPress Themes to Use in 2022"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/04/26/8-multipurpose-wordpress-themes-to-use-in-2022/"
        ],
        "dc:creator": [
            "advertiser"
        ],
        "pubDate": [
            "Tue, 26 Apr 2022 14:33:02 +0000"
        ],
        "category": [
            "Articles",
            "multipurpose-theme",
            "wordpress"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63420",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A selection of the most popular and flexible multipurpose WordPress themes for building almost any type of website.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/26/8-multipurpose-wordpress-themes-to-use-in-2022/\">8 Multipurpose WordPress Themes to Use in 2022</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Are you looking for a multipurpose WordPress theme that will best serve your website-building objectives?</p>\n\n\n\n<p>You are not the only one. Multipurpose themes tend to be top sellers in that they give users the tools and flexibility needed to build almost any type of website with a minimum of effort, which naturally contributes to their popularity.</p>\n\n\n\n<p>Just don’t settle for the first multipurpose theme you come across. Some are poorly coded, although they are definitely in the minority. When you also take into account the fact that not every potential user knows what to look for, the best approach to would be to follow the recommendations of those who are in a position to advise you as to which multipurpose themes would serve you best.</p>\n\n\n\n<p>With that in mind, here are 8 top multipurpose WordPress theme picks for 2022.</p>\n\n\n\n<h2><strong>1. </strong><a rel=\"sponsored nofollow\" href=\"http://be-theme.com/wordpress-theme-for-web-designers?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\"><strong>BeTheme: Responsive Multipurpose WordPress &amp; WooCommerce Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"http://be-theme.com/wordpress-theme-for-web-designers?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-800x332.jpeg\" alt=\"\" class=\"wp-image-63423\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>In terms of size and performance BeTheme is the grandaddy of them all. More than a few of its 250,000+ customers would be happy to tell you how this multipurpose WordPress theme’s 40+ core features have enabled them to create virtually any website type in record time (according to GTMetrix).</p>\n\n\n\n<p>Key features:</p>\n\n\n\n<ul><li>Be’s library of 650+ customizable pre-built websites</li><li>The new Live Builder – The fastest page builder on the market with its 3000+ importable pages, 100+ pre-built blocks you can access with a single click, and its growing library of 80+ design elements you can add, edit, and move around as you like.</li><li>Be Builder Woo &#8211; with its customer-centric shopping features that will enable you to create any shop or single product layout you have in mind.</li></ul>\n\n\n\n<p>As powerful as the above features are, they are just the tip of the iceberg. Grab a cup of coffee, click on the banner, checkout Be Builder and Be’s other core features, and you’ll get a good idea of what BeTheme can do for you.</p>\n\n\n\n<h2><strong>2. </strong><a rel=\"sponsored nofollow\" href=\"https://total.wpexplorer.com/?utm_source=baw&amp;utm_medium=blog&amp;utm_campaign=10themes\"><strong>Total WordPress Theme</strong></a><strong>&nbsp;</strong></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://total.wpexplorer.com/?utm_source=baw&amp;utm_medium=blog&amp;utm_campaign=10themes\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1-800x332.jpeg\" alt=\"\" class=\"wp-image-63424\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>Trying to satisfy a fussy, demanding client does not have to be all that difficult if you have a multipurpose theme like Total to work with. Total was designed with ease in website creation in mind.</p>\n\n\n\n<p>Total’s design tools, aids, and options make it happen.</p>\n\n\n\n<ul><li>Each of Total’s 50+ ready-to-use demos, 95+ section templates, 8 header styles, and 75+ post entry cards is designed to help you get any project off to a quick start.</li><li>Want to start from scratch? Total’s 100+ builder elements, and 500+ customizer settings together with the front-end drag and drop WPBakery page builder will speed things up as well.</li><li>It’s not just the styling options than make Total a wise choice. This multipurpose theme is optimized for speed, it’s compatible with the most popular plugins, and it’s a developer friendly as well.</li></ul>\n\n\n\n<p>Click on the banner to learn more about this high-performance theme.</p>\n\n\n\n<h2><strong>3. </strong><a rel=\"sponsored nofollow\" href=\"https://woodmart.xtemos.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\"><strong>WoodMart</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://woodmart.xtemos.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-2-800x332.jpeg\" alt=\"\" class=\"wp-image-63425\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-2-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-2-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-2-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-2.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>Woodmart enjoys the distinction of being ThemeForest’s best-rated eCommerce theme. It’s loaded with features you won’t find in most other eCommerce-oriented themes, features that allow virtually unlimited customizations and include a drag and drop builder that will help you keep your workflow to a minimum.</p>\n\n\n\n<p>Key features include –</p>\n\n\n\n<ul><li>75+ premade websites, a 400+ templates, and 15 special pages</li><li>Woodmart’s intuitive setup wizard</li><li>A variety of product page display options</li><li>A full AJAX shop plus a comprehensive collection of AJAX shop filters&nbsp;</li></ul>\n\n\n\n<p>If you are not sure what you want your finished product to look like, WoodMart’s template library will serve admirably as a source for rapid prototyping items.&nbsp;</p>\n\n\n\n<p>Click on the banner to visit the site and see for yourself why Woodmart might be the right choice for you.</p>\n\n\n\n<h2><strong>4. </strong><a rel=\"sponsored nofollow\" href=\"https://undsgn.com/uncode/?utm_source=adv&amp;utm_medium=baw&amp;utm_campaign=multipurposewp22a\"><strong>Uncode – Creative &amp; WooCommerce WordPress Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://undsgn.com/uncode/?utm_source=adv&amp;utm_medium=baw&amp;utm_campaign=multipurposewp22a\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-3-800x332.jpeg\" alt=\"\" class=\"wp-image-63426\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-3-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-3-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-3-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-3.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>You’ll experience a level of superior performance that can only be achieved through great attention to detail when you choose a leading multipurpose WordPress theme like Uncode.</p>\n\n\n\n<ul><li>Performance that has been experienced by more than 90.000 buyers.</li><li>Performance that has made Uncode an Envato best seller with its souped up page builder, advanced WooCommerce capabilities, and Wireframes plugin with its 550+ section templates.</li></ul>\n\n\n\n<p>Uncode is ideal for building blog, magazine, and portfolio sites.</p>\n\n\n\n<h2><strong>5. </strong><a rel=\"sponsored nofollow\" href=\"https://codex-themes.com/thegem/meta-splash/?utm_source=listing&amp;utm_medium=bawmedia&amp;utm_campaign=top-multipurpose-2022\"><strong>TheGem – Creative Multi-Purpose &amp; WooCommerce WordPress Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://codex-themes.com/thegem/meta-splash/?utm_source=listing&amp;utm_medium=bawmedia&amp;utm_campaign=top-multipurpose-2022\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-4-800x332.jpeg\" alt=\"\" class=\"wp-image-63427\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-4-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-4-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-4-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-4.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>What does The Gem have to offer?</p>\n\n\n\n<ul><li>How about its unique TheGem Blocks tool with 300+ premium pre-designed section templates to speed up design workflow?</li><li>Or the flexible templates builder for building headers, footers, products etc. with Elementor or WPBakery?</li><li>Not to forget a rich collection of WooCommerce templates and tools for building online shops.</li></ul>\n\n\n\n<p>There’s plenty more included in this Swiss Army knife of multipurpose WordPress themes.</p>\n\n\n\n<h2><strong>6. </strong><a rel=\"sponsored nofollow\" href=\"https://avada-theme.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\"><strong>Avada Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large wp-img-border\"><a href=\"https://avada-theme.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-5-800x332.jpeg\" alt=\"\" class=\"wp-image-63428\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-5-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-5-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-5-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-5.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>Sales figures mean a lot when you’re looking for a top of the line WordPress theme. When you choose Avada you’ve chosen the #1 best-selling theme of all time.</p>\n\n\n\n<ul><li>Avada’s Fusion Core features an assemblage of powerful website building tools that include the Fusion Builder, Fusion Slider, and a Shortcode Generator</li><li>40+ customizable demos, 50+ design elements, and Fusion Page and Theme options are also featured.</li></ul>\n\n\n\n<p>Avada is 100% responsive, speed optimized, and WooCommerce ready.</p>\n\n\n\n<h2><strong>7. </strong><a rel=\"sponsored nofollow\" href=\"https://bit.ly/3JH7Qck\"><strong>Impeka – Creative Multipurpose WordPress Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://bit.ly/3JH7Qck\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-6-800x332.jpeg\" alt=\"\" class=\"wp-image-63429\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-6-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-6-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-6-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-6.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>The name says it all. This impeccably designed WordPress theme is easy for beginners to use yet features those things that advanced designers require to create websites that match their expectations.</p>\n\n\n\n<ul><li>Impeka-built websites are fast, responsive, SEO optimized, and WooCommerce friendly</li><li>Impeka users have Elementor, the Gutenberg editor, and an enhanced WPBakery page builder to choose from</li></ul>\n\n\n\n<p>Coding and design skills are not required.</p>\n\n\n\n<h2><strong>8. </strong><a rel=\"sponsored nofollow\" href=\"https://litho.themezaa.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\"><strong>Litho – Multipurpose Elementor WordPress Theme</strong></a></h2>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://litho.themezaa.com/?utm_source=baw&amp;utm_medium=content&amp;utm_campaign=multipurposewp22a\" rel=\"sponsored nofollow\"><img loading=\"lazy\" width=\"800\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-7-800x332.jpeg\" alt=\"\" class=\"wp-image-63430\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-7-800x332.jpeg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-7-400x166.jpeg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-7-768x319.jpeg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-7.jpeg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a></figure>\n\n\n\n<p>This modern, creative, and highly customizable Elementor WordPress theme can be used to build any website type you can envision.</p>\n\n\n\n<ul><li>It’s ideal for creating any type of business niche, portfolio, blog, or eCommerce site</li><li>A Slider Revolution plugin is included together with a host of home pages, creative elements, and templates</li><li>Litho-created websites are fast, responsive, and SEO friendly</li></ul>\n\n\n\n<p>The online documentation is excellent, and the customer support is fantastic.</p>\n\n\n\n<p>Our intent is to help you do away with any fear and trepidation you may be experiencing in your attempts to find a great multipurpose theme. A theme that not only won’t let you down but will actually be fun and easy to work with.</p>\n\n\n\n<p>You don’t have to settle for a multipurpose WordPress theme that “looks like” it might be a good choice.</p>\n\n\n\n<p>If you’re not sure what you should be looking for you can relax. Any of these 8 top multipurpose WordPress themes will serve you perfectly well in 2022.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/26/8-multipurpose-wordpress-themes-to-use-in-2022/\">8 Multipurpose WordPress Themes to Use in 2022</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A selection of the most popular and flexible multipurpose WordPress themes for\nbuilding almost any type of website.\n\nThe post 8 Multipurpose WordPress Themes to Use in 2022\n[https://tympanus.net/codro...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Build Interactive Gantt Charts with Airtable, Gatsby and React"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss\"\n              title=\"Build Interactive Gantt Charts with Airtable, Gatsby and React\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby.jpg\"\n        alt=\"Build Interactive Gantt Charts with Airtable, Gatsby and React\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to develop an app that connects to data from a spreadsheet app or other data sources, using Gatsby, React and Airtable.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss\">Build Interactive Gantt Charts with Airtable, Gatsby and React</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/build-interactive-gantt-charts-with-airtable-gatsby-and-react/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=209321",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "JavaScript",
            "Low Code"
        ],
        "dc:creator": [
            "Anna Prenzel"
        ],
        "pubDate": [
            "Tue, 16 Nov 2021 02:00:00 GMT"
        ],
        "plainDescription": "Build Interactive Gantt Charts with Airtable, Gatsby and React\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636869530task-management-gantt-react-gatsby.jpg]\n[https://www.sitepoint.com/bu...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Nathan Smith"
        ],
        "title": [
            "CTA Modal: How To Build A Web Component"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/cta-modal-build-web-component/"
        ],
        "pubDate": [
            "Thu, 28 Apr 2022 09:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/cta-modal-build-web-component/"
        ],
        "description": [
            "In this article, Nathan Smith explains how to create modal dialog windows with rich interaction that will only require authoring HTML in order to be used. They are based on Web Components that are currently supported by every major browser."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/cta-modal-build-web-component/\" />\n              <title>CTA Modal: How To Build A Web Component</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>CTA Modal: How To Build A Web Component</h1>\n                  \n                    \n                    <address>Nathan Smith</address>\n                  \n                  <time datetime=\"2022-04-28T09:30:00&#43;00:00\" class=\"op-published\">2022-04-28T09:30:00+00:00</time>\n                  <time datetime=\"2022-04-28T09:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>I have a confession to make &mdash; I am not overly fond of modal dialogs (or just “modals” for short). “Hate” would be too strong a word to use, but let’s say that nothing is more of a turnoff when starting to read an article than being “slapped in the face” with a modal window before I have even begun to comprehend what I am looking at.</p>\n\n<p>Or, if I could <a href=\"https://twitter.com/andybudd/status/1477634654429663237\">quote Andy Budd</a>:</p>\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">A typical website visit in 2022<br><br>1. Figure out how to decline all but essential cookies<br>2. Close the support widget asking if I need help<br>3. Stop the auto-playing video<br>4. Close the “subscribe to our newsletter” pop-up<br>5. Try and remember why I came here in the first place</p>&mdash; Andy Budd (@andybudd) <a href=\"https://twitter.com/andybudd/status/1477634654429663237?ref_src=twsrc%5Etfw\">January 2, 2022</a></blockquote>\n\n<p>That said, modals are <strong>everywhere</strong> among us. They are a user interface paradigm that we cannot simply disinvent. When used <em>tastefully</em> and <em>wisely</em>, I dare say they can even help add more context to a document or to an app.</p>\n\n<p>Throughout my career, I have written my fair share of modals. I have built bespoke implementations using vanilla JavaScript, jQuery, and more recently &mdash; <a href=\"https://reactjs.org/\">React</a>. If you have ever struggled to build a modal, then you will know what I mean when I say: It is easy to get them wrong. Not only from a visual standpoint but there are plenty of tricky user interactions that need to be accounted for as well.</p>\n\n<p>I am the type of person who likes to “go deep” on topics that vex me &mdash; especially if I find the topic resurfacing &mdash; hopefully in an effort to avoid revisiting them ever again. When I started to get more into <a href=\"https://developer.mozilla.org/en-US/docs/Web/Web_Components\">Web Components</a>, I had an “a-ha!” moment. Now that Web Components are widely supported by every major browser (RIP, <a href=\"https://en.wikipedia.org/wiki/Internet_Explorer_11\">IE11</a>), this opens up a whole new door of opportunity. I thought to myself:</p>\n\n<blockquote>“What if it were possible to build a modal that, as a developer authoring a page or app, I would not have to fuss with any additional JavaScript config?”</blockquote>\n\n<p>Write once and run everywhere, so to speak, or at least that was my lofty aspiration. Good news. It is indeed possible to build a modal with rich interaction that only requires authoring HTML to use.</p>\n\n<p><strong>Note:</strong> <em>In order to benefit from this article and code examples you will need some basic familiarity with HTML, CSS, and JavaScript.</em></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"514\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot of the CTA Modal dialog displaying a form.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      CTA Modal &mdash; displaying a form. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/cc511cb3-91ff-4aac-8034-859479befd27/3-cta-modal-build-web-component.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"501\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot of the CTA Modal dialog displaying a scrollable piece of content.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      CTA Modal &mdash; scrollable content. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/401ad39a-7403-4b76-83ec-cc303494ae27/1-cta-modal-build-web-component.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"before-we-even-begin\">Before We Even Begin</h3>\n\n<p>If you are tight on time and just want to see the finished product, check it out here:</p>\n\n<ul>\n<li>CTA Modal <a href=\"https://host.sonspring.com/cta-modal\">Demo page</a></li>\n<li>CTA Modal <a href=\"https://github.com/nathansmith/cta-modal\">Git repo</a></li>\n</ul>\n\n<h2 id=\"use-the-platform\">Use The Platform</h2>\n\n<p>Now that we have covered the “why” of scratching this particular itch, throughout the rest of this article I will explain the “how” of building it.</p>\n\n<p>First, a quick crash course on Web Components. They are bundled snippets of HTML, CSS, and JavaScript that encapsulate scope. Meaning, no styles from outside of a component will affect within, nor vice versa. Think of it like a hermetically sealed “<a href=\"https://en.wikipedia.org/wiki/Cleanroom\">clean room</a>” of UI design.</p>\n\n<p>At first blush, this may seem nonsensical. Why would we want a chunk of UI that we cannot control externally via CSS? Hang onto that thought, because we will come back to it soon.</p>\n\n<p>The best explanation is reusability. Building a component in this manner means we are not beholden to any particular JS framework <em>du jour</em>. One common phrase that gets bandied about in conversations around web standards is “<a href=\"https://timkadlec.com/remembers/2019-10-21-using-the-platform/\">use the platform</a>.” Now more than ever, the platform itself has superb <a href=\"https://www.ravedigital.agency/blog/cross-browser-compatibility/\">cross-browser support</a>.</p>\n\n<h2 id=\"deep-dive\">Deep Dive</h2>\n\n<p><em>For reference, I will be referring to this code example &mdash; <a href=\"https://github.com/nathansmith/cta-modal/blob/main/src/assets/ts/cta-modal.ts\"><code>cta-modal.ts</code></a>.</em></p>\n\n<p><strong>Note:</strong> <em>I am using <a href=\"https://www.typescriptlang.org/\">TypeScript</a> here, but you absolutely do</em> <strong><em>not</em></strong> <em>need any additional tooling to create a Web Component. In fact, I wrote my initial proof-of-concept in vanilla JS. I added TypeScript later, to bolster confidence in others using it as an NPM package.</em></p>\n\n<p>The <code>cta-modal.ts</code> file is chunked apart into several sections:</p>\n\n<ol>\n<li><a href=\"#conditional-wrapper\">Conditional wrapper</a>;</li>\n<li>Constants:\n\n<ul>\n<li><a href=\"#reusable-variables\">Reusable variables</a>,</li>\n<li><a href=\"#component-styles\">Component styles</a>,</li>\n<li><a href=\"#component-markup\">Component markup</a>;</li>\n</ul></li>\n<li><code>CtaModal</code> class:\n\n<ul>\n<li><a href=\"#constructor\">Constructor</a>,</li>\n<li><a href=\"#binding-this-context\">Binding <code>this</code> context</a>,</li>\n<li><a href=\"#lifecycle-methods\">Lifecycle methods</a>,</li>\n<li><a href=\"#adding-and-removing-events\">Adding and removing events</a>,</li>\n<li><a href=\"#detecting-attribute-changes\">Detecting attribute changes</a>,</li>\n<li><a href=\"#focusing-specific-elements\">Focusing specific elements</a>,</li>\n<li><a href=\"#detecting-outside-modal\">Detecting “outside” modal</a>,</li>\n<li><a href=\"#detecting-motion-preference\">Detecting motion preference</a>,</li>\n<li><a href=\"#toggling-modal-show-hide\">Toggling modal show/hide</a>,</li>\n<li>Handle event: <a href=\"#handle-event-click-overlay\">click overlay</a>,</li>\n<li>Handle event: <a href=\"#handle-event-click-toggle\">click toggle</a>,</li>\n<li>Handle event: <a href=\"#handle-event-focus-element\">focus element</a>,</li>\n<li>Handle event: <a href=\"#handle-event-keyboard\">keyboard</a>;</li>\n</ul></li>\n<li><a href=\"#dom-loaded-callback\">DOM loaded callback</a>:\n\n<ul>\n<li>Waits for the page to be ready,</li>\n<li>Registers the <code>&lt;cta-modal&gt;</code> tag.\n\n<br /></li>\n</ul></li>\n</ol>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><p>Meet <a data-instant href=\"/the-smashing-newsletter/\"><strong>Smashing Email Newsletter</strong></a> with useful tips on front-end, design &amp; UX. Subscribe and <strong>get “Smart Interface Design Checklists”</strong> &mdash; a <strong>free PDF deck</strong> with 150+ questions to ask yourself when designing and building almost <em>anything</em>.</p><div><section class=\"nlbf\"><form action=\"//smashingmagazine.us1.list-manage.com/subscribe/post?u=16b832d9ad4b28edf261f34df&amp;id=a1666656e0\" method=\"post\"><div class=\"nlbwrapper\"><label for=\"mce-EMAIL-hp\" class=\"sr-only\">Your (smashing) email</label><div class=\"nlbgroup\"><input type=\"email\" name=\"EMAIL\" class=\"nlbf-email\" id=\"mce-EMAIL-hp\" placeholder=\"Your email\">\n<input type=\"submit\" value=\"Meow!\" name=\"subscribe\" class=\"nlbf-button\"></div></div></form><style>.c-garfield-the-cat .nlbwrapper{margin-bottom: 0;}.nlbf{display:flex;padding-bottom:.25em;padding-top:.5em;text-align:center;letter-spacing:-.5px;color:#fff;font-size:1.15em}.nlbgroup:hover{box-shadow:0 1px 7px -5px rgba(50,50,93,.25),0 3px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025)}.nlbf .nlbf-button,.nlbf .nlbf-email{flex-grow:1;flex-shrink:0;width:auto;margin:0;padding:.75em 1em;border:0;border-radius:11px;background:#fff;font-size:1em;box-shadow:none}.promo-box .nlbf-button:focus,.promo-box input.nlbf-email:active,.promo-box input.nlbf-email:focus{box-shadow:none}.nlbf-button:-ms-input-placeholder,.nlbf-email:-ms-input-placeholder{color:#777;font-style:italic}.nlbf-button::-webkit-input-placeholder,.nlbf-email::-webkit-input-placeholder{color:#777;font-style:italic}.nlbf-button:-ms-input-placeholder,.nlbf-button::-moz-placeholder,.nlbf-button::placeholder,.nlbf-email:-ms-input-placeholder,.nlbf-email::-moz-placeholder,.nlbf-email::placeholder{color:#777;font-style:italic}.nlbf .nlbf-button{transition:all .2s ease-in-out;color:#fff;background-color:#0168b8;font-weight:700;box-shadow:0 1px 1px rgba(0,0,0,.3);width:100%;border:0;border-left:1px solid #ddd;flex:2;border-top-left-radius:0;border-bottom-left-radius:0}.nlbf .nlbf-email{border-top-right-radius:0;border-bottom-right-radius:0;width:100%;flex:4;min-width:150px}@media all and (max-width:650px){.nlbf .nlbgroup{flex-wrap:wrap;box-shadow:none}.nlbf .nlbf-button,.nlbf .nlbf-email{border-radius:11px;border-left:none}.nlbf .nlbf-email{box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);min-width:100%}.nlbf .nlbf-button{margin-top:1em;box-shadow:0 1px 1px rgba(0,0,0,.5)}}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus,.nlbf .nlbf-button:hover{cursor:pointer;color:#fff;background-color:#0168b8;border-color:#dadada;box-shadow:0 1px 1px rgba(0,0,0,.3)}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus{outline:0!important;text-shadow:1px 1px 1px rgba(0,0,0,.3);box-shadow:inset 0 3px 3px rgba(0,0,0,.3)}.nlbgroup{display:flex;box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);border-radius:11px;transition:box-shadow .2s ease-in-out}.nlbwrapper{display:flex;flex-direction:column;justify-content:center}.nlbf form{width:100%}.nlbf .nlbgroup{margin:0}.nlbcaption{font-size:.9em;line-height:1.5em;color:#fff;border-radius:11px;padding:.5em 1em;display:inline-block;background-color:#0067b859;text-shadow:1px 1px 1px rgba(0,0,0,.3)}.wf-loaded-stage2 .nlbf .nlbf-button{font-family:Mija}.mts{margin-top: 5px !important;}.mbn{margin-bottom: 0 !important;}</style></section><p class=\"mts mbn\"><small class=\"promo-box__footer mtm block grey\"><em>Once a week. Useful tips on <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">front-end &amp; UX</a>. Trusted by 190.000 friendly folks.</em></small></p></div></p>\n</div>\n</div>\n<div class=\"feature-panel-right-col\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-firechat.svg\"\n    alt=\"Feature Panel\"\n    width=\"310\"\n    height=\"400\"\n/>\n\n</div>\n\n<p></div>\n</aside>\n</div></p>\n\n<h3 id=\"conditional-wrapper\">Conditional Wrapper</h3>\n\n<p>There is a single, top level <code>if</code> that wraps the entirety of the file’s code:</p>\n\n<pre><code class=\"language-javascript\">// ===========================\n// START: if \"customElements\".\n// ===========================\n\nif ('customElements' in window) {\n  /&#42; NOTE: LINES REMOVED, FOR BREVITY. &#42;/\n}\n\n// =========================\n// END: if \"customElements\".\n// =========================</code></pre>\n\n<p>The reason for this is twofold. We want to ensure that there is <a href=\"https://caniuse.com/custom-elementsv1\">browser support</a> for <code>window.customElements</code>. If so, this gives us a handy way to maintain variable scope. Meaning, that when declaring variables via <code>const</code> or <code>let</code>, they do not “leak” outside of the <code>if {…}</code> block. Whereas using an old school <code>var</code> would be problematic, inadvertently creating several global variables.</p>\n\n<h3 id=\"reusable-variables\">Reusable Variables</h3>\n\n<p><strong>Note:</strong> <em>A JavaScript <code>class Foo {…}</code> differs from an HTML or CSS <code>class=&quot;foo&quot;</code>.</em></p>\n\n<p>Think of it simply as: “A group of functions, bundled together.”</p>\n\n<p>This section of the file contains <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Primitive\">primitive</a> values that I intend to reuse throughout my JS <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\">class</a> declaration. I will call out a few of them as being particularly interesting.</p>\n\n<pre><code class=\"language-javascript\">// ==========\n// Constants.\n// ==========\n\n/&#42; NOTE: LINES REMOVED, FOR BREVITY. &#42;/\n\nconst ANIMATION&#95;DURATION = 250;\nconst DATA&#95;HIDE = 'data-cta-modal-hide';\nconst DATA&#95;SHOW = 'data-cta-modal-show';\nconst PREFERS&#95;REDUCED&#95;MOTION = '(prefers-reduced-motion: reduce)';\n\nconst FOCUSABLE&#95;SELECTORS = [\n  '[contenteditable]',\n  '[tabindex=\"0\"]:not([disabled])',\n  'a[href]',\n  'audio[controls]',\n  'button:not([disabled])',\n  'iframe',\n  \"input:not([disabled]):not([type='hidden'])\",\n  'select:not([disabled])',\n  'summary',\n  'textarea:not([disabled])',\n  'video[controls]',\n].join(',');</code></pre>\n\n<ul>\n<li><code>ANIMATION_DURATION</code><br />\nSpecifies how long my CSS animations will take. I also reuse this later within a <code>setTimeout</code> to keep my CSS and JS in sync. It is set to <code>250</code> milliseconds, which is a quarter of a second.<br />\nWhile CSS allows us to specify <code>animation-duration</code> in whole seconds (or milliseconds), JS uses increments of milliseconds. Going with this value allows me to use it for both.</li>\n<li><code>DATA_SHOW</code> and <code>DATA_HIDE</code><br />\nThese are strings for the HTML data attributes <code>'data-cta-modal-show'</code> and <code>'data-cta-modal-hide'</code> that are used to control the show/hide of modal, as well as adjust animation timing in CSS. They are used later in conjunction with <code>ANIMATION_DURATION</code>.</li>\n<li><code>PREFERS_REDUCED_MOTION</code><br />\nA media query that determines whether or not a user has set their operating system’s preference to <code>reduce</code> for <code>prefers-reduced-motion</code>. I look at this value in both CSS and JS to determine whether to turn off animations.</li>\n<li><code>FOCUSABLE_SELECTORS</code><br />\nContains CSS selectors for all elements that could be considered focusable within a modal. It is used later more than once, via <code>querySelectorAll</code>. I have declared it here to help with readability, rather than adding clutter to a function body.</li>\n</ul>\n\n<p>It equates to this string:</p>\n\n<div class=\"break-out\">\n <pre><code class=\"language-markup\">[contenteditable], [tabindex=\"0\"]:not([disabled]), a[href], audio[controls], button:not([disabled]), iframe, input:not([disabled]):not([type='hidden']), select:not([disabled]), summary, textarea:not([disabled]), video[controls]</code></pre>\n</div>\n  \n\n<p>Yuck, right!? You can see why I wanted to break that into multiple lines.</p>\n\n<p>As an astute reader, you may have noticed <code>type='hidden'</code> and <code>tabindex=&quot;0&quot;</code> are using different quotation marks. That is purposeful, and we will revisit the reasoning later on.</p>\n\n<h3 id=\"component-styles\">Component Styles</h3>\n\n<p>This section contains a multiline string with a <code>&lt;style&gt;</code> tag. As mentioned before, styles contained within a Web Component do not affect the rest of the page. It is worth noting how I am using embedded variables <code>${etc}</code> via string interpolation.</p>\n\n<ul>\n<li>We reference our variable <code>PREFERS_REDUCED_MOTION</code> to forcibly set animations to <code>none</code> for users who prefer reduced motion.</li>\n<li>We reference <code>DATA_SHOW</code> and <code>DATA_HIDE</code> along with <code>ANIMATION_DURATION</code> to allow shared control over CSS animations. Note the use of the <code>ms</code> suffix for milliseconds, since that is the lingua franca of CSS and JS.</li>\n</ul>\n\n<pre><code class=\"language-javascript\">// ======\n// Style.\n// ======\n\nconst STYLE = `\n  &lt;style&gt;\n    /&#42; NOTE: LINES REMOVED, FOR BREVITY. &#42;/\n\n    @media ${PREFERS_REDUCED_MOTION} {\n      &#42;,\n      &#42;:after,\n      &#42;:before {\n        animation: none !important;\n        transition: none !important;\n      }\n    }\n\n    [${DATA&#95;SHOW}='true'] .cta-modal&#95;&#95;overlay {\n      animation-duration: ${ANIMATION&#95;DURATION}ms;\n      animation-name: SHOW-OVERLAY;\n    }\n\n    [${DATA&#95;SHOW}='true'] .cta-modal&#95;&#95;dialog {\n      animation-duration: ${ANIMATION&#95;DURATION}ms;\n      animation-name: SHOW-DIALOG;\n    }\n\n    [${DATA&#95;HIDE}='true'] .cta-modal&#95;&#95;overlay {\n      animation-duration: ${ANIMATION_DURATION}ms;\n      animation-name: HIDE-OVERLAY;\n      opacity: 0;\n    }\n\n    [${DATA_HIDE}='true'] .cta-modal&#95;&#95;dialog {\n      animation-duration: ${ANIMATION_DURATION}ms;\n      animation-name: HIDE-DIALOG;\n      transform: scale(0.95);\n    }\n  &lt;/style&gt;\n`;</code></pre>\n\n<h3 id=\"component-markup\">Component Markup</h3>\n\n<p>The markup for the modal is the most straightforward part. These are the essential aspects that make up the modal:</p>\n\n<ul>\n<li>slots,</li>\n<li>scrollable area,</li>\n<li>focus traps,</li>\n<li>semi-transparent overlay,</li>\n<li>dialog window,</li>\n<li>close button.</li>\n</ul>\n\n<p>When making use of a <code>&lt;cta-modal&gt;</code> tag in one’s page, there are two insertion points for content. Placing elements inside these areas cause them to appear as part of the modal:</p>\n\n<ul>\n<li><code>&lt;div slot=&quot;button&quot;&gt;</code> maps to <code>&lt;slot name='button'&gt;</code>,</li>\n<li><code>&lt;div slot=&quot;modal&quot;&gt;</code> maps to <code>&lt;slot name='modal'&gt;</code>.</li>\n</ul>\n\n<p>You might be wondering what “focus traps” are, and why we need them. These exist to snag focus when a user attempts to tab forwards (or backwards) outside of the modal dialog. If either of these receives focus, they will place the browser’s focus back inside.</p>\n\n<p>Additionally, we give these attributes to the div we want to serve as our modal dialog element. This tells the browser that the <code>&lt;div&gt;</code> is semantically significant. It also allows us to place focus on the element via JS:</p>\n\n<ul>\n<li><code>aria-modal='true'</code>,</li>\n<li><code>role='dialog'</code>,</li>\n<li><code>tabindex'-1'</code>.</li>\n</ul>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// =========\n// Template.\n// =========\n\nconst FOCUS_TRAP = &#96;\n  &lt;span\n    aria-hidden='true'\n    class='cta-modal&#95;&#95;focus-trap'\n    tabindex='0'\n  &gt;&lt;/span&gt;\n&#96;;\n\nconst MODAL = &#96;\n  &lt;slot name='button'&gt;&lt;/slot&gt;\n\n  &lt;div class='cta-modal&#95;&#95;scroll' style='display:none'&gt;\n    ${FOCUS_TRAP}\n\n    &lt;div class='cta-modal&#95;&#95;overlay'&gt;\n      &lt;div\n        aria-modal='true'\n        class='cta-modal&#95;&#95;dialog'\n        role='dialog'\n        tabindex='-1'\n      &gt;\n        &lt;button\n          class='cta-modal&#95;&#95;close'\n          type='button'\n        &gt;&times;&lt;/button&gt;\n\n        &lt;slot name='modal'&gt;&lt;/slot&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    ${FOCUS_TRAP}\n  &lt;/div&gt;\n&#96;;\n\n// Get markup.\nconst markup = [STYLE, MODAL].join(EMPTY_STRING).trim().replace(SPACE_REGEX, SPACE);\n\n// Get template.\nconst template = document.createElement(TEMPLATE);\ntemplate.innerHTML = markup;</code></pre>\n</div>\n\n<p>You may be wondering: “Why not use the <code>dialog</code> tag?” Good question. At the time of this writing, it still has some cross-browser quirks. For more on that, read this article by <a href=\"https://www.scottohara.me/blog/2019/03/05/open-dialog.html\">Scott O’hara</a>. Also, according to the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\">Mozilla documentation</a>, <code>dialog</code> is not allowed to have a <code>tabindex</code> attribute, which we need to put focus on our modal.</p>\n\n<h3 id=\"constructor\">Constructor</h3>\n\n<p>Whenever a JS class is instantiated, its <code>constructor</code> function is called. That is just a fancy term that means an <em>instance</em> of the <code>CtaModal</code> class is being created. In the case of our Web Component, this instantiation happens automatically whenever a <code>&lt;cta-modal&gt;</code> is encountered in a page’s HTML.</p>\n\n<p>Within the <code>constructor</code> we call <code>super</code> which tells the <code>HTMLElement</code> class (which we are <code>extend</code>-ing) to call its own <code>constructor</code>. Think of it like glue code, to make sure we tap into some of the default lifecycle methods.</p>\n\n<p>Next, we call <code>this._bind()</code> which we will cover a bit more later. Then we attach the “shadow DOM” to our class instance and add the markup that we created as a multiline string earlier.</p>\n\n<p>After that, we get all the elements &mdash; from within the aforementioned <em>component markup</em> section &mdash; for use in later function calls. Lastly, we call a few helper methods that read attributes from the corresponding <code>&lt;cta-modal&gt;</code> tag.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// =======================\n// Lifecycle: constructor.\n// =======================\n\nconstructor() {\n  // Parent constructor.\n  super();\n\n  // Bind context.\n  this.&#95;bind();\n\n  // Shadow DOM.\n  this.&#95;shadow = this.attachShadow({ mode: 'closed' });\n\n  // Add template.\n  this.&#95;shadow.appendChild(\n    // Clone node.\n    template.content.cloneNode(true)\n  );\n\n  // Get slots.\n  this.&#95;slotForButton = this.querySelector(\"[slot='button']\");\n  this.&#95;slotForModal = this.querySelector(\"[slot='modal']\");\n\n  // Get elements.\n  this.&#95;heading = this.querySelector('h1, h2, h3, h4, h5, h6');\n\n  // Get shadow elements.\n  this.&#95;buttonClose = this.&#95;shadow.querySelector('.cta-modal&#95;&#95;close') as HTMLElement;\n  this.&#95;focusTrapList = this.&#95;shadow.querySelectorAll('.cta-modal&#95;&#95;focus-trap');\n  this.&#95;modal = this.&#95;shadow.querySelector('.cta-modal&#95;&#95;dialog') as HTMLElement;\n  this.&#95;modalOverlay = this.&#95;shadow.querySelector('.cta-modal&#95;&#95;overlay') as HTMLElement;\n  this.&#95;modalScroll = this.&#95;shadow.querySelector('.cta-modal&#95;&#95;scroll') as HTMLElement;\n\n  // Missing slot?\n  if (!this.&#95;slotForModal) {\n    window.console.error('Required [slot=\"modal\"] not found inside cta-modal.');\n  }\n\n  // Set animation flag.\n  this.&#95;setAnimationFlag();\n\n  // Set close title.\n  this.&#95;setCloseTitle();\n\n  // Set modal label.\n  this.&#95;setModalLabel();\n\n  // Set static flag.\n  this.&#95;setStaticFlag();\n\n  /&#42;\n  =====\n  NOTE:\n  =====\n\n    We set this flag last because the UI visuals within\n    are contingent on some of the other flags being set.\n  &#42;/\n\n  // Set active flag.\n  this.&#95;setActiveFlag();\n}</code></pre>\n</div>\n\n<h3 id=\"binding-this-context\">Binding <code>this</code> Context</h3>\n\n<p>This is a bit of JS wizardry that saves us from having to type tedious code needlessly elsewhere. When working with <a href=\"https://en.wikipedia.org/wiki/DOM_events\">DOM events</a> the context of <code>this</code> can change, depending on what element is being interacted with within the page.</p>\n\n<p>One way to ensure that <code>this</code> always means the instance of our class is to specifically call <code>bind</code>. Essentially, this function makes it, so that it is handled automatically. That means we do not have to type things like this everywhere.</p>\n\n<pre><code class=\"language-javascript\">/&#42; NOTE: Just an example, we don't need this. &#42;/\nthis.someFunctionName1 = this.someFunctionName1.bind(this);\nthis.someFunctionName2 = this.someFunctionName2.bind(this);</code></pre>\n\n<p>Instead of typing that snippet above, every time we add a new function, a handy <code>this._bind()</code> call in the <code>constructor</code> takes care of any/all functions we might have. This loop grabs every class property that is a <code>function</code> and binds it automatically.</p>\n\n<pre><code class=\"language-javascript\">// ============================\n// Helper: bind `this` context.\n// ============================\n\n&#95;bind() {\n  // Get property names.\n  const propertyNames = Object.getOwnPropertyNames(\n    // Get prototype.\n    Object.getPrototypeOf(this)\n  ) as (keyof CtaModal)[];\n\n  // Loop through.\n  propertyNames.forEach((name) =&gt; {\n    // Bind functions.\n    if (typeof this[name] === FUNCTION) {\n      /&#42;\n      =====\n      NOTE:\n      =====\n\n        Why use \"@ts-expect-error\" here?\n\n        Calling `&#42;.bind(this)` is a standard practice\n        when using JavaScript classes. It is necessary\n        for functions that might change context because\n        they are interacting directly with DOM elements.\n\n        Basically, I am telling TypeScript:\n\n        \"Let me live my life!\"\n\n        😎\n      &#42;/\n\n      // @ts-expect-error bind\n      this[name] = this[name].bind(this);\n    }\n  });\n}</code></pre>\n\n<h3 id=\"lifecycle-methods\">Lifecycle Methods</h3>\n\n<p>By nature of this line, where we <code>extend</code> from <code>HTMLElement</code>, we get a few built-in function calls for “free.” As long as we name our functions by these names they will be called at the appropriate time within the lifecycle of our <code>&lt;cta-modal&gt;</code> component.</p>\n\n<pre><code class=\"language-javascript\">// ==========\n// Component.\n// ==========\n\nclass CtaModal extends HTMLElement {\n  /&#42; NOTE: LINES REMOVED, FOR BREVITY. &#42;/\n}</code></pre>\n\n<ul>\n<li><code>observedAttributes</code><br />\nThis tells the browser which attributes we are watching for changes.</li>\n<li><code>attributeChangedCallback</code><br />\nIf any of those attributes change, this callback will be invoked. Depending on which attribute changed, we call a function to read the attribute.</li>\n<li><code>connectedCallback</code><br />\nThis is called when a <code>&lt;cta-modal&gt;</code> tag is registered with the page. We use this opportunity to add all our event handlers.<br />\nIf you are familiar with <a href=\"https://reactjs.org/\">React</a>, this is similar to the <code>componentDidMount</code> lifecycle event.</li>\n<li><code>disconnectedCallback</code><br />\nThis is called when a <code>&lt;cta-modal&gt;</code> tag is removed from the page. Likewise, we remove all obsolete event handlers when/if this occurs.<br />\nIt is similar to the <code>componentWillUnmount</code> lifecycle event in React.</li>\n</ul>\n\n<p><strong>Note:</strong> <em>It is worth pointing out that these are the only functions within our class that are not prefixed by an underscore (<code>_</code>). Though not strictly necessary, the reason for this is twofold. One, it makes it obvious which functions we have created for our new <code>&lt;cta-modal&gt;</code> and which are native lifecycle events of the <code>HTMLElement</code> class. Two, when we minify our code later the prefix denotes they can be mangled. Whereas the native lifecycle methods need to retain their names verbatim.</em></p>\n\n<pre><code class=\"language-javascript\">// ============================\n// Lifecycle: watch attributes.\n// ============================\n\nstatic get observedAttributes() {\n  return [ACTIVE, ANIMATED, CLOSE, STATIC];\n}\n\n// ==============================\n// Lifecycle: attributes changed.\n// ==============================\n\nattributeChangedCallback(name: string, oldValue: string, newValue: string) {\n  // Different old/new values?\n  if (oldValue !== newValue) {\n    // Changed [active=\"…\"] value?\n    if (name === ACTIVE) {\n      this.&#95;setActiveFlag();\n    }\n\n    // Changed [animated=\"…\"] value?\n    if (name === ANIMATED) {\n      this.&#95;setAnimationFlag();\n    }\n\n    // Changed [close=\"…\"] value?\n    if (name === CLOSE) {\n      this.&#95;setCloseTitle();\n    }\n\n    // Changed [static=\"…\"] value?\n    if (name === STATIC) {\n      this.&#95;setStaticFlag();\n    }\n  }\n}\n\n// ===========================\n// Lifecycle: component mount.\n// ===========================\n\nconnectedCallback() {\n  this.&#95;addEvents();\n}\n\n// =============================\n// Lifecycle: component unmount.\n// =============================\n\ndisconnectedCallback() {\n  this.&#95;removeEvents();\n}</code></pre>\n\n<h3 id=\"adding-and-removing-events\">Adding And Removing Events</h3>\n\n<p>These functions register (and remove) callbacks for various element and page-level events:</p>\n\n<ul>\n<li>buttons clicked,</li>\n<li>elements focused,</li>\n<li>keyboard pressed,</li>\n<li>overlay clicked.</li>\n</ul>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ===================\n// Helper: add events.\n// ===================\n\n&#95;addEvents() {\n  // Prevent doubles.\n  this.&#95;removeEvents();\n\n  document.addEventListener(FOCUSIN, this.&#95;handleFocusIn);\n  document.addEventListener(KEYDOWN, this.&#95;handleKeyDown);\n\n  this.&#95;buttonClose.addEventListener(CLICK, this.&#95;handleClickToggle);\n  this.&#95;modalOverlay.addEventListener(CLICK, this.&#95;handleClickOverlay);\n\n  if (this.&#95;slotForButton) {\n    this.&#95;slotForButton.addEventListener(CLICK, this.&#95;handleClickToggle);\n    this.&#95;slotForButton.addEventListener(KEYDOWN, this.&#95;handleClickToggle);\n  }\n\n  if (this.&#95;slotForModal) {\n    this.&#95;slotForModal.addEventListener(CLICK, this.&#95;handleClickToggle);\n    this.&#95;slotForModal.addEventListener(KEYDOWN, this.&#95;handleClickToggle);\n  }\n}\n\n// ======================\n// Helper: remove events.\n// ======================\n\n&#95;removeEvents() {\n  document.removeEventListener(FOCUSIN, this.&#95;handleFocusIn);\n  document.removeEventListener(KEYDOWN, this.&#95;handleKeyDown);\n\n  this.&#95;buttonClose.removeEventListener(CLICK, this.&#95;handleClickToggle);\n  this.&#95;modalOverlay.removeEventListener(CLICK, this.&#95;handleClickOverlay);\n\n  if (this.&#95;slotForButton) {\n    this.&#95;slotForButton.removeEventListener(CLICK, this.&#95;handleClickToggle);\n    this.&#95;slotForButton.removeEventListener(KEYDOWN, this.&#95;handleClickToggle);\n  }\n\n  if (this.&#95;slotForModal) {\n    this.&#95;slotForModal.removeEventListener(CLICK, this.&#95;handleClickToggle);\n    this.&#95;slotForModal.removeEventListener(KEYDOWN, this.&#95;handleClickToggle);\n  }\n}</code></pre>\n</div>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"detecting-attribute-changes\">Detecting Attribute Changes</h3>\n\n<p>These functions handle reading attributes from a <code>&lt;cta-modal&gt;</code> tag and setting various flags as a result:</p>\n\n<ul>\n<li>Setting an <code>_isAnimated</code> boolean on our class instance.</li>\n<li>Setting <code>title</code> and <code>aria-label</code> attributes on our close button.</li>\n<li>Setting an <code>aria-label</code> for our modal dialog, based on heading text.</li>\n<li>Setting an <code>_isActive</code> boolean on our class instance.</li>\n<li>Setting an <code>_isStatic</code> boolean on our class instance.</li>\n</ul>\n\n<p>You may be wondering why we are using <code>aria-label</code> to relate the modal to its heading text (if it exists). At the time of this writing, browsers are not currently able to correlate an <code>aria-labelledby=&quot;…&quot;</code> attribute &mdash; within the shadow DOM &mdash; to an <code>id=&quot;…&quot;</code> that is located in the standard (aka “light”) DOM.</p>\n\n<p>I will not go into great detail about that, but you can read more here:</p>\n\n<ul>\n<li><a href=\"https://w3c.github.io/webcomponents-cg/#cross-root-aria\">W3C: cross-root ARIA</a></li>\n<li><a href=\"https://github.com/whatwg/html/issues/6063\">WHATWG: element reflection ticket</a></li>\n</ul>\n\n<pre><code class=\"language-javascript\">// ===========================\n// Helper: set animation flag.\n// ===========================\n\n&#95;setAnimationFlag() {\n  this.&#95;isAnimated = this.getAttribute(ANIMATED) !== FALSE;\n}\n\n// =======================\n// Helper: add close text.\n// =======================\n\n&#95;setCloseTitle() {\n  // Get title.\n  const title = this.getAttribute(CLOSE) || CLOSE&#95;TITLE;\n\n  // Set title.\n  this.&#95;buttonClose.title = title;\n  this.&#95;buttonClose.setAttribute(ARIA&#95;LABEL, title);\n}\n\n// ========================\n// Helper: add modal label.\n// ========================\n\n&#95;setModalLabel() {\n  // Set later.\n  let label = MODAL&#95;LABEL&#95;FALLBACK;\n\n  // Heading exists?\n  if (this.&#95;heading) {\n    // Get text.\n    label = this.&#95;heading.textContent || label;\n    label = label.trim().replace(SPACE&#95;REGEX, SPACE);\n  }\n\n  // Set label.\n  this.&#95;modal.setAttribute(ARIA&#95;LABEL, label);\n}\n\n// ========================\n// Helper: set active flag.\n// ========================\n\n&#95;setActiveFlag() {\n  // Get flag.\n  const isActive = this.getAttribute(ACTIVE) === TRUE;\n\n  // Set flag.\n  this.&#95;isActive = isActive;\n\n  // Set display.\n  this.&#95;toggleModalDisplay(() =&gt; {\n    // Focus modal?\n    if (this.&#95;isActive) {\n      this.&#95;focusModal();\n    }\n  });\n}\n\n// ========================\n// Helper: set static flag.\n// ========================\n\n&#95;setStaticFlag() {\n  this.&#95;isStatic = this.getAttribute(STATIC) === TRUE;\n}</code></pre>\n\n<h3 id=\"focusing-specific-elements\">Focusing Specific Elements</h3>\n\n<p>The <code>_focusElement</code> function allows us to focus an element that may have been active before a modal became active. Whereas the <code>_focusModal</code> function will place focus on the modal dialog itself and will ensure that the modal backdrop is scrolled to the top.</p>\n\n<pre><code class=\"language-javascript\">// ======================\n// Helper: focus element.\n// ======================\n\n&#95;focusElement(element: HTMLElement) {\n  window.requestAnimationFrame(() =&gt; {\n    if (typeof element.focus === FUNCTION) {\n      element.focus();\n    }\n  });\n}\n\n// ====================\n// Helper: focus modal.\n// ====================\n\n&#95;focusModal() {\n  window.requestAnimationFrame(() =&gt; {\n    this.&#95;modal.focus();\n    this.&#95;modalScroll.scrollTo(0, 0);\n  });\n}</code></pre>\n\n<h3 id=\"detecting-outside-modal\">Detecting “Outside” Modal</h3>\n\n<p>This function is handy to know if an element resides outside the parent <code>&lt;cta-modal&gt;</code> tag. It returns a boolean, which we can use to take appropriate action. Namely, tab trapping navigation inside the modal while it is active.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// =============================\n// Helper: detect outside modal.\n// =============================\n\n&#95;isOutsideModal(element?: HTMLElement) {\n  // Early exit.\n  if (!this.&#95;isActive || !element) {\n    return false;\n  }\n\n  // Has element?\n  const hasElement = this.contains(element) || this.&#95;modal.contains(element);\n\n  // Get boolean.\n  const bool = !hasElement;\n\n  // Expose boolean.\n  return bool;\n}</code></pre>\n</div>\n\n<h3 id=\"detecting-motion-preference\">Detecting Motion Preference</h3>\n\n<p>Here, we reuse our variable from before (also used in our CSS) to detect if a user is okay with motion. That is, they have not explicitly set <code>prefers-reduced-motion</code> to <code>reduce</code> via their operating system preferences.</p>\n\n<p>The returned boolean is a combination of that check, plus the <code>animated=&quot;false&quot;</code> flag not being set on <code>&lt;cta-modal&gt;</code>.</p>\n\n<pre><code class=\"language-javascript\">// ===========================\n// Helper: detect motion pref.\n// ===========================\n\n&#95;isMotionOkay() {\n  // Get pref.\n  const { matches } = window.matchMedia(PREFERS_REDUCED_MOTION);\n\n  // Expose boolean.\n  return this.&#95;isAnimated && !matches;\n}</code></pre>\n\n<h3 id=\"toggling-modal-show-hide\">Toggling Modal Show/Hide</h3>\n\n<p>There is quite a bit going on in this function, but in essence, it is pretty simple.</p>\n\n<ul>\n<li><strong>If the modal is not active, show it.</strong> If animation is allowed, animate it into place.</li>\n<li><strong>If the modal is active, hide it.</strong> If animation is allowed, animate it disappearing.</li>\n</ul>\n\n<p>We also cache the currently active element, so that when the modal closes we can restore focus.</p>\n\n<p>The variables used in our CSS earlier are also used here:</p>\n\n<ul>\n<li><code>ANIMATION_DURATION</code>,</li>\n<li><code>DATA_SHOW</code>,</li>\n<li><code>DATA_HIDE</code>.</li>\n</ul>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// =====================\n// Helper: toggle modal.\n// =====================\n\n&#95;toggleModalDisplay(callback: () =&gt; void) {\n  // @ts-expect-error boolean\n  this.setAttribute(ACTIVE, this.&#95;isActive);\n\n  // Get booleans.\n  const isModalVisible = this.&#95;modalScroll.style.display === BLOCK;\n  const isMotionOkay = this.&#95;isMotionOkay();\n\n  // Get delay.\n  const delay = isMotionOkay ? ANIMATION&#95;DURATION : 0;\n\n  // Get scrollbar width.\n  const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n\n  // Get active element.\n  const activeElement = document.activeElement as HTMLElement;\n\n  // Cache active element?\n  if (this.&#95;isActive && activeElement) {\n    this.&#95;activeElement = activeElement;\n  }\n\n  // =============\n  // Modal active?\n  // =============\n\n  if (this.&#95;isActive) {\n    // Show modal.\n    this.&#95;modalScroll.style.display = BLOCK;\n\n    // Hide scrollbar.\n    document.documentElement.style.overflow = HIDDEN;\n\n    // Add placeholder?\n    if (scrollbarWidth) {\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`;\n    }\n\n    // Set flag.\n    if (isMotionOkay) {\n      this.&#95;isHideShow = true;\n      this.&#95;modalScroll.setAttribute(DATA&#95;SHOW, TRUE);\n    }\n\n    // Fire callback.\n    callback();\n\n    // Await CSS animation.\n    this.&#95;timerForShow = window.setTimeout(() =&gt; {\n      // Clear.\n      clearTimeout(this.&#95;timerForShow);\n\n      // Remove flag.\n      this.&#95;isHideShow = false;\n      this.&#95;modalScroll.removeAttribute(DATA&#95;SHOW);\n\n      // Delay.\n    }, delay);\n\n    /&#42;\n    =====\n    NOTE:\n    =====\n\n      We want to ensure that the modal is currently\n      visible because we do not want to put scroll\n      back on the `&lt;html&gt;` element unnecessarily.\n\n      The reason is that another `&lt;cta-modal&gt;` in\n      the page might have been pre-rendered with an\n      [active=\"true\"] attribute. If so, we want to\n      leave the page's overflow value alone.\n    &#42;/\n  } else if (isModalVisible) {\n    // Set flag.\n    if (isMotionOkay) {\n      this.&#95;isHideShow = true;\n      this.&#95;modalScroll.setAttribute(DATA&#95;HIDE, TRUE);\n    }\n\n    // Fire callback?\n    callback();\n\n    // Await CSS animation.\n    this.&#95;timerForHide = window.setTimeout(() =&gt; {\n      // Clear.\n      clearTimeout(this.&#95;timerForHide);\n\n      // Remove flag.\n      this.&#95;isHideShow = false;\n      this.&#95;modalScroll.removeAttribute(DATA&#95;HIDE);\n\n      // Hide modal.\n      this.&#95;modalScroll.style.display = NONE;\n\n      // Show scrollbar.\n      document.documentElement.style.overflow = EMPTY&#95;STRING;\n\n      // Remove placeholder.\n      document.documentElement.style.paddingRight = EMPTY&#95;STRING;\n\n      // Delay.\n    }, delay);\n  }\n}</code></pre>\n</div>\n\n<h3 id=\"handle-event-click-overlay\">Handle Event: Click Overlay</h3>\n\n<p>When clicking on the semi-transparent overlay, assuming that <code>static=&quot;true&quot;</code> is not set on the <code>&lt;cta-modal&gt;</code> tag, we close the modal.</p>\n\n<pre><code class=\"language-javascript\">// =====================\n// Event: overlay click.\n// =====================\n\n&#95;handleClickOverlay(event: MouseEvent) {\n  // Early exit.\n  if (this.&#95;isHideShow || this.&#95;isStatic) {\n    return;\n  }\n\n  // Get layer.\n  const target = event.target as HTMLElement;\n\n  // Outside modal?\n  if (target.classList.contains('cta-modal&#95;&#95;overlay')) {\n    this.&#95;handleClickToggle();\n  }\n}</code></pre>\n\n<h3 id=\"handle-event-click-toggle\">Handle Event: Click Toggle</h3>\n\n<p>This function uses <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#event_delegation\">event delegation</a> on the <code>&lt;div slot=&quot;button&quot;&gt;</code> and <code>&lt;div slot=&quot;modal&quot;&gt;</code> elements. Whenever a child element with the class <code>cta-modal-toggle</code> is triggered, it will cause the active state of the modal to change.</p>\n\n<p>This includes listening for various events that are considered activating a button:</p>\n\n<ul>\n<li>mouse clicks,</li>\n<li>pressing the <code>enter</code> key,</li>\n<li>pressing the <code>spacebar</code> key.</li>\n</ul>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// ====================\n// Event: toggle modal.\n// ====================\n\n&#95;handleClickToggle(event?: MouseEvent | KeyboardEvent) {\n  // Set later.\n  let key = EMPTY_STRING;\n  let target = null;\n\n  // Event exists?\n  if (event) {\n    if (event.target) {\n      target = event.target as HTMLElement;\n    }\n\n    // Get key.\n    if ((event as KeyboardEvent).key) {\n      key = (event as KeyboardEvent).key;\n      key = key.toLowerCase();\n    }\n  }\n\n  // Set later.\n  let button;\n\n  // Target exists?\n  if (target) {\n    // Direct click.\n    if (target.classList.contains('cta-modal&#95;&#95;close')) {\n      button = target as HTMLButtonElement;\n\n      // Delegated click.\n    } else if (typeof target.closest === FUNCTION) {\n      button = target.closest('.cta-modal-toggle') as HTMLButtonElement;\n    }\n  }\n\n  // Get booleans.\n  const isValidEvent = event && typeof event.preventDefault === FUNCTION;\n  const isValidClick = button && isValidEvent && !key;\n  const isValidKey = button && isValidEvent && [ENTER, SPACE].includes(key);\n\n  const isButtonDisabled = button && button.disabled;\n  const isButtonMissing = isValidEvent && !button;\n  const isWrongKeyEvent = key && !isValidKey;\n\n  // Early exit.\n  if (isButtonDisabled || isButtonMissing || isWrongKeyEvent) {\n    return;\n  }\n\n  // Prevent default?\n  if (isValidKey || isValidClick) {\n    event.preventDefault();\n  }\n\n  // Set flag.\n  this.&#95;isActive = !this.&#95;isActive;\n\n  // Set display.\n  this.&#95;toggleModalDisplay(() =&gt; {\n    // Focus modal?\n    if (this.&#95;isActive) {\n      this.&#95;focusModal();\n\n      // Return focus?\n    } else if (this.&#95;activeElement) {\n      this.&#95;focusElement(this.&#95;activeElement);\n    }\n  });\n}</code></pre>\n</div>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"handle-event-focus-element\">Handle Event: Focus Element</h3>\n\n<p>This function is triggered whenever an element receives <code>focus</code> on the page. Depending on the state of the modal, and which element was focused, we can trap tab navigation within the modal dialog. This is where our <code>FOCUSABLE_SELECTORS</code> from early comes into play.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// =========================\n// Event: focus in document.\n// =========================\n\n&#95;handleFocusIn() {\n  // Early exit.\n  if (!this.&#95;isActive) {\n    return;\n  }\n\n  // prettier-ignore\n  const activeElement = (\n    // Get active element.\n    this.&#95;shadow.activeElement ||\n    document.activeElement\n  ) as HTMLElement;\n\n  // Get booleans.\n  const isFocusTrap1 = activeElement === this.&#95;focusTrapList[0];\n  const isFocusTrap2 = activeElement === this.&#95;focusTrapList[1];\n\n  // Set later.\n  let focusListReal: HTMLElement[] = [];\n\n  // Slot exists?\n  if (this.&#95;slotForModal) {\n    // Get \"real\" elements.\n    focusListReal = Array.from(\n      this.&#95;slotForModal.querySelectorAll(FOCUSABLE&#95;SELECTORS)\n    ) as HTMLElement[];\n  }\n\n  // Get \"shadow\" elements.\n  const focusListShadow = Array.from(\n    this.&#95;modal.querySelectorAll(FOCUSABLE&#95;SELECTORS)\n  ) as HTMLElement[];\n\n  // Get \"total\" elements.\n  const focusListTotal = focusListShadow.concat(focusListReal);\n\n  // Get first & last items.\n  const focusItemFirst = focusListTotal[0];\n  const focusItemLast = focusListTotal[focusListTotal.length - 1];\n\n  // Focus trap: above?\n  if (isFocusTrap1 && focusItemLast) {\n    this.&#95;focusElement(focusItemLast);\n\n    // Focus trap: below?\n  } else if (isFocusTrap2 && focusItemFirst) {\n    this.&#95;focusElement(focusItemFirst);\n\n    // Outside modal?\n  } else if (this.&#95;isOutsideModal(activeElement)) {\n    this.&#95;focusModal();\n  }\n}</code></pre>\n</div>\n\n<h3 id=\"handle-event-keyboard\">Handle Event: Keyboard</h3>\n\n<p>If a modal is active when the <code>escape</code> key is pressed, it will be closed. If the <code>tab</code> key is pressed, we evaluate whether or not we need to adjust which element is focused.</p>\n\n<pre><code class=\"language-javascript\">// =================\n// Event: key press.\n// =================\n\n&#95;handleKeyDown({ key }: KeyboardEvent) {\n  // Early exit.\n  if (!this.&#95;isActive) {\n    return;\n  }\n\n  // Get key.\n  key = key.toLowerCase();\n\n  // Escape key?\n  if (key === ESCAPE && !this.&#95;isHideShow && !this.&#95;isStatic) {\n    this.&#95;handleClickToggle();\n  }\n\n  // Tab key?\n  if (key === TAB) {\n    this.&#95;handleFocusIn();\n  }\n}</code></pre>\n\n<h3 id=\"dom-loaded-callback\">DOM Loaded Callback</h3>\n\n<p>This event listener tells the window to wait for the DOM (HTML page) to be loaded, and then parses it for any instances of <code>&lt;cta-modal&gt;</code> and attaches our JS interactivity to it. Essentially, we have created a new HTML tag and now the browser knows how to use it.</p>\n\n<pre><code class=\"language-javascript\">// ===============\n// Define element.\n// ===============\n\nwindow.addEventListener('DOMContentLoaded', () =&gt; {\n  window.customElements.define('cta-modal', CtaModal);\n});</code></pre>\n\n<h2 id=\"build-time-optimization\">Build Time Optimization</h2>\n\n<p>I will not go into great detail about this aspect, but I think it is worth calling out.</p>\n\n<p>After transpiling from TypeScript to JavaScript, I run <a href=\"https://terser.org/\">Terser</a> against the JS output. All the aforementioned functions that begin with an underscore (<code>_</code>) are marked as safe to mangle. That is, they go from being named <code>_bind</code> and <code>_addEvents</code> to single letters instead.</p>\n\n<p>That step brings the file size down considerably. Then I run the minified output through a <a href=\"https://github.com/nathansmith/cta-modal/blob/main/scripts/minifyWebComponent.js\">minifyWebComponent.js</a> process that I created, which compresses the embedded <code>&lt;style&gt;</code> and markup even further.</p>\n\n<p>For example, class names and other attributes (and selectors) are minified. This happens in the CSS and HTML.</p>\n\n<ul>\n<li><code>class='cta-modal__overlay'</code> becomes <code>class=o</code>. The quotes are removed as well because the browser does not technically need them to understand the intent.</li>\n<li>The one CSS selector that is left untouched is <code>[tabindex=&quot;0&quot;]</code>, because removing the quotes from around the <code>0</code> seemingly makes it invalid when parsed by <code>querySelectorAll</code>. However, it is safe to minify within HTML from <code>tabindex='0'</code> to <code>tabindex=0</code>.</li>\n</ul>\n\n<p>When it is all said and done, the file size reduction looks like this (in bytes):</p>\n\n<ul>\n<li>un-minified: 16,849,</li>\n<li>terser minify: 10,230,</li>\n<li>and my script: 7,689.</li>\n</ul>\n\n<p>To put that into perspective, the <code>favicon.ico</code> file on Smashing Magazine is 4,286 bytes. So, we are not really adding much overhead at all, for a lot of functionality that only requires writing HTML to use.</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>If you have read this far, thanks for sticking with me. I hope that I have at least piqued your interest in Web Components!</p>\n\n<p>I know we covered quite a bit, but the good news is: That is all there is to it. There are no frameworks to learn unless you want to. Realistically, you can get started writing your own Web Components using vanilla JS without a build process.</p>\n\n<p>There really has never been a better time to <code>#UseThePlatform</code>. I look forward to seeing what you imagine.</p>\n\n<h3 id=\"further-reading\">Further Reading</h3>\n\n<p>I would be remiss if I did not mention that there are a myriad of other modal options out there.</p>\n\n<p>While I am biased and feel my approach brings something unique to the table &mdash; otherwise I would not have tried to “reinvent the wheel” &mdash; you may find that one of these will better suit your needs.</p>\n\n<p>The following examples differ from CTA Modal in that they all require at least <strong><em>some</em></strong> additional JavaScript to be written by the end-user developer. Whereas with CTA Modal, all you have to author is the HTML code.</p>\n\n<p><strong>Flat HTML &amp; JS:</strong></p>\n\n<ul>\n<li><a href=\"https://a11y-dialog.netlify.app\">a11y-dialog</a></li>\n<li><a href=\"https://getbootstrap.com/docs/5.1/components/modal\">Bootstrap modal</a></li>\n<li><a href=\"https://micromodal.vercel.app\">Micromodal</a></li>\n</ul>\n\n<p><strong>Web Components:</strong></p>\n\n<ul>\n<li><a href=\"https://keiya01.github.io/aria-modal-doc/top\">aria-modal</a></li>\n<li><a href=\"https://github.com/andreasbm/web-dialog\">web-dialog</a> with <a href=\"https://appnest-demo.firebaseapp.com/focus-trap\">@a11y/focus-trap</a></li>\n</ul>\n\n<p><strong>jQuery:</strong></p>\n\n<ul>\n<li><a href=\"https://jquerymodal.com\">jQuery Modal</a></li>\n<li><a href=\"https://lokeshdhakar.com/projects/lightbox2\">Lightbox</a></li>\n<li><a href=\"http://codylindley.com/thickbox\">Thickbox</a></li>\n</ul>\n\n<p><strong>React:</strong></p>\n\n<ul>\n<li><a href=\"https://reactcommunity.org/react-modal\">React Modal</a></li>\n</ul>\n\n<p><strong>Vue:</strong></p>\n\n<ul>\n<li><a href=\"http://vue-js-modal.yev.io\">Vue.js Modal</a></li>\n</ul>\n\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(mb, vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "In this article, Nathan Smith explains how to create modal dialog windows with\nrich interaction that will only require authoring HTML in order to be used. They\nare based on Web Components that are cur...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "A frontend guide to the terminal"
        ],
        "link": [
            "https://frontendfoc.us/issues/538"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/122414/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 20px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>🇺🇦 #​538 — April 20, 2022 | <a href=\"https://frontendfoc.us/link/122415/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122417/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1650446630/f24xhrgq4p95zd4rwbpf.png\" width=\"640\" style=\"      line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122417/rss\" title=\"www.joshwcomeau.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">The Front-End Developer's Guide to the Terminal</a></span> — If you’re looking to learn a modern JavaScript framework (like React) you’ll need to be familiar with the terminal. As Josh points out, many tools assume you have a good working knowledge of the CLI. So, consider this your ‘missing manual’ for all things Terminal — looking at all the important high-level fundamentals, and running through some tips and tricks along the way.</p>\n  <p>Josh W. Comeau </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122421/rss\" title=\"web.dev\" style=\" color: #D94306;\">Building a Dialog Component</a></span> — This is a solid, foundational overview of how to build color-adaptive, responsive, and accessible ‘mini and mega modals’ with the <code>&lt;dialog&gt;</code> element.</p>\n  <p>Adam Argyle </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122419/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/90268568.png\" width=\"180\" height=\"138\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122419/rss\" title=\"ad.doubleclick.net\" style=\" color: #D94306;\">Dark Patterns in UX</a></span> — Dark patterns manipulate or trick users, rather than help them. It’s easy to try and trick your users with your UI, but don’t—it only breeds distrust in both you and the internet. Learn what not to do to your users from this blog post.</p>\n  <p>Telerik UI for Angular <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122423/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306;\">Designing a Better Carousel UX</a></span> — Let’s be real: <em>Carousels generally don’t have a good reputation…</em> But here, Vitaly highlights just some of the ways we can make them more useful, looking at best practices/guidelines to improve them with honest scrolling direction, labels, thumbnails and grouped prev/next-buttons.</p>\n  <p>Vitaly Friedman </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122425/rss\" title=\"developer.chrome.com\" style=\" color: #D94306;\">What's New In DevTools for Chrome 101</a></span> — Import and export user flow as JSON, support <code>hwb()</code> colors, view cascade layers in the Styles pane and more.</p>\n  <p>Jecelyn Yeen (Chrome Developers) </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>\n\n<ul>\n\n\n\n<li>A U.S. appeals court has reaffirmed that <a href=\"https://frontendfoc.us/link/122427/rss\" style=\" color: #D94306; font-weight: 600;\">web scraping is legal</a>.</li>\n\n<li>WebAssembly 2.0 is now in <a href=\"https://frontendfoc.us/link/122542/rss\" style=\" color: #D94306; font-weight: 600;\">first public working draft</a>.</li>\n\n<li>\n<a href=\"https://frontendfoc.us/link/122429/rss\" style=\" color: #D94306; font-weight: 600;\">Here are the dev-focused release notes</a> for Firefox 99.</li>\n\n<li>Media query <em>ranges</em> are <a href=\"https://frontendfoc.us/link/122431/rss\" style=\" color: #D94306; font-weight: 600;\">set to ship in Chrome 104</a>.</li>\n\n<li>The <a href=\"https://frontendfoc.us/link/122433/rss\" style=\" color: #D94306; font-weight: 600;\">Gamedev.js Jam 2022 is on right now</a> if you want to join in and build your own JavaScript-powered game.</li>\n\n<li>It's not one of ours, but we wanted to extend a congratulations to Zoran for <a href=\"https://frontendfoc.us/link/122435/rss\" style=\" color: #D94306; font-weight: 600;\">hitting 500 issues</a> of CSS Weekly! Quite the achievement.</li>\n\n\n</ul>\n                                \n  </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/122437/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1650448906/yyop9tk8xjausksmwzw9.png\" width=\"640\" style=\"        line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\">▶  <a href=\"https://frontendfoc.us/link/122437/rss\" title=\"www.youtube.com\" style=\" color: #D94306;\">What Key Was Pressed? (You Won't Believe How Keyboard Events Work)</a></span> — A half-hour video diving into the intricacies of keyboard events and the best ways to go about handling user input.</p>\n  <p>Jake Archibald &amp; Ada Rose Cannon </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122439/rss\" title=\"bjango.com\" style=\" color: #D94306;\">SVG Passthrough Precision</a></span> — If an SVG is imported into a design tool, then immediately exported as another SVG, how much precision is kept? What’s added, removed, or altered? Let’s dive in.</p>\n  <p>Marc Edwards </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122441/rss\" title=\"anildash.com\" style=\" color: #D94306;\">A Web Renaissance</a></span> — “<em>Thanks to the mistrust of big tech, the creation of better tools for developers, and the weird and wonderful creativity of ordinary people, we’re seeing an incredibly unlikely comeback: the web is thriving again</em>.”</p>\n  <p>Anil Dash </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122443/rss\" title=\"tldr.tech\" style=\" color: #D94306;\">Keep Up with the Latest in Startups, Tech, &amp; Programming in Just 5 Min</a></span> — TLDR is a daily newsletter with links and TLDRs of the most interesting stories in startups 🚀, tech 📱, and coding 💻</p>\n  <p>TLDR Newsletter <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122445/rss\" title=\"daverupert.com\" style=\" color: #D94306;\">Seven Web Component Tricks</a></span> — A few things that may not be ‘super obvious’ about working with Web Components. Presented in a straightforward manner with code examples.</p>\n  <p>Dave Rupert </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122447/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1650448487/oiycby6zkcqbhcrlwwyo.jpg\" width=\"150\" height=\"\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122447/rss\" title=\"cloudfour.com\" style=\" color: #D94306;\">'Childish Font Sizes'</a></span> — When it comes to a baseline <code>font-size</code>, the arguments for setting a default of 16 pixels are widely accepted. But Tyler makes the case here that there are plenty of reasons to go even larger, and shares some of the resistance that they've seen to bumping things up a bit.</p>\n  <p>Tyler Sticka </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122449/rss\" title=\"adactio.com\" style=\" color: #D94306;\">Declarative Design</a></span> — Thoughts on how we approach web design, with a focus on developing the right mindset: “<em>focus on creating the right inputs rather than trying to control every possible output</em>”.</p>\n  <p>Jeremy Keith </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122451/rss\" title=\"www.bram.us\" style=\" color: #D94306;\">The Future of CSS: CSS Toggles</a></span> — Here’s a quick look at what a <code>toggle</code> property — a mechanism for associating toggleable state with a DOM element — may look like in practice. Note: It’s <em>very</em> early days on this proposal (<em>it’s not even at the draft stage</em>) so very much experimental at this point.</p>\n  <p>Bramus Van Damme </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122453/rss\" title=\"blog.logrocket.com\" style=\" color: #D94306;\">CSS Color Module Level 5 Reference Guide</a></span> — A simple reference guide for the new color specification methods available with the (<em>in-draft</em>) <a href=\"https://frontendfoc.us/link/122455/rss\" style=\" color: #D94306;\">CSS Color Module Level 5</a>.</p>\n  <p>Nelson Michael </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122457/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">The Struggle of Using Native Emoji on the Web</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Nolan Lawson</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122459/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Common Accessibility Issues That You Can Fix Today</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hidde de Vries</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122461/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">How to Fix Your Low-Contrast Text</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Ben Myers</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122463/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Add a CSS Lens Flare to Photos for a Bright Touch</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Shimin Zhang</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122465/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Fullstack Developer</a></span> — Konrad is hiring Fullstack developers to join our team in building products for the world’s most exciting companies.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Konrad Group</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122467/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Senior Software Engineer at This Dot Labs (Remote, Worldwide)</a></span> — Great benefits working in modern tech stacks and amazing clients such as Google, Meta, Twilio, Cloudinary, Roblox, and more.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">This Dot Labs</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/122469/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools &amp; Resources</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122471/rss\" title=\"stylify.dev\" style=\" color: #D94306;\">Stylify: A Library That Generates Utility-First CSS Based on Your HTML</a></span> — This is kind of wild. You write HTML class names that look almost exactly like inline styles, then this tool will generate the right amount of CSS, along with the ‘mangled’ HTML to match.</p>\n  <p>Vladimír Macháček </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/122473/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/v1650447872/wnem5yqxmpb8nvvu6s7g.gif\" width=\"115\" height=\"\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122473/rss\" title=\"uiball.com\" style=\" color: #D94306;\">Loaders</a></span> — Here's a nice collection of two-dozen simple, lightweight loaders and spinners for your next project. Made with HTML, CSS and SVG. React, or copy/paste. The <a href=\"https://frontendfoc.us/link/122475/rss\" style=\" color: #D94306;\">GitHub repo is here</a>, <a href=\"https://frontendfoc.us/link/122476/rss\" style=\" color: #D94306;\">npm package here</a> — zero dependencies.</p>\n  <p>Griffin Johnston </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122477/rss\" title=\"www.sleuth.io\" style=\" color: #D94306;\">How to Go from 1x Deploy a Week → 1x a Day → Many Times a Day</a></span></p>\n  <p>Sleuth <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122478/rss\" title=\"pwaresources.dev\" style=\" color: #D94306;\">PWA Resources: A Curated and Categorized Collection of Resources for Progressive Web Apps</a></span></p>\n  <p>shareup </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122479/rss\" title=\"github.com\" style=\" color: #D94306;\">details-utils: A Suite of Utilities to Add More Features to The <code>&lt;</code>details&gt; Element</a></span> — These, perhaps unsurprisingly, use JavaScript and you can try some examples <a href=\"https://frontendfoc.us/link/122480/rss\" style=\" color: #D94306;\">here</a>, which include click outside to close, animation, close via ESC key, and more.</p>\n  <p>Zach Leatherman </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/122481/rss\" title=\"picmojs.com\" style=\" color: #D94306;\">PicMo: A Plain JavaScript Emoji Picker</a></span> — Gives you the option to use platform-native emojis or cross-platform ones via Twemoji, and you can even add your own custom emojis. <a href=\"https://frontendfoc.us/link/122482/rss\" style=\" color: #D94306;\">Try some demos here</a>.</p>\n  <p>picmo </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/538/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 20 Apr 2022 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/538"
        ],
        "plainDescription": "[https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png]\n[https://frontendfoc.us/link/122414/rss]\n\nFrontend Focus\n\n🇺🇦 # 538 — April 20, 2022 | Read on the web\n[https://f...",
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/",
        "providerIdx": 5
    },
    {
        "title": [
            "5 Upcoming Web Design Trends for 2022"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss\"\n              title=\"5 Upcoming Web Design Trends for 2022\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends.jpg\"\n        alt=\"Web design trends\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Web design trends bring much-needed yet subtle changes to the look of the Web. Learn about upcoming trends for 2022 and how to harness them.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss\">5 Upcoming Web Design Trends for 2022</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254673",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design & UX"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Wed, 15 Dec 2021 02:00:29 GMT"
        ],
        "plainDescription": "Web design trends\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639542641web-design-trends.jpg]\n[https://www.sitepoint.com/web-design-trends-2022/?utm_source=rss] Web design\ntrends bring ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Weekly News for Designers № 641"
        ],
        "link": [
            "https://speckyboy.com/weekly-news-for-designers-641/"
        ],
        "comments": [
            "https://speckyboy.com/weekly-news-for-designers-641/#respond"
        ],
        "dc:creator": [
            "Speckyboy"
        ],
        "pubDate": [
            "Fri, 29 Apr 2022 12:13:41 +0000"
        ],
        "category": [
            "Designer News"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139673",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>This week’s Designer News – № 641 – includes Contra Chrome, Figma for Non-Designers, The Future of CSS: CSS Toggles, Common Accessibility Issues That You Can Fix Today, The Front-End Developer's Guide to the Terminal, and a whole lot more.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/weekly-news-for-designers-641/\">Weekly News for Designers № 641</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p><a href=\"https://1.envato.market/c/78798/298927/4662?subId1=weekly-news\" target=\"_blank\" rel=\"sponsored noopener noreferrer\"><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2019/08/envato-elements-weekly-news.png\" alt=\"Envato Elements\" width=\"300\" height=\"600\" /></a></p>\n<p><a href=\"https://contrachrome.com/\" target=\"_blank\" rel=\"noopener\">Contra Chrome</a> – This comic pays homage to the changes Google&#8217;s Chrome browser has seen over the years.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-01.png\" alt=\"Example from Contra Chrome\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://www.figma.com/community/file/1099295581273693352/Figma-for-Non-Designers\" target=\"_blank\" rel=\"noopener\">Figma for Non-Designers</a> – Exploring core features of Figma that are essential to understanding the design app.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-02.jpg\" alt=\"Example from Figma for Non-Designers\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://www.smashingmagazine.com/2022/04/guide-push-notifications-developers/\" target=\"_blank\" rel=\"noopener\">The Ultimate Guide To Push Notifications For Developers</a> – A look at best practices and implementation techniques.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-03.jpg\" alt=\"Example from The Ultimate Guide To Push Notifications For Developers\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/greener-freelancer/\" target=\"_blank\" rel=\"noopener\">Ideas for Becoming a Greener Freelancer</a> – Ways to reduce your carbon footprint while increasing efficiency.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-04.jpg\" alt=\"Example from Ideas for Becoming a Greener Freelancer\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://color-name-generator.com/\" target=\"_blank\" rel=\"noopener\">Color Name Generator</a> – Enter a hex code and this app will give it a name, and generate CSS variables.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-05.png\" alt=\"Example from Color Name Generator\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://tabler-icons.io/\" target=\"_blank\" rel=\"noopener\">Tabler Icons</a> – Browse this free, open-source collection of nearly 2,000 web icons.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-06.png\" alt=\"Example from Tabler Icons\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://webhelperapp.com/css-minifier\" target=\"_blank\" rel=\"noopener\">CSS Minifier</a> – Paste your CSS into this app and it will minify your code.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-07.jpg\" alt=\"Example from CSS Minifier\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/free-vintage-antique-brush-packs-adobe-photoshop/\" target=\"_blank\" rel=\"noopener\">15 Free Vintage &amp; Antique Brush Packs for Adobe Photoshop</a> – From retro advertisements to old-fashioned writing, there is a vintage brush here for any project.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-08.jpg\" alt=\"Example from 15 Free Vintage &amp; Antique Brush Packs for Adobe Photoshop\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://www.bram.us/2022/04/20/the-future-of-css-css-toggles/\" target=\"_blank\" rel=\"noopener\">The Future of CSS: CSS Toggles</a> – Take a look at an exciting development that allows for toggling without the need for JavaScript.<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-09.jpg\" alt=\"Example from The Future of CSS: CSS Toggles\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://uiball.com/loaders/\" target=\"_blank\" rel=\"noopener\">Loaders</a> – Grab an assortment loaders and spinners for your next project.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-10.jpg\" alt=\"Example from Loaders\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/free-responsive-website-mockup-template/\" target=\"_blank\" rel=\"noopener\">10 Free Responsive Website Mockup Templates</a> – Download one of these free responsive website mockups and drop in your finished design.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-11.jpg\" alt=\"Example from 10 Free Responsive Website Mockup Templates\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://horizon-ui.com/#/\" target=\"_blank\" rel=\"noopener\">Horizon UI</a> – Use this admin template to build a custom dashboard with React.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-12.jpg\" alt=\"Example from Horizon UI\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://hidde.blog/common-a11y-issues/\" target=\"_blank\" rel=\"noopener\">Common accessibility issues that you can fix today</a> – Repair some &#8220;low-hanging fruit&#8221; that will make your website more accessible.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-13.png\" alt=\"Example from Common accessibility issues that you can fix today\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://speckyboy.com/testing-your-website-screen-reader/\" target=\"_blank\" rel=\"noopener\">How to Start Testing Your Website with a Screen Reader</a> – A beginner&#8217;s look at using a screen reader to test for accessibility.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-14.jpg\" alt=\"Example from How to Start Testing Your Website with a Screen Reader\" width=\"500\" height=\"333\" /></p>\n<p><a href=\"https://css-tricks.com/adding-tailwind-css-to-wordpress-themes/\" target=\"_blank\" rel=\"noopener\">Adding Tailwind CSS to New and Existing WordPress Themes</a> – How to combine the popular CSS framework with your WordPress theme.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-15.jpg\" alt=\"Example from Adding Tailwind CSS to New and Existing WordPress Themes\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://www.joshwcomeau.com/javascript/terminal-for-js-devs/\" target=\"_blank\" rel=\"noopener\">The Front-End Developer&#8217;s Guide to the Terminal</a> – The ability to use the terminal is critical to modern web development.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-16.png\" alt=\"Example from The Front-End Developer's Guide to the Terminal\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://thewpminute.com/freelancer-crossroads-how-should-you-build-your-next-wordpress-project/\" target=\"_blank\" rel=\"noopener\">Freelancer Crossroads: How Should You Build Your Next WordPress Project?</a> – There are now two distinct paths to take when building with WordPress.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-17.jpg\" alt=\"Example from Freelancer Crossroads: How Should You Build Your Next WordPress Project?\" width=\"750\" height=\"500\" /></p>\n<p><a href=\"https://wordpress.org/plugins/performance-lab/\" target=\"_blank\" rel=\"noopener\">Performance Lab</a> – This new plugin lets you test performance enhancements before they become a part of WordPress core.<br />\n<img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/weekly-news-for-designers-may-01-18.jpg\" alt=\"Example from Performance Lab\" width=\"750\" height=\"500\" /></p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/weekly-news-for-designers-641/\">Weekly News for Designers № 641</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/weekly-news-for-designers-641/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "This week’s Designer News – № 641 – includes Contra Chrome, Figma for\nNon-Designers, The Future of CSS: CSS Toggles, Common Accessibility Issues That\nYou Can Fix Today, The Front-End Developer's Guide...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "A Beginner’s Guide to Routing in Next.js, with Examples"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Routing in Next.js, with Examples\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs.jpg\"\n        alt=\"A Beginner's Guide to Routing in Next.js, with Examples\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Next.js offers many benefits, one being file routing. Learn how to set up a Next.js project and how file routing in Next.js works.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss\">A Beginner’s Guide to Routing in Next.js, with Examples</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/routing-in-next-js-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=208498",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React"
        ],
        "dc:creator": [
            "Kingsley Ubah"
        ],
        "pubDate": [
            "Wed, 10 Nov 2021 02:00:43 GMT"
        ],
        "plainDescription": "A Beginner's Guide to Routing in Next.js, with Examples\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636511340routing-in-nextjs.jpg]\n[https://www.sitepoint.com/routing-in-next-js-beginne...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The Best Website Builder Tools & Platforms for Your Idea"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/first-website-builders-platforms/?utm_source=rss\"\n              title=\"The Best Website Builder Tools & Platforms for Your Idea\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620180573website-tools.png\"\n        alt=\"The Best Tools for Your First Website\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620180573website-tools-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620180573website-tools.png 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            You want to start an online business… but where do you start? Learn about the best website builder tools and platforms for common use cases.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/first-website-builders-platforms/?utm_source=rss\">The Best Website Builder Tools & Platforms for Your Idea</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/first-website-builders-platforms/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=183199",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Business",
            "Entrepreneur",
            "Entrepreneurship",
            "Startups",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 09 Feb 2022 01:55:28 GMT"
        ],
        "plainDescription": "The Best Tools for Your First Website\n[https://uploads.sitepoint.com/wp-content/uploads/2021/05/1620180573website-tools.png]\n[https://www.sitepoint.com/first-website-builders-platforms/?utm_source=rss...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "10 Free Add-Ons for the Elementor WordPress Page Builder"
        ],
        "link": [
            "https://speckyboy.com/free-add-ons-elementor-wordpress-page-builder/"
        ],
        "comments": [
            "https://speckyboy.com/free-add-ons-elementor-wordpress-page-builder/#respond"
        ],
        "dc:creator": [
            "Eric Karkovack"
        ],
        "pubDate": [
            "Mon, 25 Apr 2022 06:28:51 +0000"
        ],
        "category": [
            "Featured",
            "WordPress",
            "WordPress Plugins"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139168",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>If you're looking to expand the capabilities of the Elementor WordPress Page Builder, we have ten free add-ons that are worth checking out.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/free-add-ons-elementor-wordpress-page-builder/\">10 Free Add-Ons for the Elementor WordPress Page Builder</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>Elementor is one of the rare WordPress plugins that has spawned its own ecosystem. How did it happen? Well, the page builder is in use on millions of websites and is often bundled with themes. And it&#8217;s also built with extensibility in mind.</p>\n<p>Put it all together, and it&#8217;s no wonder there are so many Elementor add-on plugins. They range from large collections of custom modules to those that offer niche functionality. There are even tools for integrating with the Gutenberg block editor.</p>\n<p>Not only can you use the page builder to create virtually any type of layout, but the surrounding ecosystem means it&#8217;s also compatible with other popular plugins. Thus, everything is tied together without having to jump through hoops.</p>\n<p>If you&#8217;re looking to expand Elementor&#8217;s capabilities, you&#8217;ve come to the right place! Here are ten free add-ons that are worth checking out.</p>\n\n\n<h2><a href=\"https://wordpress.org/plugins/essential-addons-for-elementor-lite/\" target=\"_blank\" rel=\"noopener\">Essential Addons for Elementor <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>With over 50 free widgets, Essential Addons for Elementor provides a major boost to the page builder right out of the box.</p>\n<p>There are mainstays such as post grids and pricing tables, along with integrations with popular form plugins such as <a href=\"https://speckyboy.com/gravity-forms-addons/\" target=\"_blank\" rel=\"noopener\">Gravity Forms</a>. Custom widgets for WooCommerce are there to enhance eCommerce sites as well.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-01.jpg\" alt=\"Essential Addons for Elementor\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/elementskit-lite/\" target=\"_blank\" rel=\"noopener\">ElementsKit Elementor addons <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>ElementsKit is a suite of page builder add-ons. And, to be honest, there are so many similar packages out there that we could have dedicated an entire post to them. But this is the last all-encompassing plugin in the roundup.</p>\n<p>That said, we chose ElementsKit because of its ability to help with header and footer design. In addition, the included mega menu builder (both horizontal and vertical) allows for advanced site navigation. There&#8217;s plenty here to help you craft a complete website.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-02.jpg\" alt=\"ElementsKit Elementor addons\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/woolentor-addons/\" target=\"_blank\" rel=\"noopener\">WooLentor – WooCommerce Elementor Addons + Builder <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Turning our focus to more specialized add-ons, WooLenter serves as a great way to combine WooCommerce and Elementor. It allows for building WooCommerce templates directly from within the page builder.</p>\n<p>You&#8217;ll also find a variety of Woo-specific modules to make your store more user-friendly.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-03.jpg\" alt=\"WooLentor – WooCommerce Elementor Addons + Builder\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/ele-custom-skin/\" target=\"_blank\" rel=\"noopener\">Elementor Custom Skin <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Elementor Custom Skin is a niche tool for adding variations (skins) to Elementor&#8217;s posts and posts archive widgets.</p>\n<p>It&#8217;s handy for scenarios where you want to use multiple post grid layouts on your website. <a href=\"https://speckyboy.com/increase-b2b-sales-ab-testing-cta/\" target=\"_blank\" rel=\"noopener\">A/B testing</a> is a prime example, as is having a custom layout for a landing page.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-04.jpg\" alt=\"Elementor Custom Skin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/visibility-logic-elementor/\" target=\"_blank\" rel=\"noopener\">Visibility Logic for Elementor <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Sometimes there are pieces of content that need to target specific users. Visibility Logic for Elementor makes this easy, with the ability to show/hide content based on user role, browser, or other conditions. In addition, content can be restricted based on the date and time.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-05.jpg\" alt=\"Visibility Logic for Elementor\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/timeline-widget-addon-for-elementor/\" target=\"_blank\" rel=\"noopener\">Elementor Timeline Widget Addon <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p><a href=\"https://speckyboy.com/css-js-timelines/\" target=\"_blank\" rel=\"noopener\">Timelines</a> are a great way to show linear content, such as a company&#8217;s history or a step-by-step tutorial.</p>\n<p>Elementor Timeline Widget Addon is designed to help you create custom timelines with a variety of layout options. Timelines can be vertical or horizontal and be tweaked to match your theme.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-06.jpg\" alt=\"Elementor Timeline Widget Addon\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/analogwp-templates/\" target=\"_blank\" rel=\"noopener\">Style Kits – Advanced Theme Styles for Elementor <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Take further control over your layouts with Style Kits. The plugin provides settings for essentials such as column gaps, section padding, and even accent colors. You can also choose a readymade style preset, which contains custom colors and typography.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-07.jpg\" alt=\"Style Kits – Advanced Theme Styles for Elementor\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/block-builder/\" target=\"_blank\" rel=\"noopener\">Elementor Blocks for Gutenberg <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>This official add-on makes Elementor compatible with the Gutenberg block editor. Create a template in Elementor, then add it to a page via a custom block.</p>\n<p>It could be a great setup for those who want to use Elementor for specific features, but prefer to utilize the block editor for the majority of their site.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-08.jpg\" alt=\"Elementor Blocks for Gutenberg\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/card-elements-for-elementor/\" target=\"_blank\" rel=\"noopener\">Card Elements for Elementor <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>If you need to quickly whip up an attractive card UI, check out Card Elements for Elementor. It comes with layouts for blog posts, testimonials, team member listings, and more. The look can also be customized to fit your needs.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-09.jpg\" alt=\"Card Elements for Elementor\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/dashboard-welcome-for-elementor/\" target=\"_blank\" rel=\"noopener\">Dashboard Welcome for Elementor <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Dashboard Welcome for Elementor helps you provide a consistent back-end experience for clients. Use the page builder to craft a custom &#8220;welcome&#8221; page and add whatever information you like.</p>\n<p>It&#8217;s perfect for partially white-labeling the WordPress dashboard. Plus, you can show different templates based on user roles.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wp-elementor-addons-10.jpg\" alt=\"Dashboard Welcome for Elementor\" width=\"900\" height=\"400\" /></p>\n<h2>Get the Most Out of Elementor</h2>\n<p>Elementor&#8217;s flexibility makes it a great tool for building WordPress websites. Its polished UI and feature-packed pro version offer plenty of power to bring your vision to life.</p>\n<p>Depending on your specific needs, add-on plugins like the ones in this roundup can take your project to the next level. Whether it&#8217;s a collection of custom widgets or something more narrowly-focused, there&#8217;s something for everybody.</p>\n<p>Odds are, if there&#8217;s something you want to achieve with Elementor, an add-on is available to make it happen.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/free-add-ons-elementor-wordpress-page-builder/\">10 Free Add-Ons for the Elementor WordPress Page Builder</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/free-add-ons-elementor-wordpress-page-builder/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "If you're looking to expand the capabilities of the Elementor WordPress Page\nBuilder, we have ten free add-ons that are worth checking out.\n\nThe post 10 Free Add-Ons for the Elementor WordPress Page B...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "author": [
            "Adrian Bece"
        ],
        "title": [
            "Improving JavaScript Bundle Performance With Code-Splitting"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/02/javascript-bundle-performance-code-splitting/"
        ],
        "pubDate": [
            "Wed, 02 Feb 2022 10:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/02/javascript-bundle-performance-code-splitting/"
        ],
        "description": [
            "In this article, Adrian Bece shares more about the benefits and caveats of code-splitting and how page performance and load times can be improved by dynamically loading expensive, non-critical JavaScript bundles."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/02/javascript-bundle-performance-code-splitting/\" />\n              <title>Improving JavaScript Bundle Performance With Code-Splitting</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Improving JavaScript Bundle Performance With Code-Splitting</h1>\n                  \n                    \n                    <address>Adrian Bece</address>\n                  \n                  <time datetime=\"2022-02-02T10:30:00&#43;00:00\" class=\"op-published\">2022-02-02T10:30:00+00:00</time>\n                  <time datetime=\"2022-02-02T10:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>Projects built using JavaScript-based frameworks often ship large bundles of JavaScript that take time to download, parse and execute, blocking page render and user input in the process. This problem is more apparent on unreliable and slow networks and lower-end devices. In this article, we’re going to cover code-splitting best practices and showcase some examples using React, so we load the minimum JavaScript necessary to render a page and dynamically load sizeable non-critical bundles.</p>\n\n<p>JavaScript-based frameworks like React made the process of developing web applications streamlined and efficient, for better or worse. This automatization often leads developers to treat a framework and build tools as a black box. It’s a common misconception that the code which is produced by the framework build tools (Webpack, for example) is fully optimized and cannot be improved upon any further.</p>\n\n<p>Even though the final JavaScript bundles are tree-shaken and minified, usually the <strong>entire web application is contained within a single or just a few JavaScript files</strong>, depending on the project configuration and out-of-the-box framework features. What problem could there be if the file itself is minified and optimized?</p>\n\n<h2 id=\"bundling-pitfalls\">Bundling Pitfalls</h2>\n\n<p>Let’s take a look at a simple example. The JavaScript bundle for our web app consists of the following six pages contained in individual components. Usually, those components consist of even more sub-components and other imports, but we’ll keep this simple for clarity.</p>\n\n<ul>\n<li><strong>Four public pages</strong><br />\nThey can be accessed even when not logged in (homepage, login, register, and profile page).</li>\n<li><strong>A single private page</strong><br />\nIt can be accessed by logging in (dashboard page).</li>\n<li><strong>A restricted page</strong><br />\nIt’s an admin page that has an overview of all user activity, accounts, and analytics (admin page).</li>\n</ul>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"291\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The JavaScript bundle which consists of a homepage, a login page, a register page, a profile page, a dashboard page and an admin page.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/9938e8cb-a2b2-4bbb-b9ad-43b759d2d9e5/1-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>When a user lands on a homepage, for example, the entire <code>app.min.js</code> bundle with code for other pages is loaded and parsed, which means that only a part of it is used and rendered on the page. <strong>This sounds inefficient</strong>, doesn’t it? In addition to that, <strong>all users are loading a restricted part of the app</strong> which only a few users will be able to have access to &mdash; the admin page. Even though the code is partially obfuscated as part of the minification process, we risk exposing API endpoints or other data reserved for admin users.</p>\n\n<p>How can we make sure that user loads the <strong>bare minimum JavaScript needed to render</strong> the page they’re currently on? In addition to that, we also need to make sure that the <strong>bundles for restricted sections</strong> of the page are loaded by the authorized users only. The answer lies in <strong>code-splitting</strong>.</p>\n\n<p>Before delving into details about code-splitting, let’s quickly remind ourselves what makes JavaScript so impactful on overall performance.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><p>Meet <a data-instant href=\"/the-smashing-newsletter/\"><strong>Smashing Email Newsletter</strong></a> with useful tips on front-end, design &amp; UX. Subscribe and <strong>get “Smart Interface Design Checklists”</strong> &mdash; a <strong>free PDF deck</strong> with 150+ questions to ask yourself when designing and building almost <em>anything</em>.</p><div><section class=\"nlbf\"><form action=\"//smashingmagazine.us1.list-manage.com/subscribe/post?u=16b832d9ad4b28edf261f34df&amp;id=a1666656e0\" method=\"post\"><div class=\"nlbwrapper\"><label for=\"mce-EMAIL-hp\" class=\"sr-only\">Your (smashing) email</label><div class=\"nlbgroup\"><input type=\"email\" name=\"EMAIL\" class=\"nlbf-email\" id=\"mce-EMAIL-hp\" placeholder=\"Your email\">\n<input type=\"submit\" value=\"Meow!\" name=\"subscribe\" class=\"nlbf-button\"></div></div></form><style>.c-garfield-the-cat .nlbwrapper{margin-bottom: 0;}.nlbf{display:flex;padding-bottom:.25em;padding-top:.5em;text-align:center;letter-spacing:-.5px;color:#fff;font-size:1.15em}.nlbgroup:hover{box-shadow:0 1px 7px -5px rgba(50,50,93,.25),0 3px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025)}.nlbf .nlbf-button,.nlbf .nlbf-email{flex-grow:1;flex-shrink:0;width:auto;margin:0;padding:.75em 1em;border:0;border-radius:11px;background:#fff;font-size:1em;box-shadow:none}.promo-box .nlbf-button:focus,.promo-box input.nlbf-email:active,.promo-box input.nlbf-email:focus{box-shadow:none}.nlbf-button:-ms-input-placeholder,.nlbf-email:-ms-input-placeholder{color:#777;font-style:italic}.nlbf-button::-webkit-input-placeholder,.nlbf-email::-webkit-input-placeholder{color:#777;font-style:italic}.nlbf-button:-ms-input-placeholder,.nlbf-button::-moz-placeholder,.nlbf-button::placeholder,.nlbf-email:-ms-input-placeholder,.nlbf-email::-moz-placeholder,.nlbf-email::placeholder{color:#777;font-style:italic}.nlbf .nlbf-button{transition:all .2s ease-in-out;color:#fff;background-color:#0168b8;font-weight:700;box-shadow:0 1px 1px rgba(0,0,0,.3);width:100%;border:0;border-left:1px solid #ddd;flex:2;border-top-left-radius:0;border-bottom-left-radius:0}.nlbf .nlbf-email{border-top-right-radius:0;border-bottom-right-radius:0;width:100%;flex:4;min-width:150px}@media all and (max-width:650px){.nlbf .nlbgroup{flex-wrap:wrap;box-shadow:none}.nlbf .nlbf-button,.nlbf .nlbf-email{border-radius:11px;border-left:none}.nlbf .nlbf-email{box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);min-width:100%}.nlbf .nlbf-button{margin-top:1em;box-shadow:0 1px 1px rgba(0,0,0,.5)}}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus,.nlbf .nlbf-button:hover{cursor:pointer;color:#fff;background-color:#0168b8;border-color:#dadada;box-shadow:0 1px 1px rgba(0,0,0,.3)}.nlbf .nlbf-button:active,.nlbf .nlbf-button:focus{outline:0!important;text-shadow:1px 1px 1px rgba(0,0,0,.3);box-shadow:inset 0 3px 3px rgba(0,0,0,.3)}.nlbgroup{display:flex;box-shadow:0 13px 27px -5px rgba(50,50,93,.25),0 8px 16px -8px rgba(0,0,0,.3),0 -6px 16px -6px rgba(0,0,0,.025);border-radius:11px;transition:box-shadow .2s ease-in-out}.nlbwrapper{display:flex;flex-direction:column;justify-content:center}.nlbf form{width:100%}.nlbf .nlbgroup{margin:0}.nlbcaption{font-size:.9em;line-height:1.5em;color:#fff;border-radius:11px;padding:.5em 1em;display:inline-block;background-color:#0067b859;text-shadow:1px 1px 1px rgba(0,0,0,.3)}.wf-loaded-stage2 .nlbf .nlbf-button{font-family:Mija}.mts{margin-top: 5px !important;}.mbn{margin-bottom: 0 !important;}</style></section><p class=\"mts mbn\"><small class=\"promo-box__footer mtm block grey\"><em>Once a week. Useful tips on <a href=\"https://www.smashingmagazine.com/the-smashing-newsletter/\">front-end &amp; UX</a>. Trusted by 190.000 friendly folks.</em></small></p></div></p>\n</div>\n</div>\n<div class=\"feature-panel-right-col\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-firechat.svg\"\n    alt=\"Feature Panel\"\n    width=\"310\"\n    height=\"400\"\n/>\n\n</div>\n\n<p></div>\n</aside>\n</div></p>\n\n<h2 id=\"performance-costs\">Performance Costs</h2>\n\n<p>JavaScript’s effect on performance consists of <strong>download, parsing and the execution</strong> costs.</p>\n\n<p>Like any file referenced and used on a website, it first needs to be downloaded from a server. How quickly the file is <strong>downloaded</strong> depends on the <strong>connection speed</strong> and the <strong>size of the file</strong> itself. Users can browse the Internet using slow and unreliable networks, so minification, optimization, and code-splitting of JavaScript files ensure that the user downloads the smallest file possible.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"579\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Estimated load times for a makeshift JavaScript application. The table shows the difference in loading times between mobile (up to 3 secs) and cable (0.96 secs) networks. Users are having different loading experience depending on the network type.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      <a href='https://www.performancebudget.io/'>Estimated load times</a> for a makeshift JavaScript application. Notice the difference in loading times between mobile and cable networks. Users are having different loading experience depending on the network type. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3287aad2-1e3b-412b-8694-67e78855f117/2-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Unlike the image file, for example, which only needs to be rendered once the file has been downloaded, JavaScript files need to be <strong>parsed, compiled, and executed</strong>. This is a CPU-intensive operation that <strong>blocks the main thread</strong> making the page <strong>unresponsive</strong> for that time. A user <strong>cannot interact</strong> with the page during that phase even though the content might be displayed and has seemingly finished loading. If the script takes too long to parse and execute, the user will get the impression that the site is broken and leave. This is why Lighthouse and Core Web Vitals specify <a href=\"https://web.dev/fid/\">First Input Delay (FID)</a> and <a href=\"https://web.dev/lighthouse-total-blocking-time/\">Total Blocking Time (TBT)</a> metrics to measure site interactivity and input responsiveness.</p>\n\n<p>JavaScript is also a <a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/adding-interactivity-with-javascript#parser_blocking_versus_asynchronous_javascript\">render-blocking resource</a>, meaning that if the browser encounters a script within the HTML document which isn’t deferred, it doesn’t render the page until it loads and executes the script. HTML attributes <code>async</code> and <code>defer</code> signal to the browser not to block page processing, however, <strong>the CPU thread still gets blocked</strong> and the script needs to be executed before the page becomes responsive to user input.</p>\n\n<p>Website <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/javascript-startup-optimization#parsecompile\">performance is not consistent</a> across devices. There is a wide range of devices available on the market with different CPU and memory specs, so it’s no surprise that <strong>the difference in JavaScript execution time between the high-end devices and average devices is huge.</strong></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"484\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The table shows the difference in JavaScript processing times between high-end, average and low-end devices.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      JavaScript processing times are vastly different between high-end, average and low-end devices (Image source: '<a href='https://v8.dev/blog/cost-of-javascript-2019'>The cost of JavaScript in 2019</a>' by Addy Osmani) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b88d7cd-8f54-4814-9eb5-4955b9bbe06c/3-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>To cater to a wide range of device specs and network types, we should <strong>ship only critical code</strong>. For JavaScript-based web apps, it means that only the code which is used on that particular page should be loaded, as loading the complete app bundle at once can result in longer execution times and, for users, longer waiting time until the page becomes usable and responsive to input.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"code-splitting\">Code-splitting</h2>\n\n<p>With code-splitting, our goal is to defer the loading, parsing, and execution of JavaScript code which is not needed for the current page or state. For our example, that would mean that individual pages should be split into their respective bundles &mdash; <code>homepage.min.js</code>, <code>login.min.js</code>, <code>dashboard.min.js</code>, and so on.</p>\n\n<p>When the user initially lands on the homepage, the main vendor bundle containing the framework and other shared dependencies should be loaded in alongside the bundle for the homepage. The user clicks on a button that toggles an account creation modal. As the user is interacting with the inputs, the expensive password strength check library is dynamically loaded. When a user creates an account and logs in successfully, they are redirected to the dashboard, and only then is the dashboard bundle loaded. It’s also important to note that this particular user doesn’t have an admin role on the web app, so the admin bundle is not loaded.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"435\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Code-splitting between the bundles. The homepage refers to the initial app load, the account creation modul refers to interaction and the dashboard to navigation.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8690142a-80e7-4705-9467-a6b037566ac2/4-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"dynamic-imports-code-splitting-in-react\">Dynamic Imports &amp; Code-splitting In React</h3>\n\n<p>Code splitting is available out-of-the-box for Create React App and other frameworks that use Webpack like Gatsby and Next.js. If you have set up the React project manually or if you are using a framework that doesn’t have code-splitting configured out-of-the-box, you’ll have to consult the <a href=\"https://webpack.js.org/guides/code-splitting/\">Webpack documentation</a> or the documentation for the build tool that you’re using.</p>\n\n<h4 id=\"functions\">Functions</h4>\n\n<p>Before diving into code-splitting React components, we also need to mention that we can also code split functions in React by <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#dynamic_imports\">dynamically importing</a> them. Dynamic importing is vanilla JavaScript, so this approach should work for all frameworks. However, keep in mind that this syntax is <a href=\"https://caniuse.com/es6-module-dynamic-import\">not supported by legacy browsers</a> like Internet Explorer and Opera Mini.</p>\n\n<pre><code class=\"language-javascript\">import(\"path/to/myFunction.js\").then((myFunction) =&gt; {\n   /&#42; ... &#42;/\n});</code></pre>\n\n<p>In the following example, we have a blog post with a comment section. We’d like to encourage our readers to create an account and leave comments, so we are offering a quick way to create an account and start commenting by displaying the form next to the comment section if they’re not logged in.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"520\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A blog post with a comment section\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0265152d-9a52-4816-b090-b9f7f767c654/5-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>The form is using a sizeable 800kB <a href=\"https://www.npmjs.com/package/zxcvbn\"><code>zxcvbn</code></a> library to check password strength which could prove problematic for performance, so it’s the right candidate for code splitting. This is the exact scenario I was dealing with last year and we managed to achieve a noticeable performance boost by code-splitting this library to a separate bundle and loading it dynamically.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"490\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Bundle size and estimated download times for zxcvbn package.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Bundle size and estimated download times for <code>zxcvbn</code> package. This estimation doesn’t include parsing and execution times which also affects website performance. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/0d5e871e-c891-4c77-bcfb-914b58d6affe/6-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Let’s see what the <code>Comments.jsx</code> component looks like.</p>\n\n<pre><code class=\"language-javascript\">import React, { useState } from \"react\";\nimport zxcvbn from \"zxcvbn\"; /&#42; We're importing the lib directly &#42;/\n\nexport const Comments = () =&gt; {\n  const [password, setPassword] = useState(\"\");\n  const [passwordStrength, setPasswordStrength] = useState(0);\n\n  const onPasswordChange = (event) =&gt; {\n    const { value } = event.target;\n    const { score } = zxcvbn(value)\n    setPassword(value);\n    setPasswordStrength(score);\n  };\n\n  return (\n    &lt;form&gt;\n      {/&#42; ... &#42;/}\n      &lt;input onChange={onPasswordChange} type=\"password\"&gt;&lt;/input&gt;\n      &lt;small&gt;Password strength: {passwordStrength}&lt;/small&gt;\n      {/&#42; ... &#42;/}\n    &lt;/form&gt;\n  );\n};</code></pre>\n\n<p>We’re importing the <code>zxcvbn</code> library directly and it gets included in the main bundle as a result. The resulting minified bundle for our tiny blog post component is a whopping <strong>442kB</strong> gzipped! React library and this blog post page barely reach <strong>45kB</strong> gzipped, so we have slowed down the initial loading of this page considerably by instantly loading this password checking library.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"516\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A blog post with a comment section on the left, and the main bundle with the imported zxcvbn library which is 442kB on the right.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2ba9cf4f-9a78-4961-923d-f4e71d1c9447/7-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We can reach the same conclusion by looking at the <a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">Webpack Bundle Analyzer</a> output for the app. That narrow rectangle on the far right is our blog post component.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"346\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The entire app is contained in a single bundle, and zxcvbn library is the largest part of the bundle. It’s even larger than the react-dom dependency.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      The entire app is contained in a single bundle, and <code>zxcvbn</code> library is the largest part of the bundle. It’s even larger than the react-dom dependency. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f43e5e3f-adb4-469a-87a0-ebb7c9097a30/8-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Password checking is not critical for page render. Its functionality is required only when the user interacts with the password input. So, let’s code-split <code>zxcvbn</code> into a separate bundle, dynamically import it and load it only when the password input value changes, i.e. when the user starts typing their password. We need to remove the <code>import</code> statement and add the dynamic import statement to the password <code>onChange</code> event handler function.</p>\n\n<pre><code class=\"language-javascript\">import React, { useState } from \"react\";\n\nexport const Comments = () =&gt; {\n  /&#42; ... &#42;/\n  const onPasswordChange = (event) =&gt; {\n    const { value } = event.target;\n    setPassword(value);\n\n    /&#42; Dynamic import - rename default import to lib name for clarity &#42;/\n    import(\"zxcvbn\").then(({default: zxcvbn}) =&gt; {\n      const { score } = zxcvbn(value);\n      setPasswordStrength(score);\n    });\n  };\n\n  /&#42; ... &#42;/\n}</code></pre>\n\n<p>Let’s see how our app behaves now after we’ve moved the library to a dynamic import.</p>\n\n\n<figure class=\"video-embed-container break-out\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"669945248\"\n\t\t\t\n\t\t></lite-vimeo>\n\t</div>\n\t\n</figure>\n\n<p>As we can see from the video, the initial page load is around <strong>45kB</strong> which covers only framework dependencies and the blog post page components. This is the ideal case since users will be able to get the content much faster, especially the ones using slower network connections.</p>\n\n<p>Once the user starts typing in the password input, we can see the bundle for the <code>zxcvbn</code> library appears in the network tab and the result of the function running is displayed below the input. Even though this process repeats on every keypress, the file is only requested once and it runs instantly once it becomes available.</p>\n\n<p>We can also confirm that the library has been code-split into a separate bundle by checking <a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">Webpack Bundle Analyzer</a> output.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"310\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The smaller blue colored bundle on the right, and the large bundle on the left.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      This looks much better. The smaller blue colored bundle on the right is the 'critical' bundle that loads instantly, while the large bundle on the left is dynamically-loaded bundle. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/32c4dd02-3ff4-4ef4-b393-855654cc9ebe/9-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"third-party-react-components\">Third-party React components</h4>\n\n<p>Code-splitting React components are simple for most cases and it consists of the following four steps:</p>\n\n<ol>\n<li><strong>use a default export</strong> for a component that we want to code-split;</li>\n<li><strong>import</strong> the component with <code>React.lazy</code>;</li>\n<li><strong>render</strong> the component as a child of <code>React.Suspense</code>;</li>\n<li><strong>provide a fallback</strong> component to <code>React.Suspense</code>.</li>\n</ol>\n\n<p>Let’s take a look at another example. This time we’re building a date-picking component that has requirements that default HTML date input cannot meet. We have chosen <code>react-calendar</code> as the library that we’re going to use.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"315\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A date-picking component\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e295d42c-8f82-4780-99b2-572d6acbbb07/10-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Let’s take a look at the <code>DatePicker</code> component. We can see that the <code>Calendar</code> component from the <code>react-calendar</code> package is being displayed conditionally when the user focuses on the date input element.</p>\n\n<pre><code class=\"language-javascript\">import React, { useState } from \"react\";\nimport Calendar from \"react-calendar\";\n\nexport const DatePicker = () =&gt; {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleDateChange = (date) =&gt; {\n    setShowModal(false);\n  };\n\n  const handleFocus = () =&gt; setShowModal(true);\n\n  return (\n    &lt;div&gt;\n      &lt;label htmlFor=\"dob\"&gt;Date of birth&lt;/label&gt;\n      &lt;input id=\"dob\"\n        onFocus={handleFocus}\n        type=\"date\"\n        onChange={handleDateChange}\n      /&gt;\n      {showModal && &lt;Calendar value={startDate} onChange={handleDateChange} /&gt;}\n    &lt;/div&gt;\n  );\n};</code></pre>\n\n<p>This is pretty much a standard way almost anyone would have created this app. Let’s run the Webpack Bundle Analyzer and see what the bundles look like.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"355\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The bundles analysed by the Webpack Bundle Analyzer with the entire app loaded in a single JavaScript bundle where react-calendar takes a considerable portion of it.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/93f7fc31-b5a5-4293-bcce-70850bcb3b04/11-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Just like in the previous example, the entire app is loaded in a single JavaScript bundle and <code>react-calendar</code> takes a considerable portion of it. Let&rsquo;s see if we can code split it.</p>\n\n<p>The first thing we need to notice is that the <code>Calendar</code> popup is loaded conditionally, only when the <code>showModal</code> state is set. This makes the <code>Calendar</code> component a prime candidate for code-splitting.</p>\n\n<p>Next, we need to check if <code>Calendar</code> is a default export. In our case, it is.</p>\n\n<pre><code class=\"language-javascript\">import Calendar from \"react-calendar\"; /&#42; Standard import &#42;/</code></pre>\n\n<p>Let’s change the <code>DatePicker</code> component to lazy load the <code>Calendar</code> component.</p>\n\n<pre><code class=\"language-javascript\">import React, { useState, lazy, Suspense } from \"react\";\n\nconst Calendar = lazy(() =&gt; import(\"react-calendar\")); /&#42; Dynamic import &#42;/\n\nexport const DateOfBirth = () =&gt; {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleDateChange = (date) =&gt; {\n    setShowModal(false);\n  };\n\n  const handleFocus = () =&gt; setShowModal(true);\n\n  return (\n    &lt;div&gt;\n      &lt;input\n        id=\"dob\"\n        onFocus={handleFocus}\n        type=\"date\"\n        onChange={handleDateChange}\n      /&gt;\n      {showModal && (\n        &lt;Suspense fallback={null}&gt;\n          &lt;Calendar value={startDate} onChange={handleDateChange} /&gt;\n        &lt;/Suspense&gt;\n      )}\n    &lt;/div&gt;\n  );\n};</code></pre>\n\n<p>First, we need to remove the <code>import</code> statement and replace it with <code>lazy</code> import statement. Next, we need to wrap the lazy-loaded component in a <code>Suspense</code> component and provide a <code>fallback</code> which is rendered until the lazy-loaded component becomes available.</p>\n\n<p>It’s important to note that <code>fallback</code> is a required prop of the <code>Suspense</code> component. We can provide any valid React node as a fallback:</p>\n\n<ul>\n<li><code>null</code><br />\nIf we do not want anything to render during the loading process.</li>\n<li><code>string</code><br />\nIf we want to just display a text.</li>\n<li>React component<br />\n<a href=\"https://css-tricks.com/a-bare-bones-approach-to-versatile-and-reusable-skeleton-loaders/\">Skeleton loading elements</a>, for example.</li>\n</ul>\n\n<p>Let’s run Webpack Bundle Analyzer and confirm that the <code>react-calendar</code> has been successfully code-split from the main bundle.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"347\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The bundles analysed by the Webpack Bundle Analyzer where react-calendar has been code-split from the main bundle.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/903c8c05-8d21-47cd-825d-450bef79fb08/12-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h4 id=\"project-components\">Project components</h4>\n\n<p>We are not limited to third-party components or NPM packages. We can code-split virtually any component in our project. Let’s take the website routes, for example, and code-split individual page components into separate bundles. That way, we’ll always load only the main (shared) bundle and a component bundle needed for the page we’re currently on.</p>\n\n<p>Our main <code>App.jsx</code> consists of a React router and three components that are loaded depending on the current location (URL).</p>\n\n<pre><code class=\"language-javascript\">import { Navigation } from \"./Navigation\";\nimport { Routes, Route } from \"react-router-dom\";\nimport React from \"react\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\n\nfunction App() {\n  return (\n    &lt;Routes&gt;\n      &lt;Route path=\"/\" element={&lt;Home /&gt;} /&gt;\n      &lt;Route path=\"/dashboard\" element={&lt;Dashboard /&gt;} /&gt;\n      &lt;Route path=\"/about\" element={&lt;About /&gt;} /&gt;\n    &lt;/Routes&gt;\n  );\n}\n\nexport default App;</code></pre>\n\n<p>Each of those page components has a default export and is currently imported in a default non-lazy way for this example.</p>\n\n<pre><code class=\"language-javascript\">import React from \"react\";\n\nconst Home = () =&gt; {\n  return (/&#42; Component &#42;/);\n};\nexport default Home;</code></pre>\n\n<p>As we’ve already concluded, these components get included in the main bundle by default (depending on the framework and build tools) meaning that everything gets loaded regardless of the route which user lands on. Both Dashboard and About components are loaded on the homepage route and so on.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"434\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"The main bundle with different page components in it\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/6b5a73ed-9d9b-4241-aef1-4a313dc10ffd/13-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Let’s refactor our <code>import</code> statements like in the previous example and use <code>lazy</code> import to code-split page components. We also need to nest these components under a single <code>Suspense</code> component. If we had to provide a different fallback element for these components, we’d nest each component under a separate <code>Suspense</code> component. Components have a default export, so we don’t need to change them.</p>\n\n<pre><code class=\"language-javascript\">import { Routes, Route } from \"react-router-dom\";\nimport React, { lazy, Suspense } from \"react\";\n\nconst Dashboard = lazy(() =&gt; import(\"./pages/Dashboard\"));\nconst Home = lazy(() =&gt; import(\"./pages/Home\"));\nconst About = lazy(() =&gt; import(\"./pages/About\"));\n\nfunction App() {\n  return (\n    &lt;Suspense fallback={null}&gt;\n      &lt;Routes&gt;\n        &lt;Route path=\"/\" element={&lt;Home /&gt;} /&gt;\n        &lt;Route path=\"/dashboard\" element={&lt;Dashboard /&gt;} /&gt;\n        &lt;Route path=\"/about\" element={&lt;About /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/Suspense&gt;\n  );\n}\n\nexport default App;</code></pre>\n\n<p>And that’s it! Page components are neatly split into separate packages and are loaded on-demand as the user navigates between the pages. Keep in mind, that you can provide a fallback component like a spinner or a skeleton loader to provide a better loading experience on slower networks and average to low-end devices.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"345\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"Page components are split into separate packages.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/72345bcc-f555-4693-b41f-46a5e02ec342/14-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n\n<figure class=\"video-embed-container break-out\">\n  <div class=\"video-embed-container--wrapper\"\n\t\n  >\n\t\t<lite-vimeo\n\t\t\tvideoid=\"669967735\"\n\t\t\t\n\t\t></lite-vimeo>\n\t</div>\n\t\n</figure>\n\n<h3 id=\"what-should-we-code-split\">What Should We Code-split?</h3>\n\n<p>It’s crucial to understand, which functions and components should be code-split into separate bundles from the get-go. That way, we can code-split proactively and early on in development and avoid the aforementioned bundling pitfalls and having to untangle everything.</p>\n\n<p>You might already have some idea on how to choose the right components for code-splitting from the examples that we’ve covered. Here is a good baseline criterion to follow when choosing potential candidates for code-splitting:</p>\n\n<ul>\n<li>page components for routes (individual pages),</li>\n<li>expensive or sizeable conditionally-loaded components (modals, dropdowns, menus, etc.),</li>\n<li>expensive or sizeable third-party functions and components.</li>\n</ul>\n\n<p><strong>We shouldn’t get overzealous with code-splitting.</strong> Although we identified potential candidates for code-splitting, we want to <strong>dynamically load bundles that significantly impact performance</strong> <strong>or load times</strong>. We want to avoid creating bundles with the size of a few hundred bytes or a few kilobytes. These micro-bundles can actually harm the UX and performance in some cases, as we’ll see later on in the article.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"auditing-and-refactoring-javascript-bundles\">Auditing And Refactoring JavaScript Bundles</h2>\n\n<p>Some projects will require optimization later in the development cycle or even sometime after the project goes live. The main downside of code-splitting later in the development cycle is that you’ll have to deal with components and changes on a wider scale. If some widely-used component turns out a good candidate for code-splitting and it is used across 50 other components, the scope of the pull request and changes would be large and difficult to test if no automated test exists.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"417\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An example of bundle size issues on big projects\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      If not addressed on time, bundle size issues get increasingly difficult and risky to fix and refactor on larger projects like this one (filenames and components omitted on purpose). (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/882584c9-2805-4b04-852f-85494d13fe1c/15-improving-javascript-bundle-performance-code-splitting.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Being tasked with optimizing the performance of the entire web app may be a bit overwhelming at first. A good place to start is to audit the app using <a href=\"https://github.com/webpack-contrib/webpack-bundle-analyzer\">Webpack Bundle Analyzer</a> or <a href=\"https://github.com/danvk/source-map-explorer\">Source Map Explorer</a> and identify bundles that should be code-split and fit the aforementioned criteria. An additional way of identifying those bundles is to run a <a href=\"https://developer.chrome.com/docs/devtools/evaluate-performance/\">performance test in a browser</a> or use <a href=\"https://www.webpagetest.org/\">WebPageTest</a>, and check which bundles <a href=\"https://nooshu.com/blog/2019/10/02/how-to-read-a-wpt-waterfall-chart/\">block the CPU</a> main thread the longest.</p>\n\n<p>After identifying code-splitting candidates, we need to check the scope of changes that are required to code-split this component from the main bundle. At this point, we need to evaluate if the benefit of code-splitting outweighs the scope of changes required and the development and testing time investment. This risk is minimal to none early in the development cycle.</p>\n\n<p>Finally, we need to verify that the component has been code-split correctly and that the main bundle size has decreased. We also need to build and test the component to avoid introducing potential issues.</p>\n\n<p>There are a lot of steps for code-splitting a single existing component, so let’s summarize the steps in a quick checklist:</p>\n\n<ol>\n<li>Audit the site using bundle analyzer and browser performance profiler, and identify larger components and bundles that take the most time to execute.</li>\n<li>Check if the benefit of code-splitting outweighs the development and testing time required.</li>\n<li>If the component has a named export, convert it to the default export.</li>\n<li>If the component is a part of <a href=\"https://hackernoon.com/react-project-architecture-using-barrels-d086146eb0f6\">barrel export</a>, remove it from the barrel file.</li>\n<li>Refactor <code>import</code> statements to use <code>lazy</code> statements.</li>\n<li>Wrap code-split components in the <code>Suspense</code> component and provide a fallback.</li>\n<li>Evaluate the resulting bundle (file size and performance gains). If the bundle doesn’t significantly decrease the bundle file size or improve performance, undo code-splitting.</li>\n<li>Check if the project builds successfully and if it performs without any issues.</li>\n</ol>\n\n<h3 id=\"performance-budgets\">Performance Budgets</h3>\n\n<p>We can configure our build tools and continuous integration (CI) tools to catch bundle sizing issues early in development by setting <strong>performance budgets</strong> that can serve as a performance baseline or a general asset size limit. Build tools like Webpack, CI tools, and performance audit tools like Lighthouse can <a href=\"https://web.dev/incorporate-performance-budgets-into-your-build-tools/\">use the defined performance budgets</a> and throw a warning if some bundle or resource goes over the budget limit. We can then run code-splitting for bundles that get caught by the performance budget monitor. This is especially useful information for pull request reviews, as we check how the added features affect the overall bundle size.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"326\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An example of bundlesizes integrated into github to keep track of bundle size stats on pull request basis.\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Tools like bundlesizes can be easily integrated with any build or CI tool to keep track of bundle size stats on pull request basis. (Image from bundlesizes documentation) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bccfb425-03e0-4b61-92a2-92ea78bd4df2/16-improving-javascript-bundle-performance-code-splitting.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>We can fine-tune performance budgets to tailor for worse possible user scenarios, and use that as a baseline for performance optimization. For example, if we use the scenario of a user browsing the site on an unreliable and slow connection on an average phone with a slower CPU as a baseline, we can provide optimal user experience for a much wider range of user devices and network types.</p>\n\n<p>Alex Russell has covered this topic in great detail in his article on the topic of <a href=\"https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/\">real-world web performance budgets</a> and found out that the optimal budget size for those worst-case scenarios lies somewhere between 130kB and 170kB.</p>\n\n<blockquote>“Performance budgets are an essential but under-appreciated part of product success and team health. Most partners we work with are not aware of the real-world operating environment and make inappropriate technology choices as a result. We set a budget in <strong>time</strong> of &lt;= 5 seconds first-load <a href=\"https://developers.google.com/web/tools/lighthouse/audits/time-to-interactive\">Time-to-Interactive</a> and &lt;= 2s for subsequent loads. We constrain ourselves to a real-world baseline device + network configuration to measure progress. The default global baseline is a ~$200 Android device on a 400Kbps link with a 400ms round-trip-time (“RTT”). This translates into a budget of ~130-170KB of critical-path resources, depending on composition &mdash; the more JS you include, the smaller the bundle must be.”<br /><br />&mdash; Alex Russell</blockquote>\n\n<h2 id=\"react-suspense-and-server-side-rendering-ssr\">React Suspense And Server-Side Rendering (SSR)</h2>\n\n<p>An important caveat that we have to be aware of is that React <code>Suspense</code> component is only for client-side use, meaning that <strong>server-side rendering (SSR) will throw an error</strong> if it tries to render the <code>Suspense</code> component regardless of the fallback component. This issue will be addressed in the upcoming <a href=\"https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html\">React version 18</a>. However, if you are working on a project running on an older version of React, you will need to address this issue.</p>\n\n<p>One way to address it is to check if the code is running on the browser which is a simple solution, if not a bit hacky.</p>\n\n<pre><code class=\"language-javascript\">const isBrowser = typeof window !== \"undefined\"\n\nreturn (\n  &lt;&gt;\n    {isBrowser && componentLoadCondition && (\n      &lt;Suspense fallback={&lt;Loading /&gt;}&gt;\n        &lt;SomeComponent /&gt;\n      &lt;Suspense&gt;\n    )}\n  &lt;/&gt;\n)</code></pre>\n\n<p>However, this solution is far from perfect. The content won’t be rendered server-side which is perfectly fine for modals and other non-essential content. Usually, when we use SSR, it is for improved <strong>performance and SEO</strong>, so we want content-rich components to render into HTML, thus crawlers can parse them to improve search result rankings.</p>\n\n<p>Until React version 18 is released, React team recommends using <a href=\"https://loadable-components.com/\">the Loadable Components</a> library for this exact case. This plugin extends React’s <code>lazy</code> import and <code>Suspense</code> components, and adds <a href=\"https://loadable-components.com/docs/server-side-rendering/\">Server-side rendering support</a>, <a href=\"https://loadable-components.com/docs/dynamic-import/\">dynamic imports</a> with dynamic properties, <a href=\"https://loadable-components.com/docs/timeout/\">custom timeouts</a>, and more. Loadable Components library is a great solution for larger and more complex React apps, and the basic React code-splitting is perfect for smaller and some medium apps.</p>\n\n<h2 id=\"benefits-and-caveats-of-code-splitting\">Benefits And Caveats Of Code-Splitting</h2>\n\n<p>We’ve seen how page performance and load times can be improved by dynamically loading expensive, non-critical JavaScript bundles. As an added benefit of code-splitting, <strong>each JavaScript bundle gets its unique hash</strong> which means that when the app gets updated, the user’s browser will download only the updated bundles that have different hashes.</p>\n\n<p>However, <strong>code-splitting can be easily abused</strong> and developers can get overzealous and create too many micro bundles which harm usability and performance. Dynamically loading too many smaller and irrelevant components can make the UI feel unresponsive and delayed, harming the overall user experience. Overzealous code-splitting can even harm performance in cases where the bundles are served via HTTP 1.1 which lacks <a href=\"https://developers.google.com/web/fundamentals/performance/http2#request_and_response_multiplexing\">multiplexing</a>.</p>\n\n<blockquote>Use performance budgets, bundle analyzers, performance monitoring tools to identify and evaluate each potential candidate for code splitting. Use code-splitting in a sensible and temperate way, only if it results in a significant bundle size reduction or noticeable performance improvement.</blockquote>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n<li><a href=\"https://reactjs.org/docs/code-splitting.html\">Code-Splitting</a>, React documentation</li>\n<li>“<a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/javascript-startup-optimization\">JavaScript Start-up Optimization</a>”, Addy Osmani</li>\n<li>“<a href=\"https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/\">Can You Afford It?: Real-world Web Performance Budgets</a>”, Alex Russell</li>\n<li>“<a href=\"https://web.dev/incorporate-performance-budgets-into-your-build-tools/\">Incorporate Performance Budgets Into Your Build Process</a>”, Milica Mihajlija</li>\n<li>“<a href=\"https://vimeo.com/396638607\">When JavaScript Bytes</a>”, Tim Kadlec</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "In this article, Adrian Bece shares more about the benefits and caveats of\ncode-splitting and how page performance and load times can be improved by\ndynamically loading expensive, non-critical JavaScr...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Issue #495"
        ],
        "link": [
            "https://css-weekly.com/issue-495/"
        ],
        "pubDate": [
            "Wed, 09 Mar 2022 21:25:19 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-495/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn which new features are starting to land in browsers, how to create performant animations, how selectmenu element works, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/new-css-features-2022/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">New CSS Features In 2022</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2022/03/new-css-features-2022/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/new-css-features-2022.jpg\" alt=\"New CSS Features In 2022\" /></a>\n\t\t\t\t\t\t<p>Michelle Barker looks at a couple of new CSS features that are already starting to land in browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/new-css-features-2022/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.freecodecamp.org/news/web-animation-performance-fundamentals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Web Animation Performance Fundamentals – How to Make Your Pages Look Smooth</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.freecodecamp.org/news/web-animation-performance-fundamentals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/web-animation-performance-fundamentals.jpg\" alt=\"Web Animation Performance Fundamentals – How to Make Your Pages Look Smooth\" /></a>\n\t\t\t\t\t\t<p>Reza Lavarian gives an in-depth introduction to creating performant animations on the web.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.freecodecamp.org/news/web-animation-performance-fundamentals/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/retool-20220308\">Create a better interface for any business problem with Retool</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/retool-20220308\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/retool-build-internal-tools-remarkably-fast.jpg\" alt=\"Create a better interface for any business problem with Retool\" /></a>\n\t\t\t\t\t\t<p>You don&#8217;t have to be a frontend expert to build beautiful apps. Retool provides a powerful platform to build UI, connect to data, and publish your app 10x faster. Skip boilerplate code with 90+ pre-built components, and write code nearly anywhere to customize how your apps look and work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/retool-20220308\">Explore our component library here</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/the-selectmenu-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Say Hello to selectmenu, a Fully Style-able select Element</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Patrick Brosset introduces a new, experimental form control called <code>&lt;selectmenu&gt;</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/the-selectmenu-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/building-web-layouts-dual-screen-foldable-devices/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building Web Layouts For Dual-Screen And Foldable Devices</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stephanie Stimac shares a guide to optimizing your layouts for dual-screen and foldable devices.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/building-web-layouts-dual-screen-foldable-devices/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-custom-highlight-api-early-loo/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Custom Highlight API: The Future of Highlighting Text Ranges on the Web</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Patrick Brosset explains how to style text ranges using the upcoming CSS Custom Highlight API.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-custom-highlight-api-early-loo/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://rd.nytimes.com/projects/delivering-3d-scenes-to-the-web?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Delivering 3D Scenes to the Web</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jonathan Cohrs, Mint Boonyapanachoti, Sukanya Aneja, Avner Peled, Willa Köerner, and Minkyoung Kim share their process for optimizing 3D models for the web.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://rd.nytimes.com/projects/delivering-3d-scenes-to-the-web?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://gomakethings.com/progressive-enhancement-the-new-hotness/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Progressive Enhancement, the New Hotness</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Chris Ferdinandi reminds us how progressive enhancement works and why we should use it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://gomakethings.com/progressive-enhancement-the-new-hotness/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-09032022\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-09032022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/10/debugging-css1.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>A fantastic book by Ahmad Shadeed full of tips and techniques on how to debug CSS. It will help you significantly improve your CSS debugging skills.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-09032022\">Find out More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://wpt.fyi/interop-2022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Interop 2022 Dashboard</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A dashboard that tracks the progress of browser interoperability in 15 focus areas and 3 joint investigation efforts.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://wpt.fyi/interop-2022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/BMSVieira/letmescroll.js?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">LetMeScroll.js</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>LetMeScroll is a dependency-free Javascript library that makes Scroll easier to use and customize.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/BMSVieira/letmescroll.js?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/idrinkcss/pen/gOXqvWq?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Ken Kaneki (Pure CSS)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/idrinkcss/pen/gOXqvWq?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/ken-kaneki-pure-css.jpg\" alt=\"Ken Kaneki (Pure CSS)\" /></a>\n\t\t\t\t\t\t<p>Ronnie Lee created an impressive illustration using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/idrinkcss/pen/gOXqvWq?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn which new features are starting to land in browsers, how to create\nperformant animations, how selectmenu element works, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "An Introduction to User Journey Maps"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/an-introduction-to-user-journey-maps/?utm_source=rss\"\n              title=\"An Introduction to User Journey Maps\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping.jpg\"\n        alt=\"An Introduction to User Journey Maps\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Understanding user experience is crucial for successful business. Learn how user journey maps help to optimize your products and services.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/an-introduction-to-user-journey-maps/?utm_source=rss\">An Introduction to User Journey Maps</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/an-introduction-to-user-journey-maps/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258638",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX"
        ],
        "dc:creator": [
            "Stéphanie Walter"
        ],
        "pubDate": [
            "Tue, 08 Mar 2022 17:33:58 GMT"
        ],
        "plainDescription": "An Introduction to User Journey Maps\n[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646355867user-journey-mapping.jpg]\n[https://www.sitepoint.com/an-introduction-to-user-journey-maps/?utm_...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #497"
        ],
        "link": [
            "https://css-weekly.com/issue-497/"
        ],
        "pubDate": [
            "Wed, 23 Mar 2022 20:44:36 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-497/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to build a loading bar with the <progress> element, how Forced Colors Mode works, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-a-loading-bar-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building a Loading Bar Component</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://web.dev/building-a-loading-bar-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/building-a-loading-bar-component.jpg\" alt=\"Building a Loading Bar Component\" /></a>\n\t\t\t\t\t\t<p>Adam Argyle gives a foundational overview of how to build a color adaptive and accessible loading bar with the &lt;progress&gt; element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-a-loading-bar-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/windows-high-contrast-colors-mode-css-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Windows High Contrast Mode, Forced Colors Mode and CSS Custom Properties</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2022/03/windows-high-contrast-colors-mode-css-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/windows-high-contrast-colors-mode-css-custom-properties.jpg\" alt=\"Windows High Contrast Mode, Forced Colors Mode and CSS Custom Properties\" /></a>\n\t\t\t\t\t\t<p>Eric Bailey explains how modern CSS is a powerful piece of assistive technology that can help you create flexible, maintainable, and adaptive digital experiences.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/windows-high-contrast-colors-mode-css-custom-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/omlet\">Build faster by actually using your components 🚀</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/omlet\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/omlet-build-faster-by-actually-using-your-components1.jpg\" alt=\"Build faster by actually using your components 🚀\" /></a>\n\t\t\t\t\t\t<p>Hot out the oven! Omlet is a zero-config component registry and monitoring platform for front-end teams to drive design system adoption. Uncover all your reusable and custom components with analytics and explore how they are used in your product.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/omlet\">Get early access now</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ryanmulligan.dev/blog/themes-and-schemes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Website Themes and Color Schemes</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ryan Mulligan shows how to tailor site themes based on light and dark mode preferences.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ryanmulligan.dev/blog/themes-and-schemes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/claymorphism-css-ui-design-trend/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Claymorphism: Will It Stick Around?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adrian Bece explores if there is room for Claymorphism on the UI and how we can create this effect with CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/claymorphism-css-ui-design-trend/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://designmodo.com/html-css-emails/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">HTML and CSS in Emails: What Works in 2022?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Daniel Schwarz gives an overview of various HTML and CSS features and explains if you should (or shouldn’t) use them in email templates.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://designmodo.com/html-css-emails/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.logrocket.com/deep-dive-css-where-function/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Deep Dive Into the CSS :where() function</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Pelumi Akintokun shares an introduction to the <code>:where()</code> pseudo-class function.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.logrocket.com/deep-dive-css-where-function/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://markdotto.com/2022/03/16/dialog-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Fun With the Dialog Element</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Mark Otto gives a short introduction to the &lt;dialog&gt; element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://markdotto.com/2022/03/16/dialog-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-23032022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-23032022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/10/debugging-css1.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>A fantastic book by Ahmad Shadeed full of tips and techniques on how to debug CSS. It will help you significantly improve your CSS debugging skills.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-23032022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get it</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://stylojs.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Stylo</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stylo is an open-source WYSIWYG interactive editor for JavaScript with no dependencies.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://stylojs.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.magiceraser.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Magic Eraser</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Magic Eraser is an online tool that removes unwanted things from your images.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.magiceraser.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/mdusmanansari/pen/BamepLe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Blossoming Flowers at Magical Night</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/mdusmanansari/pen/BamepLe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/css-blossoming-flowers-at-magical-night.jpg\" alt=\"CSS Blossoming Flowers at Magical Night\" /></a>\n\t\t\t\t\t\t<p>Md Usman Ansari created a stunning, animated illustration using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/mdusmanansari/pen/BamepLe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how to build a loading bar with the element, how Forced Colors Mode works,\nand more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Avoiding the Pitfalls of Nested Components in a Design System"
        ],
        "link": [
            "https://css-tricks.com/nested-components-in-a-design-system/"
        ],
        "comments": [
            "https://css-tricks.com/nested-components-in-a-design-system/#comments"
        ],
        "dc:creator": [
            "Dan Christofi"
        ],
        "pubDate": [
            "Tue, 26 Apr 2022 14:30:20 +0000"
        ],
        "category": [
            "Article",
            "components",
            "responsive",
            "vue"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=365359",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>When creating a component-based, front-end infrastructure, one of the biggest pain points I’ve personally encountered is making components that are both reusable and responsive when there are nested components within components.</p>\n<p>Take the following “call to action” (<code>&#60;CTA /&#62;</code>&#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/nested-components-in-a-design-system/\">Avoiding the Pitfalls of Nested Components in a Design System</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>When creating a component-based, front-end infrastructure, one of the biggest pain points I’ve personally encountered is making components that are both reusable and responsive when there are nested components within components.</p>\n\n\n\n<span id=\"more-365359\"></span>\n\n\n\n<p>Take the following “call to action” (<code>&lt;CTA /&gt;</code>) component, for example:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1572\" height=\"356\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?resize=1572%2C356&#038;ssl=1\" alt=\"\" class=\"wp-image-365360\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?w=1572&amp;ssl=1 1572w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?resize=300%2C68&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?resize=1024%2C232&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?resize=768%2C174&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814389193_image.png?resize=1536%2C348&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>On smaller devices we want it to look like this:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1572\" height=\"476\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?resize=1572%2C476&#038;ssl=1\" alt=\"\" class=\"wp-image-365361\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?w=1572&amp;ssl=1 1572w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?resize=300%2C91&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?resize=1024%2C310&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?resize=768%2C233&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814422197_image.png?resize=1536%2C465&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>This is simple enough with basic media queries. If we’re using flexbox, a media query can change the flex direction and makes the button go the full width. But we run into a problem when we start nesting other components in there. For example, say we’re using a component for the button and it already has a prop that makes it full-width. We are actually duplicating the button’s styling when applying a media query to the parent component. The nested button is already capable of handling it!</p>\n\n\n\n<p>This is a small example and it wouldn’t be that bad of a problem, but for other scenarios it could cause a lot of duplicated code to replicate the styling. What if in the future we wanted to change something about how full-width buttons are styled? We’d need to go through and change it in all these different places. We should be able to change it in the button component and have that update everywhere.</p>\n\n\n\n<p><strong>Wouldn’t it be nice if we could move away from media queries and have more control of the styling?</strong> We should be using a component’s existing props and be able to pass different values based on the screen width.</p>\n\n\n\n<p>Well, I have a way to do that and will show you how I did it.</p>\n\n\n\n<p class=\"is-style-explanation\">I am aware that <a href=\"https://caniuse.com/css-container-queries\" rel=\"noopener\">container queries</a> can solve a lot of these issues, but it’s still in early days and doesn’t solve the issue with passing a variety of props based on screen width.</p>\n\n\n\n<h3>Tracking the window width</h3>\n\n\n\n<p>First, we need to track the current width of the page and set a breakpoint. This can be done with any front-end framework, but I’m using a <a href=\"https://vuejs.org/guide/reusability/composables.html\" rel=\"noopener\">Vue composable</a> here as to demonstrate the idea:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// composables/useBreakpoints.js\n\nimport { readonly, ref } from \"vue\";\n\nconst bps = ref({ xs: 0, sm: 1, md: 2, lg: 3, xl: 4 })\nconst currentBreakpoint = ref(bps.xl);\n\nexport default () => {\n  const updateBreakpoint = () => {\n  \n    const windowWidth = window.innerWidth;\n    \n    if(windowWidth >= 1200) {\n      currentBreakpoint.value = bps.xl\n    } else if(windowWidth >= 992) {\n      currentBreakpoint.value = bps.lg\n    } else if(windowWidth >= 768) {\n      currentBreakpoint.value = bps.md\n    } else if(windowWidth >= 576) {\n      currentBreakpoint.value = bps.sm\n    } else {\n      currentBreakpoint.value = bps.xs\n    }\n  }\n\n  return {\n    currentBreakpoint: readonly(currentBreakpoint),\n    bps: readonly(bps),\n    updateBreakpoint,\n  };\n};</code></pre>\n\n\n\n<p class=\"is-style-explanation\">The reason we are using numbers for the <code>currentBreakpoint</code> object will become clear later.</p>\n\n\n\n<p>Now we can listen for window resize events and update the current breakpoint using the composable in the main <code>App.vue</code> file:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// App.vue\n\n&lt;script>\nimport useBreakpoints from \"@/composables/useBreakpoints\";\nimport { onMounted, onUnmounted } from 'vue'\n\nexport default {\n  name: 'App',\n  \n  setup() {\n    const { updateBreakpoint } = useBreakpoints()\n\n    onMounted(() => {\n      updateBreakpoint();\n      window.addEventListener('resize', updateBreakpoint)\n    })\n\n    onUnmounted(() => {\n      window.removeEventListener('resize', updateBreakpoint)\n    })\n  }\n}\n&lt;/script></code></pre>\n\n\n\n<p class=\"is-style-explanation\">We probably want this to be debounced, but I’m keeping things simple for brevity.</p>\n\n\n\n<h3>Styling components</h3>\n\n\n\n<p>We can update the <code>&lt;CTA /&gt;</code> component to accept a new prop for how it should be styled:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// CTA.vue\nprops: {\n  displayMode: {\n    type: String,\n    default: \"default\"\n  }\n}</code></pre>\n\n\n\n<p class=\"is-style-explanation\">The naming here is totally arbitrary. You can use whatever names you’d like for each of the component modes.</p>\n\n\n\n<p>We can then use this prop to change the mode based on the current breakpoint:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;CTA :display-mode=\"currentBreakpoint > bps.md ? 'default' : 'compact'\" /></code></pre>\n\n\n\n<p>You can see now why we’re using a number to represent the current breakpoint — it’s so the correct mode can be applied to all breakpoints below or above a certain number.</p>\n\n\n\n<p>We can then use this in the CTA component to style according to the mode passed through:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"4,11,39,40,41,42,43,44,45\"><code markup=\"tt\">// components/CTA.vue\n\n&lt;template>\n  &lt;div class=\"cta\" :class=\"displayMode\">\n    \n    &lt;div class=\"cta-content\">\n      &lt;h5>title&lt;/h5>\n      &lt;p>description&lt;/p>\n    &lt;/div>\n    \n    &lt;Btn :block=\"displayMode === 'compact'\">Continue&lt;/Btn>\n    \n  &lt;/div>\n&lt;/template>\n\n&lt;script>\nimport Btn from \"@/components/ui/Btn\";\nexport default {\n  name: \"CTA\",\n  components: { Btn },\n  props: {\n    displayMode: {\n      type: String,\n      default: \"default\"\n    },\n  }\n}\n&lt;/script>\n\n&lt;style scoped lang=\"scss\">\n.cta {\n  display: flex;\n  align-items: center;\n  \n  .cta-content {\n    margin-right: 2rem;\n  }\n\n  &amp;.compact {\n    flex-direction: column;\n    .cta-content {\n      margin-right: 0;\n      margin-bottom: 2rem;\n    }\n  }\n}\n&lt;/style></code></pre>\n\n\n\n<p>Already, we have removed the need for media queries! You can see this in action on a <a href=\"https://portfolio-dashboard-vue.vercel.app\" rel=\"noopener\">demo page</a> I created.</p>\n\n\n\n<p>Admittedly, this may seem like a lengthy process for something so simple. But when applied to multiple components, this approach can massively improve the consistency and stability of the UI while reducing the total amount of code we need to write. This way of using JavaScript and CSS classes to control the responsive styling also has another benefit&#8230;</p>\n\n\n\n<h3>Extensible functionality for nested components</h3>\n\n\n\n<p>There have been scenarios where I’ve needed to revert back to a previous breakpoint for a component. For example, if it takes up 50% of the screen, I want it displayed in the small mode. But at a certain screen size, it becomes full-width. In other words, the mode should change one way or the other when there’s a resize event.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1568\" height=\"1596\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?resize=1568%2C1596&#038;ssl=1\" alt=\"Showing three versions of a call-to-action components with nested components within it.\" class=\"wp-image-365363\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?w=1568&amp;ssl=1 1568w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?resize=295%2C300&amp;ssl=1 295w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?resize=1006%2C1024&amp;ssl=1 1006w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?resize=768%2C782&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_8FB1A34D3B42EB2FAABC1B0902B1D817308ADDA3EAD62115216999C28090D538_1643814777959_image.png?resize=1509%2C1536&amp;ssl=1 1509w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>I’ve also been in situations where the same component is used in different modes on different pages. This isn’t something that frameworks like Bootstrap and Tailwind can do, and using media queries to pull it off would be a nightmare. (You can still use those frameworks using this technique, just without the need for the responsive classes they provide.)</p>\n\n\n\n<p>We <em>could</em> use a media query that only applies to middle sized screens, but this doesn’t solve the issue with varying props based on screen width. Thankfully, the approach we’re covering can solve that. We can modify the previous code to allow for a custom mode per breakpoint by passing it through an array, with the first item in the array being the smallest screen size.</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;CTA :custom-mode=\"['compact', 'default', 'compact']\" /></code></pre>\n\n\n\n<p>First, let’s update the props that the <code>&lt;CTA /&gt;</code> component can accept:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">props: {\n  displayMode: {\n    type: String,\n    default: \"default\"\n  },\n  customMode: {\n    type: [Boolean, Array],\n    default: false\n  },\n}</code></pre>\n\n\n\n<p>We can then add the following to generate to correct mode:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import { computed } from \"vue\";\nimport useBreakpoints from \"@/composables/useBreakpoints\";\n\n// ...\n\nsetup(props) {\n\n  const { currentBreakpoint } = useBreakpoints()\n\n  const mode = computed(() => {\n    if(props.customMode) {\n      return props.customMode[currentBreakpoint.value] ?? props.displayMode\n    }\n    return props.displayMode\n  })\n\n  return { mode }\n},</code></pre>\n\n\n\n<p>This is taking the mode from the array based on the current breakpoint, and defaults to the <code>displayMode</code> if one isn’t found. Then we can use <code>mode</code> instead to style the component.</p>\n\n\n\n<h3>Extraction for reusability</h3>\n\n\n\n<p>Many of these methods can be extracted into additional composables and mixins that can be reuseD with other components.</p>\n\n\n\n<h4>Extracting computed mode</h4>\n\n\n\n<p>The logic for returning the correct mode can be extracted into a composable:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// composables/useResponsive.js\n\nimport { computed } from \"vue\";\nimport useBreakpoints from \"@/composables/useBreakpoints\";\n\nexport const useResponsive = (props) => {\n\n  const { currentBreakpoint } = useBreakpoints()\n\n  const mode = computed(() => {\n    if(props.customMode) {\n      return props.customMode[currentBreakpoint.value] ?? props.displayMode\n    }\n    return props.displayMode\n  })\n\n  return { mode }\n}</code></pre>\n\n\n\n<h4>Extracting props</h4>\n\n\n\n<p>In Vue 2, we could repeat props was by using mixins, but there are <a href=\"https://css-tricks.com/how-the-vue-composition-api-replaces-vue-mixins/\">noticeable drawbacks</a>. Vue 3 allows us to merge these with other props using the same composable. There’s a small caveat with this, as IDEs seem unable to recognize props for autocompletion using this method. If this is too annoying, you can use a mixin instead.</p>\n\n\n\n<p>Optionally, we can also pass custom validation to make sure we’re using the modes only available to each component, where the first value passed through to the validator is the default.</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// composables/useResponsive.js\n\n// ...\n\nexport const withResponsiveProps = (validation, props) => {\n  return {\n    displayMode: {\n      type: String,\n      default: validation[0],\n      validator: function (value) {\n        return validation.indexOf(value) !== -1\n      }\n    },\n    customMode: {\n      type: [Boolean, Array],\n      default: false,\n      validator: function (value) {\n        return value ? value.every(mode => validation.includes(mode)) : true\n      }\n    },\n    ...props\n  }\n}</code></pre>\n\n\n\n<p>Now let’s move the logic out and import these instead:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// components/CTA.vue\n\nimport Btn from \"@/components/ui/Btn\";\nimport { useResponsive, withResponsiveProps } from \"@/composables/useResponsive\";\n\nexport default {\n  name: \"CTA\",\n  components: { Btn },\n  props: withResponsiveProps(['default 'compact'], {\n    extraPropExample: {\n      type: String,\n    },\n  }),\n  \n  setup(props) {\n    const { mode } = useResponsive(props)\n    return { mode }\n  }\n}</code></pre>\n\n\n\n<h3>Conclusion</h3>\n\n\n\n<p>Creating a design system of reusable and responsive components is challenging and prone to inconsistencies. Plus, we saw how easy it is to wind up with a load of duplicated code. There’s a fine balance when it comes to creating components that not only work in many contexts, but play well with other components when they’re combined.</p>\n\n\n\n<p>I’m sure you’ve come across this sort of situation in your own work. Using these methods can reduce the problem and hopefully make the UI more stable, reusable, maintainable, and easy to use.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/nested-components-in-a-design-system/\">Avoiding the Pitfalls of Nested Components in a Design System</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/nested-components-in-a-design-system/feed/"
        ],
        "slash:comments": [
            "16"
        ],
        "post-id": [
            {
                "_": "365359",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "When creating a component-based, front-end infrastructure, one of the biggest\npain points I’ve personally encountered is making components that are both\nreusable and responsive when there are nested c...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Issue #493"
        ],
        "link": [
            "https://css-weekly.com/issue-493/"
        ],
        "pubDate": [
            "Wed, 23 Feb 2022 22:30:40 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-493/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how CSS cascade layers work, what the difference is between the mask and clip-path properties, how to use CSS Scroll Snap, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A Complete Guide to CSS Cascade Layers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/a-complete-guide-to-css-cascade-layers.jpg\" alt=\"A Complete Guide to CSS Cascade Layers\" /></a>\n\t\t\t\t\t\t<p>Miriam Suzanne created an in-depth guide to CSS cascade layers, a CSS feature that allows you to define explicitly contained layers of specificity, so that you have complete control over which styles take priority in a project without relying on specificity hacks.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://developer.chrome.com/blog/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Cascade Layers Are Coming to Your Browser</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://developer.chrome.com/blog/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/cascade-layers-are-coming-to-your-browser.png\" alt=\"Cascade Layers Are Coming to Your Browser\" /></a>\n\t\t\t\t\t\t<p>Una Kravets gives a fantastic introduction to CSS cascade layers, a new CSS API to help you manage the cascade precedence of your code.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://developer.chrome.com/blog/cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/spring-summit-2022\">Take your UX + Front-End skills to the next level</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/spring-summit-2022\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/aneventapart-speakers.gif\" alt=\"Take your UX + Front-End skills to the next level\" /></a>\n\t\t\t\t\t\t<p>Looking to up your UX design game?</p>\n<p><em><a href=\"https://cssw.io/spring-summit-2022\" rel=\"noopener\" target=\"_blank\">An Event Apart Spring Summit 2022</a></em> is a three-day online conference with deep insights into advanced CSS, new design frontiers, tackling organizational barriers, container queries, web components, web platform features, SEO + UX, and more. Join us online April 18–20.</p>\n<p>Sign up on or before this Monday, February 28 to take advantage of our Early Bird pricing.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/spring-summit-2022\">See the agenda and register today!</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://polypane.app/blog/how-we-made-the-state-of-css-more-responsive-and-accessible/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How We Made the State of CSS More Responsive and Accessible</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kilian Valkhof shares how he helped make the State Of CSS survey results more responsive and accessible.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://polypane.app/blog/how-we-made-the-state-of-css-more-responsive-and-accessible/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-scroll-snap-slide-deck/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Scroll Snap Slide Deck That Supports Live Coding</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stephanie Eckles demonstrates how to build a no-JavaScript slide deck that allows live editing of CSS demos.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-scroll-snap-slide-deck/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://pimpmytype.com/wordle/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">The Intended Wordle Font, Nobody Can See</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Oliver Schöndorfer explains how and why Wordle would look much better in “Clear Sans” while learning about the CSS font stack and the value of good typography in UIs.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://pimpmytype.com/wordle/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://yuanchuan.dev/using-mask-as-clip-path?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Using mask as <code>clip-path</code></a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Yuan Chuan explains the difference between <code>mask</code> and <code>clip-path</code> properties and outlines when and why you should use the <code>mask</code> property.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://yuanchuan.dev/using-mask-as-clip-path?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://yatil.net/blog/there-is-no-character-limit-for-alt-text?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">There Is No Character Limit for “alt text”</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Eric Eggert debunks a common misconception that alternative text for images has a 125 character limit.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://yatil.net/blog/there-is-no-character-limit-for-alt-text?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debugging-css-16022022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debugging-css-16022022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/10/debugging-css1.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>A fantastic book by Ahmad Shadeed full of tips and techniques on how to debug CSS. It will help you significantly improve your CSS debugging skills.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debugging-css-16022022?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Find out More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://tsh.io/state-of-frontend/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">State of Frontend 2022</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A popular frontend survey is now open. Make sure you participate so we can get as diverse and realistic results about the state of frontend.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://tsh.io/state-of-frontend/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://repobeats.axiom.co/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Repobeats</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Repobeats is a tool that will help you create a stunning insights section for your GitHub readme.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://repobeats.axiom.co/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/josetxu/pen/vYWrddJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Goundhog Day Alarm Clock Radio</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/josetxu/pen/vYWrddJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/css-groundhog-day-alarm-clock-radio.jpg\" alt=\"Goundhog Day Alarm Clock Radio\" /></a>\n\t\t\t\t\t\t<p>Josetxu López Barajas created a stunning, interactive demo using CSS and a bit of JavaScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/josetxu/pen/vYWrddJ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how CSS cascade layers work, what the difference is between the mask and\nclip-path properties, how to use CSS Scroll Snap, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "How to Expand Your Engineering Skill Set Without Quitting Your Day Job"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss\"\n              title=\"How to Expand Your Engineering Skill Set Without Quitting Your Day Job\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills.jpg\"\n        alt=\"How to Expand Your Engineering Skill Set Without Quitting Your Day Job\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Expanding your skills is a great way to progress in your engineering career. Learn how to advance your career without quitting your job.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss\">How to Expand Your Engineering Skill Set Without Quitting Your Day Job</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-expand-your-engineering-skill-set-without-quitting-your-day-job/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=204794",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Merilyn Chesler"
        ],
        "pubDate": [
            "Thu, 16 Sep 2021 02:00:26 GMT"
        ],
        "plainDescription": "How to Expand Your Engineering Skill Set Without Quitting Your Day Job\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631671874engineering-skills.jpg]\n[https://www.sitepoint.com/how-to-exp...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Collective #709"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-709/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 28 Apr 2022 16:29:38 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=63450",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>CSS Toggles Explainer &#038; Proposal * HyperUI * Web color is still broken * Progressively Enhanced Builds</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-709/\">Collective #709</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.exoape.com/\"><img loading=\"lazy\" width=\"350\" height=\"218\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_WOTW.jpg\" alt=\"\" class=\"wp-image-63466\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.exoape.com/\">Inspirational Website of the Week: Exo Ape</a></h2>\n<p class=\"ct-coll-p\">Exo Ape&#8217;s website design is a class of its own: a super smooth scroll experience with lots of meaningful details and impeccable visuals. Our pick this week.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.exoape.com/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item ct-coll-item--sponsor\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n<a class=\"ct-coll-thumb\" href=\"https://cssday.nl/2022\" rel=\"nofollow sponsored noopener\" target=\"_blank\"><img loading=\"lazy\" width=\"350\" height=\"350\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_CSSday.png\" alt=\"\" class=\"wp-image-63474\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_CSSday.png 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_CSSday-300x300.png 300w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_CSSday-105x105.png 105w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<div class=\"ct-coll-sponsorship\">Our Sponsor</div>\n<h2><a href=\"https://cssday.nl/2022\" style=\"max-width: 18ch;display: block; padding: 1rem 0 0; text-decoration: none;\" rel=\"nofollow sponsored noopener\" target=\"_blank\">CSS Day conference, June 9–10, Amsterdam, The Netherlands</a></h2>\n<p class=\"ct-coll-p\">Also prefer fundamental CSS knowledge over hypes? Then join CSS Day, a deep-diving CSS conference in Amsterdam, NL. Our speakers treat CSS topics that the attendees can geek out on. On 9th &amp; 10th of June, after a two-year silence, we&#8217;ll host our 8th edition.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" href=\"https://cssday.nl/2022\" rel=\"nofollow sponsored noopener\">See our line-up</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://css.oddbird.net/toggles/explainer/\"><img loading=\"lazy\" width=\"350\" height=\"349\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_toggles.jpg\" alt=\"\" class=\"wp-image-63472\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_toggles.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_toggles-301x300.jpg 301w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_toggles-105x105.jpg 105w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://css.oddbird.net/toggles/explainer/\">CSS Toggles Explainer &amp; Proposal</a></h2>\n<p class=\"ct-coll-p\">Explainer and proposal of CSS toggles by Miriam Suzanne and Tab Atkins Jr.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://css.oddbird.net/toggles/explainer/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.hyperui.dev/\"><img loading=\"lazy\" width=\"350\" height=\"296\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_hyper.jpg\" alt=\"\" class=\"wp-image-63470\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.hyperui.dev/\">HyperUI</a></h2>\n<p class=\"ct-coll-p\">Free Tailwind CSS components that can be used in your next project. Perfect for Laravel, Rails, React, Vue and more.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.hyperui.dev/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://alistairshepherd.uk/writing/svg-generative-ridges/\"><img loading=\"lazy\" width=\"350\" height=\"282\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_mountains.jpg\" alt=\"\" class=\"wp-image-63471\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://alistairshepherd.uk/writing/svg-generative-ridges/\">SVG generative mountain ridge dividers</a></h2>\n<p class=\"ct-coll-p\">Learn about creating generative mountain ridge dividers using videogame terrain generation techniques, JavaScript and SVG. By Alistair Shepherd.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://alistairshepherd.uk/writing/svg-generative-ridges/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://cloudfour.com/thinks/childish-font-sizes/\"><img loading=\"lazy\" width=\"350\" height=\"241\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_childish.jpg\" alt=\"\" class=\"wp-image-63455\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://cloudfour.com/thinks/childish-font-sizes/\">Childish Font Sizes</a></h2>\n<p class=\"ct-coll-p\">Tyler Sticka provides some reasons to go even larger than the 16 pixel font size for body copy.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://cloudfour.com/thinks/childish-font-sizes/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://meyerweb.com/eric/thoughts/2022/04/26/flexibly-centering-an-element-with-side-aligned-content/\"><img loading=\"lazy\" width=\"350\" height=\"220\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_align.jpg\" alt=\"\" class=\"wp-image-63467\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://meyerweb.com/eric/thoughts/2022/04/26/flexibly-centering-an-element-with-side-aligned-content/\">Flexibly Centering an Element with Side-Aligned Content</a></h2>\n<p class=\"ct-coll-p\">Eric Meyer shows how to solve a specific layout problem using a modern CSS technique.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://meyerweb.com/eric/thoughts/2022/04/26/flexibly-centering-an-element-with-side-aligned-content/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2022/04/22/progressive-enhancement-and-html-forms-use-formdata/\"><img loading=\"lazy\" width=\"350\" height=\"169\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_formdata.jpg\" alt=\"\" class=\"wp-image-63469\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.bram.us/2022/04/22/progressive-enhancement-and-html-forms-use-formdata/\">Progressive Enhancement and HTML Forms: use FormData</a></h2>\n<p class=\"ct-coll-p\">Learn how to use FormData to apply Progressive Enhancement on HTML forms. By Bramus Van Damme.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.bram.us/2022/04/22/progressive-enhancement-and-html-forms-use-formdata/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.insanelyusefulwebsites.com/\"><img loading=\"lazy\" width=\"350\" height=\"300\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_usefulwebsites.jpg\" alt=\"\" class=\"wp-image-63464\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.insanelyusefulwebsites.com/\">Insanely Useful Websites</a></h2>\n<p class=\"ct-coll-p\">Discover super useful websites you didn&#8217;t know existed.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.insanelyusefulwebsites.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://webcolorisstillbroken.com/\"><img loading=\"lazy\" width=\"350\" height=\"351\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_colors.jpg\" alt=\"\" class=\"wp-image-63456\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_colors.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_colors-299x300.jpg 299w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_colors-105x105.jpg 105w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://webcolorisstillbroken.com/\">Web color is still broken</a></h2>\n<p class=\"ct-coll-p\">A visual guide and some interesting insight into why web color is broken.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://webcolorisstillbroken.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/zalobnymichal/status/1519040911770103811\"><img loading=\"lazy\" width=\"350\" height=\"220\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_webgl.jpg\" alt=\"\" class=\"wp-image-63473\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://twitter.com/zalobnymichal/status/1519040911770103811\">WebGL project</a></h2>\n<p class=\"ct-coll-p\">Michal Zalobny created a fantastic Three.js project based on a course by Luis Henrique Bizarro.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://twitter.com/zalobnymichal/status/1519040911770103811\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://neal.fun/earth-reviews/\"><img loading=\"lazy\" width=\"350\" height=\"292\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_earth.jpg\" alt=\"\" class=\"wp-image-63468\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://neal.fun/earth-reviews/\">Earth Reviews</a></h2>\n<p class=\"ct-coll-p\">Help improve the earth simulation with these humorous reviews.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://neal.fun/earth-reviews/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://stackdiary.com/centering-in-css/\"><img loading=\"lazy\" width=\"350\" height=\"191\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_centeringcss.jpg\" alt=\"\" class=\"wp-image-63454\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://stackdiary.com/centering-in-css/\">A Practical Guide to Centering in CSS</a></h2>\n<p class=\"ct-coll-p\">How do you center a div in CSS? This reference explains various methods to center elements using CSS, including techniques for Grid and Flexbox.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://stackdiary.com/centering-in-css/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://slowsocial.us/\"><img loading=\"lazy\" width=\"350\" height=\"266\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_social.jpg\" alt=\"\" class=\"wp-image-63461\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://slowsocial.us/\">Slow Social</a></h2>\n<p class=\"ct-coll-p\">A social network built for friends, not influencers.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://slowsocial.us/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ruilisi/fortune-sheet\"><img loading=\"lazy\" width=\"350\" height=\"332\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_Fortune.jpg\" alt=\"\" class=\"wp-image-63458\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_Fortune.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_Fortune-316x300.jpg 316w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/ruilisi/fortune-sheet\">FortuneSheet</a></h2>\n<p class=\"ct-coll-p\">A drop-in JavaScript spreadsheet library that provides rich features like Excel and Google Sheets.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/ruilisi/fortune-sheet\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.jim-nielsen.com/2022/progressively-enhanced-builds/\"><img loading=\"lazy\" width=\"350\" height=\"266\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_8.jpg\" alt=\"\" class=\"wp-image-63453\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://blog.jim-nielsen.com/2022/progressively-enhanced-builds/\">Progressively Enhanced Builds</a></h2>\n<p class=\"ct-coll-p\">Some thoughts on progressively enhanced builds Jim Nielsen.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.jim-nielsen.com/2022/progressively-enhanced-builds/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://schollz.com/blog/one-line/\"><img loading=\"lazy\" width=\"350\" height=\"308\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_oneline.jpg\" alt=\"\" class=\"wp-image-63459\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_oneline.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_oneline-341x300.jpg 341w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://schollz.com/blog/one-line/\">One-line drawings</a></h2>\n<p class=\"ct-coll-p\">Zack Scholl shows how he created software to reconstruct one-line drawings.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://schollz.com/blog/one-line/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dimensionhq/fleet\"><img loading=\"lazy\" width=\"350\" height=\"232\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_Fleeet.jpg\" alt=\"\" class=\"wp-image-63457\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/dimensionhq/fleet\">Fleet (beta)</a></h2>\n<p class=\"ct-coll-p\">Fleet is the blazing fast build tool for Rust. Compiling with Fleet is up-to 5x faster than with cargo.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/dimensionhq/fleet\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://lookscanned.io/\"><img loading=\"lazy\" width=\"350\" height=\"271\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_scan.jpg\" alt=\"\" class=\"wp-image-63460\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://lookscanned.io/\">Look Scanned</a></h2>\n<p class=\"ct-coll-p\">Look Scanned is a pure frontend site that makes your PDFs look scanned.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://lookscanned.io/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/\"><img loading=\"lazy\" width=\"350\" height=\"261\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_uiroundup.jpg\" alt=\"\" class=\"wp-image-63463\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/\">UI Interactions &amp; Animations Roundup #23 &#8211; Codrops</a></h2>\n<p class=\"ct-coll-p\">A fresh set of selected motion design shots for your inspiration.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/C709_windland.jpg\" alt=\"\" class=\"wp-image-63465\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/\">Case Study: Windland — An Immersive Three.js Experience</a></h2>\n<p class=\"ct-coll-p\">\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/\">Check it out</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-709/\">Collective #709</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "CSS Toggles Explainer & Proposal * HyperUI * Web color is still broken *\nProgressively Enhanced Builds\n\nThe post Collective #709\n[https://tympanus.net/codrops/collective/collective-709/] appeared firs...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Why I don't use LinkedIn and Why you should also!"
        ],
        "dc:creator": [
            "Mohammed Nadeem Shareef"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:36:09 +0000"
        ],
        "link": [
            "https://dev.to/shareef/why-i-dont-use-linkedin-and-why-you-should-also-4k52"
        ],
        "guid": [
            "https://dev.to/shareef/why-i-dont-use-linkedin-and-why-you-should-also-4k52"
        ],
        "description": [
            "<p><strong>Hello Developers 🖐🖐</strong></p>\n\n<p>In this article, I'm discussing why I don't use LinkedIn much and why you should also stop using it. LinkedIn is used by millions of humans, as I am a developer I can only write about the perspective of a developer. Disclaimer everything in this article will be from the point of view of a developer.</p>\n\n<h3>\n  \n  \n  Why you should have a LinkedIn account.\n</h3>\n\n<p>First and foremost, let's discuss why everybody tells you to have a LinkedIn account.</p>\n\n<ul>\n<li><strong>You will gain exposure to Hiring Managers and Recruiters</strong></li>\n<li><strong>You will get offers from your LinkedIn profile.</strong></li>\n<li><strong>You will get to know about Job Postings.</strong></li>\n<li><strong>You can gain social proof of your skills and talents</strong></li>\n<li><strong>LinkedIn can help rank your name on Google</strong></li>\n</ul>\n\n<p>These points seem fair and promising, but this is not the reality of LinkedIn today.</p>\n\n<h3>\n  \n  \n  The Reality Check 🙀 !\n</h3>\n\n<p>It's all fake, fake, and fake. Yeah, you heard me right. It's all fake, what I see whenever I open my LinkedIn. MOTIVATION, Some random dude did some small thing and shared it by over-exaggeration, someone likes or comments on something, random job posting, which I would never apply to.</p>\n\n<h3>\n  \n  \n  What I hate about LinkedIn\n</h3>\n\n<ul>\n<li><p>MOTIVATION, the number of motivational quotes that are there in my feed just makes me irritating. There are more people wanting to motivate than the number of people who want to get motivated.</p></li>\n<li><p>Job alerts, I wonder who is posting tens of jobs on a daily basis. And the information about the job is useless. They want you to have the knowledge of all the programming languages from the time they are made 🙂🙂🙂. And the cherry on the cake it the pay range is not disclosed by the company. If the employers of LinkedIn read my blog (It will not reach them probably) please make the requirement limited and make the pay range mandatory.</p></li>\n<li><p>Some likes or comments on something. For the sake of humanity I don't want to know what my connections are linking and commenting on, please just remove this feature or make it an optional feature so that people who want it can enable it (Hopefully no one wants to).</p></li>\n<li><p>It's all fake. There is no measure to check if something is fake or not. For instance, I have added in my experience that I am working at Google as a Frontend Architecture from Jan 2020 and It is showing on my profile. Check it <a href=\"https://www.linkedin.com/in/nadeem-shareef-7a8394182/\">here</a>.</p></li>\n<li><p>I could go on like this for hours, but I think you get my point.</p></li>\n</ul>\n\n<h3>\n  \n  \n  Alternatives of LinkedIn.\n</h3>\n\n<ul>\n<li>Github. Github is a great website to show your coding experience and your consistency through daily commits. However, it is only limited to developers.</li>\n<li>Dev Community. Dev.to is a great blogging site, and I get plenty of offers from my Dev profile.</li>\n<li>Hashnode. It is also a blogging site. It offers a lot of features free of cost.</li>\n<li>Twitter. I don't promote Twitter as much as Github and Dev, but I would say it is better than LinkedIn.</li>\n</ul>\n\n<p>Let me know what are your thoughts, agree, or disagree. Let me know in the comments.</p>\n\n<p>Closing here<br>\nThis is <strong>shareef</strong></p>\n\n<ul>\n<li>My <a href=\"https://portfolio.shareef.vercel.app/\">Portfolio</a>\n</li>\n<li>Twitter <a href=\"https://twitter.com/shareefBhai99\">ShareefBhai99</a>\n</li>\n<li><a href=\"https://www.linkedin.com/in/nadeem-shareef-7a8394182/\">Linkedin</a></li>\n</ul>\n\n"
        ],
        "category": [
            "discuss",
            "webdev",
            "career",
            "showdev"
        ],
        "plainDescription": "Hello Developers 🖐🖐\n\nIn this article, I'm discussing why I don't use LinkedIn much and why you should\nalso stop using it. LinkedIn is used by millions of humans, as I am a developer\nI can only write...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "How to Create a CSS Typewriter Effect for Your Website"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss\"\n              title=\"How to Create a CSS Typewriter Effect for Your Website\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect.jpg\"\n        alt=\"How to Create a CSS Typewriter Effect for your Website\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            There are lots of cool ways to add interest and delight to your web pages with CSS. Learn how to create an animated CSS typewriter effect.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss\">How to Create a CSS Typewriter Effect for Your Website</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/css-typewriter-effect/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207175",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Animation",
            "CSS",
            "HTML & CSS"
        ],
        "dc:creator": [
            "Matt Nikonorov"
        ],
        "pubDate": [
            "Tue, 12 Oct 2021 02:00:04 GMT"
        ],
        "plainDescription": "How to Create a CSS Typewriter Effect for your Website\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633674699css-typewriter-effect.jpg]\n[https://www.sitepoint.com/css-typewriter-effect/?...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Get Started with Social Media Automation"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss\"\n              title=\"How to Get Started with Social Media Automation\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation.jpg\"\n        alt=\"How To Get Started with Social Media Automation\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Automation tools can enhance your social media management. Learn how to leverage social media automation to improve your content strategy.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss\">How to Get Started with Social Media Automation</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/social-media-automation-getting-started/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207482",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Low Code",
            "Web"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Mon, 25 Oct 2021 02:00:41 GMT"
        ],
        "plainDescription": "How To Get Started with Social Media Automation\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634863009social-media-automation.jpg]\n[https://www.sitepoint.com/social-media-automation-gett...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Remove a Background in Photoshop: 6 Quick & Easy Methods"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss\"\n              title=\"How to Remove a Background in Photoshop: 6 Quick & Easy Methods\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg\"\n        alt=\"How to Quickly and Easily Remove a Background in Photoshop\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop-300x157.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg 600w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Need to remove an image background? Learn six ways to remove a background in Photoshop, depending on the kind of image you're working with.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss\">How to Remove a Background in Photoshop: 6 Quick & Easy Methods</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/remove-background-photoshop/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/blogs/?p=15218",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX",
            "Photography & Imagery",
            "Photoshop"
        ],
        "dc:creator": [
            "Amber Leigh Turner"
        ],
        "pubDate": [
            "Mon, 14 Feb 2022 09:01:00 GMT"
        ],
        "plainDescription": "How to Quickly and Easily Remove a Background in Photoshop\n[https://uploads.sitepoint.com/wp-content/uploads/2018/08/1576625640remove-background-photoshop.jpg]\n[https://www.sitepoint.com/remove-backgr...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Daniel Don"
        ],
        "title": [
            "Building A Web Code Editor"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/01/building-web-code-editor/"
        ],
        "pubDate": [
            "Thu, 13 Jan 2022 11:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/01/building-web-code-editor/"
        ],
        "description": [
            "If you’re a developer who’s thinking about building a platform that requires a code editor in one form or another, then this article is for you. This article explains how to create a web code editor that displays the result in real time with the help of some HTML, CSS and JavaScript."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/01/building-web-code-editor/\" />\n              <title>Building A Web Code Editor</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Building A Web Code Editor</h1>\n                  \n                    \n                    <address>Daniel Don</address>\n                  \n                  <time datetime=\"2022-01-13T11:30:00&#43;00:00\" class=\"op-published\">2022-01-13T11:30:00+00:00</time>\n                  <time datetime=\"2022-01-13T11:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>An online web code editor is most useful when you do not have the opportunity to use a code editor application, or when you want to quickly try out something on the web with your computer or even your mobile phone. This is also an interesting project to work on because having the knowledge of how to build a code editor will give you ideas on how to approach other projects that require you to integrate a code editor to show some functionality.</p>\n\n<p>Here are a few React concepts you’ll need to know in order to follow along in this article:</p>\n\n<ul>\n<li>Hooks,</li>\n<li>Component structure,</li>\n<li>Functional components,</li>\n<li>Props.</li>\n</ul>\n\n<h2 id=\"using-codemirror\">Using CodeMirror</h2>\n\n<p>We will be using a library named <a href=\"https://codemirror.net/index.html\">CodeMirror</a> to build our editor. CodeMirror is a versatile text editor implemented in JavaScript for the browser. It is especially for editing code and comes with a number of <a href=\"https://codemirror.net/mode/index.html\">language modes</a> and <a href=\"https://codemirror.net/doc/manual.html#addons\">add-ons</a> for more advanced editing functionality.</p>\n\n<p>A rich <a href=\"https://codemirror.net/doc/manual.html#api\">programming API</a> and a CSS <a href=\"https://codemirror.net/doc/manual.html#styling\">theming</a> system are available for customizing CodeMirror to fit your application and extending it with new functionality. It gives us the functionality to create a rich code editor that runs on the web and shows us the result of our code in real time.</p>\n\n<p>In the next section, we will set up our new React project and install the libraries we need to build our web app.</p>\n\n<h2 id=\"creating-a-new-react-project\">Creating A New React Project</h2>\n\n<p>Let’s start by creating a new React project. In your commandline interface, navigate to the directory in which you want to create your project, and let’s create a React application and name it <code>code_editor</code>:</p>\n\n<pre><code class=\"language-bash\">npx create-react-app code_editor</code></pre>\n\n<p>Having created our new React application, let’s navigate to that project’s directory in the commandline interface:</p>\n\n<pre><code class=\"language-bash\">cd code_editor</code></pre>\n\n<p>There are two libraries we need to install here: <code>codemirror</code> and <code>react-codemirror2</code>.</p>\n\n<pre><code class=\"language-bash\">npm install codemirror react-codemirror2</code></pre>\n\n<p>Having installed the libraries we need for this project, let’s create our tabs and enable tab switching between the three tabs that will appear in our editor (for HTML, CSS, and JavaScript).</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/touch-design-for-mobile-interfaces/\">Touch Design for Mobile Interfaces</a></strong>, Steven Hoober’s brand-new guide on <strong>designing for mobile</strong> with proven, universal, human-centric guidelines. <strong>400 pages</strong>, jam-packed with in-depth user research and <strong>best practices</strong>.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14bcab88-b622-47f6-a51d-76b0aa003597/touch-design-book-shop-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b14658fc-bb2d-41a6-8d1a-70eaaf1b8ec8/touch-design-book-shop-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h3 id=\"button-component\">Button Component</h3>\n\n<p>Instead of creating individual buttons, let’s make the button a component that is reusable. In our project, the button would have three instances, according to the three tabs we need.</p>\n\n<p>Create a folder named <code>components</code> in the <code>src</code> folder. In this new <code>components</code> folder, create a JSX file named <code>Button.jsx</code>.</p>\n\n<p>Here is all of the code needed in the <code>Button</code> component:</p>\n\n<pre><code class=\"language-javascript\">import React from 'react'\nconst Button = ({title, onClick}) =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;button\n        style={{\n          maxWidth: \"140px\",\n          minWidth: \"80px\",\n          height: \"30px\",\n          marginRight: \"5px\"\n        }}\n        onClick={onClick}\n      &gt;\n        {title}\n      &lt;/button&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Button\n</code></pre>\n\n<p>Here is a full explanation of what we did above:</p>\n\n<ul>\n<li>We created a functional component named <code>Button</code>, which we then exported.</li>\n<li>We destructured <code>title</code> and <code>onClick</code> from the props coming into the component. Here, <code>title</code> would be a string of text, and <code>onClick</code> would be a function that gets called when a button is clicked.</li>\n<li>Next, we used the <code>button</code> element to declare our button, and used the <code>style</code> attributes to style our button to look presentable.</li>\n<li>We added the <code>onClick</code> attribute and passed our destructured <code>onClick</code> function props to it.</li>\n<li>The last thing you’ll notice we did in this component is pass in <code>{title}</code> as the content of the <code>button</code> tag. This allows us to display the title dynamically, based on what prop is being passed to the instance of the button component when it is called.</li>\n</ul>\n\n<p>Now that we have created a reusable button component, let’s move on and bring our component into <code>App.js.</code> Go to <code>App.js</code> and import the newly created button component:</p>\n\n<pre><code class=\"language-javascript\">import Button from './components/Button';</code></pre>\n\n<p>To track which tab or editor is open, we need a declare state to hold the value of the editor that is open. Using the <code>useState</code> React hook, we’ll set up the state that will store the name of the editor tab that is currently open when that tab’s button is clicked.</p>\n\n<p>Here is how we do that:</p>\n\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport './App.css';\nimport Button from './components/Button';\n\nfunction App() {\n  const [openedEditor, setOpenedEditor] = useState('html');\n  return (\n    &lt;div className=\"App\"&gt;\n    &lt;/div&gt;\n  );\n}\nexport default App;</code></pre>\n\n<p>Here, we declared our state. It takes the name of the editor that is currently open. Because the value <code>html</code> is passed as the state’s default value, the HTML editor would be the tab open by default.</p>\n\n<p>Let’s move on and write the function that will use <code>setOpenedEditor</code> to change the value of the state when a tab button is clicked.</p>\n\n<p><strong>Note:</strong> Two tabs may not be open at the same time, so we’ll have to consider that when writing our function.</p>\n\n<p>Here is what our function, named <code>onTabClick</code>, looks like:</p>\n\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport './App.css';\nimport Button from './components/Button';\n\nfunction App() {\n  ...\n\n  const onTabClick = (editorName) =&gt; {\n    setOpenedEditor(editorName);\n  };\n\n  return (\n    &lt;div className=\"App\"&gt;\n    &lt;/div&gt;\n  );\n}\nexport default App;</code></pre>\n\n<p>Here, we passed a single function argument, which is the name of the tab currently selected. This argument would be supplied anywhere the function is called, and the relevant name of that tab would be passed in.</p>\n\n<p>Let’s create three instances of our <code>Button</code> for the three tabs we need:</p>\n\n<pre><code class=\"language-javascript\">&lt;div className=\"App\"&gt;\n      &lt;p&gt;Welcome to the editor!&lt;/p&gt;\n      &lt;div className=\"tab-button-container\"&gt;\n        &lt;Button title=\"HTML\" onClick={() =&gt; {\n          onTabClick('html')\n        }} /&gt;\n        &lt;Button title=\"CSS\" onClick={() =&gt; {\n          onTabClick('css')\n        }} /&gt;\n        &lt;Button title=\"JavaScript\" onClick={() =&gt; {\n          onTabClick('js')\n        }} /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;</code></pre>\n\n<p>Here is what we did:</p>\n\n<ul>\n<li>We started by adding a <code>p</code> tag, basically just to give some context to what our application is about.</li>\n<li>We used a <code>div</code> tag to wrap our tab buttons. The <code>div</code> tag carries a <code>className</code> that we will use to style the buttons into a grid display in the CSS file later in this tutorial.</li>\n<li>Next, we declared three instances of the <code>Button</code> component. If you recall, the <code>Button</code> component takes two props, <code>title</code> and <code>onClick</code>. In every instance of the <code>Button</code> component, these two props are provided.</li>\n<li>The <code>title</code> prop takes the title of the tab.</li>\n<li>The <code>onClick</code> prop takes a function, <code>onTabClick</code>, which we just created and which takes a single argument: the name of the tab selected.</li>\n</ul>\n\n<p>Based on the tab currently selected, we would use the JavaScript ternary operator to display the tab conditionally. This means that if the value of the <code>openedEditor</code> state is set to <code>html</code> (i.e. <code>setOpenedEditor('html')</code>), then the tab for the HTML section would become the currently visible tab. You’ll understand this better as we do it below:</p>\n\n<pre><code class=\"language-javascript\">...\nreturn (\n    &lt;div className=\"App\"&gt;\n      ...\n      &lt;div className=\"editor-container\"&gt;\n        {\n          openedEditor === 'html' ? (\n            &lt;p&gt;The html editor is open&lt;/p&gt;\n          ) : openedEditor === 'css' ? (\n            &lt;p&gt;The CSS editor is open!!!!!!&lt;/p&gt;\n          ) : (\n            &lt;p&gt;the JavaScript editor is open&lt;/p&gt;\n          )\n        }\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n...</code></pre>\n\n<p>Let’s go over the code above in plain English. If the value of <code>openedEditor</code> is <code>html</code>, then display the HTML section. Otherwise, if the value of <code>openedEditor</code> is <code>css</code>, then display the CSS section. Otherwise, if the value is neither <code>html</code> nor <code>css</code>, then that means the value must be <code>js</code>, because we have only three possible values for the <code>openedEditor</code> state; so, then we’d display the tab for JavaScript.</p>\n\n<p>We used paragraph tags (<code>p</code>) for the different sections in the ternary operator conditions. As we proceed, we will create the editor components and replace the <code>p</code> tags with the editor components themselves.</p>\n\n<p>We have come so far already! When a button is clicked, it fires up the action that sets the tab it represents to <code>true</code>, making that tab visible. Here’s what our app currently looks like:</p>\n\n<figure><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42818ddc-ef56-4abf-864c-fe38d77eeeb0/2-building-web-code-editor.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/54e7e73f-fbbb-4c2a-af2f-d611801222c1/2-building-web-code-editor-800w.gif\" width=\"800\" height=\"360\" alt=\"A GIF showing the tab toggle we currently have.\" /></a><figcaption>A GIF showing the tab toggle we currently have. (<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/42818ddc-ef56-4abf-864c-fe38d77eeeb0/2-building-web-code-editor.gif\">Large preview</a>)</figcaption></figure>\n\n<p>Let’s add a little CSS to the <code>div</code> container holding the buttons. We want the buttons to be displayed in a grid, instead of stacked vertically like in the image above. Go to your <code>App.css</code> file and add the following code:</p>\n\n<pre><code class=\"language-css\">.tab-button-container{\n  display: flex;\n}</code></pre>\n\n<p>Recall that we added <code>className=&quot;tab-button-container&quot;</code> as an attribute in the <code>div</code> tag holding the three-tab buttons. Here, we styled that container, using CSS to set its display to <code>flex</code>. This is the result:</p>\n\n<figure><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14bd1cc6-1d43-493b-9940-9850cf50f2f6/4-building-web-code-editor.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/49c4a7b6-656a-4e6c-a895-78da9fb7f69c/4-building-web-code-editor-800w.gif\" width=\"800\" height=\"347\" alt=\"We use CSS to set its display to flex\" /></a><figcaption>(<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14bd1cc6-1d43-493b-9940-9850cf50f2f6/4-building-web-code-editor.gif\">Large preview</a>)</figcaption></figure>\n\n<p>Be proud of how much you’ve done to get to this point. In the next section, we will create our editors, replacing the <code>p</code> tags with them.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"creating-the-editors\">Creating the Editors</h2>\n\n<p>Because we have already installed the libraries we are going to be working on within our CodeMirror editor, let’s go ahead and create our <code>Editor.jsx</code> file in the <code>components</code> folder.</p>\n\n<h3 id=\"components-editor-jsx\">components &gt; Editor.jsx</h3>\n\n<p>Having created our new file, let’s write some initial code in it:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport { Controlled as ControlledEditorComponent } from 'react-codemirror2';\n\n\nconst Editor = ({ language, value, setEditorState }) =&gt; {\n  return (\n    &lt;div className=\"editor-container\"&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Editor\n</code></pre>\n</div>  \n\n<p>Here&rsquo;s what we did:</p>\n\n<ul>\n<li>We imported React alongside the <code>useState</code> hook because we are going to need it.</li>\n<li>We imported the CodeMirror CSS file (which comes from the CodeMirror library that we installed, so you don’t have to install it in any special way).</li>\n<li>We imported <code>Controlled</code> from <code>react-codemirror2</code>, renaming it to <code>ControlledEditorComponent</code> to make it clearer. We will be using this shortly.</li>\n<li>Then, we declared our <code>Editor</code> functional component, and we have a return statement with an empty <code>div</code>, with a <code>className</code> in the return statement for now.</li>\n</ul>\n\n<p>In our functional component, we destructured some values from the props, including <code>language</code>, <code>value</code>, and <code>setEditorState</code>. These three props would be supplied in any instance of the editor when it is called in <code>App.js</code>.</p>\n\n<p>Let’s use <code>ControlledEditorComponent</code> to write the code for our editor. Here’s what we’ll do:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditorComponent } from 'react-codemirror2';\n\n\nconst Editor = ({ language, value, setEditorState }) =&gt; {\n  return (\n    &lt;div className=\"editor-container\"&gt;\n      &lt;ControlledEditorComponent\n        onBeforeChange={handleChange}\n        value= {value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Editor</code></pre>\n</div>\n\n<p>Let’s walk through what we did here, explaining some CodeMirror terms.</p>\n\n<p>The CodeMirror modes specify which language an editor is meant for. We imported three modes because we have three editors for this project:</p>\n\n<ol>\n<li><strong>XML:</strong> This mode is for HTML. It uses the term XML.</li>\n<li><strong>JavaScript:</strong> This (<code>codemirror/mode/javascript/javascript</code>) brings in JavaScript mode.</li>\n<li><strong>CSS:</strong> This (<code>codemirror/mode/css/css</code>) brings in CSS mode.</li>\n</ol>\n\n<p><strong>Note:</strong> Because the editor is built as a component that is reusable, we cannot put a direct mode in the editor. So, we supply the mode through the <code>language</code> prop that we destructured. But this doesn’t change the fact that the modes need to be imported in order to work.</p>\n\n<p>Next, let’s discuss the things in <code>ControlledEditorComponent</code>:</p>\n\n<ul>\n<li><code>onBeforeChange</code><br />\nThis is called anytime you write to or remove from the editor. Think of this like the <code>onChange</code> handler you would normally have in an input field to track changes. Using this, we will be able to get the value of our editor anytime there&rsquo;s a new change and save it to our editor’s state. We will write the <code>{handleChange}</code> function as we proceed.</li>\n<li><code>value = {value}</code><br />\nThis is just the content of the editor at any given time. We passed a destructured prop named <code>value</code> to this attribute. The <code>value</code> props is the state holding the value of that editor. This would be supplied from the editor’s instance.</li>\n<li><em><code>className</code></em><code>=&quot;code-mirror-wrapper&quot;</code><br />\nThis class name is not a style we make ourselves. It is supplied from CodeMirror’s CSS file, which we imported above.</li>\n<li><code>options</code><br />\nThis is an object that takes the different functionality we want our editor to have. There are many amazing options in CodeMirror. Let’s look at the ones we used here:\n\n<ul>\n<li><code>lineWrapping: true</code><br />\nThis means that code should wrap to the next line when the line is full.</li>\n<li><code>lint: true</code><br />\nThis allows linting.</li>\n<li><code>mode: language</code><br />\nThis mode, as discussed above, takes the language that the editor is going to be used for. The language has already been imported above, but the editor is going to apply a language based on the <code>language</code> value supplied to the editor via the prop.</li>\n<li><code>lineNumbers: true</code><br />\nThis specifies that the editor should have line numbers for each line.</li>\n</ul></li>\n</ul>\n\n<p>Next, we can write the <code>handleChange</code> function for the <code>onBeforeChange</code> handler:</p>\n\n<pre><code class=\"language-javascript\">const handleChange = (editor, data, value) =&gt; {\n    setEditorState(value);\n}</code></pre>\n\n<p>The <code>onBeforeChange</code> handler gives us access to three things: <code>editor, data, value</code>.</p>\n\n<p>We only need the <code>value</code> because it is what we want to pass in our <code>setEditorState</code> prop. The <code>setEditorState</code> prop represents the set value for each state that we declared in <code>App.js</code>, holding the value for each editor. As we move on, we will look at how to pass this as a prop to the <code>Editor</code> component.</p>\n\n<p>Next, we’ll add a dropdown that allows us to select different themes for the editor. So, let’s look at themes in CodeMirror.</p>\n\n<h3 id=\"codemirror-themes\">CodeMirror Themes</h3>\n\n<p>CodeMirror has multiple themes we can select from. Visit the <a href=\"https://codemirror.net/demo/theme.html\">official website</a> to see demos of the different themes available. Let’s make a dropdown with different themes that the user can choose from in our editor. For this tutorial, we’ll be adding five themes, but you can add as many as you like.</p>\n\n<p>First, let’s import our themes in the <code>Editor.js</code> component:</p>\n\n<pre><code class=\"language-javascript\">import 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/mdn-like.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/theme/night.css';</code></pre>\n\n<p>Next, create an array of all of the themes we have imported:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">const themeArray = ['dracula', 'material', 'mdn-like', 'the-matrix', 'night']</code></pre>\n</div>\n\n<p>Let’s declare a <code>useState</code> hook to hold the value of the selected theme, and set the default theme as <code>dracula</code>:</p>\n\n<pre><code class=\"language-javascript\">const [theme, setTheme] = useState(\"dracula\")</code></pre>\n\n<p>Let’s create the dropdown:</p>\n\n<pre><code class=\"language-javascript\">...\nreturn (\n    &lt;div className=\"editor-container\"&gt;\n\n      &lt;div style={{marginBottom: \"10px\"}}&gt;\n        &lt;label for=\"cars\"&gt;Choose a theme: &lt;/label&gt;\n        &lt;select name=\"theme\" onChange={(el) =&gt; {\n          setTheme(el.target.value)\n        }}&gt;\n          {\n            themeArray.map( theme =&gt; (\n              &lt;option value={theme}&gt;{theme}&lt;/option&gt;\n            ))\n          }\n        &lt;/select&gt;\n      &lt;/div&gt;\n    // the rest of the code comes below...\n    &lt;/div&gt;\n  )\n...</code></pre>\n\n<p>In the code above, we used the <code>label</code> HTML tag to add a label to our dropdown, and then added the <code>select</code> HTML tag to create our dropdown. The <code>option</code> tag in the <code>select</code> element defines the options available in the dropdown.</p>\n\n<p>Because we needed to fill the dropdown with the theme names in the <code>themeArray</code> that we created, we used the <code>.map</code> array method to map <code>themeArray</code> and display the names individually using the <code>option</code> tag.</p>\n\n<p>Hold on &mdash; we’re not done explaining the code above. In the opening <code>select</code> tag, we passed the <code>onChange</code> attribute to track and update the <code>theme</code> state whenever a new value is selected in the dropdown. Whenever a new option is selected in the dropdown, the value is gotten from the object returned to us. Next, we use the <code>setTheme</code> from our state hook to set the new value to be the value that the state holds.</p>\n\n<p>At this point, we have created our dropdown, set up our theme’s state, and written our function to set the state with the new value. The final thing we need to do to make CodeMirror use our theme is pass the theme to the <code>options</code> object in <code>ControlledEditorComponent</code>. In the <code>options</code> object, let’s add a value named <code>theme</code>, and set its value to the state’s value for the selected theme, also named <code>theme</code>.</p>\n\n<p>Here’s what <code>ControlledEditorComponent</code> would look like now:</p>\n\n<pre><code class=\"language-javascript\">&lt;ControlledEditorComponent\n  onBeforeChange={handleChange}\n  value= {value}\n  className=\"code-mirror-wrapper\"\n  options={{\n    lineWrapping: true,\n    lint: true,\n    mode: language,\n    lineNumbers: true,\n    theme: theme,\n  }}\n/&gt;</code></pre>\n\n<p>Now, we have made a dropdown of different themes that can be selected from in the editor.</p>\n\n<p>Here’s what the full code in <code>Editor.js</code> looks like at the moment:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import React, { useState } from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/dracula.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/theme/mdn-like.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/theme/night.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditorComponent } from 'react-codemirror2';\n\n\nconst Editor = ({ language, value, setEditorState }) =&gt; {\n  const [theme, setTheme] = useState(\"dracula\")\n  const handleChange = (editor, data, value) =&gt; {\n    setEditorState(value);\n  }\n  const themeArray = ['dracula', 'material', 'mdn-like', 'the-matrix', 'night']\n  return (\n    &lt;div className=\"editor-container\"&gt;\n      &lt;div style={{marginBottom: \"10px\"}}&gt;\n        &lt;label for=\"themes\"&gt;Choose a theme: &lt;/label&gt;\n        &lt;select name=\"theme\" onChange={(el) =&gt; {\n          setTheme(el.target.value)\n        }}&gt;\n          {\n            themeArray.map( theme =&gt; (\n              &lt;option value={theme}&gt;{theme}&lt;/option&gt;\n            ))\n          }\n        &lt;/select&gt;\n      &lt;/div&gt;\n      &lt;ControlledEditorComponent\n        onBeforeChange={handleChange}\n        value= {value}\n        className=\"code-mirror-wrapper\"\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          lineNumbers: true,\n          theme: theme,\n        }}\n      /&gt;\n    &lt;/div&gt;\n  )\n}\nexport default Editor\n</code></pre>\n</div>\n\n<p>There’s only one <code>className</code> that we need to style. Go to <code>App.css</code> and add the following style:</p>\n\n<pre><code class=\"language-css\">.editor-container{\n  padding-top: 0.4%;\n}</code></pre>\n\n<p>Now that our editors are ready, let’s go back to <code>App.js</code> and use them there.</p>\n\n<h3 id=\"src-app-js\">src &gt; App.js</h3>\n\n<p>The first thing we need to do is import the <code>Editor.js</code> component in here:</p>\n\n<pre><code class=\"language-javascript\">import Editor from './components/Editor';</code></pre>\n\n<p>In <code>App.js</code>, let’s declare the states that will hold the contents of the HTML, CSS, and JavaScript editors, respectively.</p>\n\n<pre><code class=\"language-javascript\">const [html, setHtml] = useState('');\nconst [css, setCss] = useState('');\nconst [js, setJs] = useState('');</code></pre>\n\n<p>If you recall, we will need to use these states to hold and supply the contents of our editors.</p>\n\n<p>Next, let’s replace the paragraph (<code>p</code>) tags that we used for the HTML, CSS, and JavaScript in the conditional renderings with the editor components we have just created, and we’ll also pass in the appropriate prop to each instance of the editor component:</p>\n\n<pre><code class=\"language-javascript\">function App() {\n  ...\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;p&gt;Welcome to the edior&lt;/p&gt;\n\n      // This is where the tab buttons container is...\n\n      &lt;div className=\"editor-container\"&gt;\n        {\n          htmlEditorIsOpen ? (\n            &lt;Editor\n              language=\"xml\"\n              value={html}\n              setEditorState={setHtml}\n            /&gt;\n          ) : cssEditorIsOpen ? (\n            &lt;Editor\n              language=\"css\"\n              value={css}\n              setEditorState={setCss}\n            /&gt;\n          ) : (\n            &lt;Editor\n              language=\"javascript\"\n              value={js}\n              setEditorState={setJs}\n            /&gt;\n          )\n        }\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\nexport default App;</code></pre>\n\n<p>If you’ve been following along until now, you’ll understand what we did in the code block above.</p>\n\n<p>Here it is in plain English: We replaced the <code>p</code> tags (which were there as placeholders) with instances of the editor components. Then, we supplied their <code>language</code>, <code>value</code>, and <code>setEditorState</code> props, respectively, to match their corresponding states.</p>\n\n<p>We&rsquo;ve come so far! Here is what our app looks like now:</p>\n\n<figure><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0fe07c7-bcca-4cb6-a66c-18cc12545854/5-building-web-code-editor.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/bbbaa0f0-fcd3-404d-baf1-ae0a28bba9f2/5-building-web-code-editor-800w.gif\" width=\"800\" height=\"377\" alt=\"The way our app looks like now\" /></a><figcaption>(<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/e0fe07c7-bcca-4cb6-a66c-18cc12545854/5-building-web-code-editor.gif\">Large preview</a>)</figcaption></figure>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"introduction-to-iframes\">Introduction to Iframes</h2>\n\n<p>We’ll be making use of inline frames (iframes) to display the result of the code entered in the editor.</p>\n\n<p>According to <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe\">MDN</a>:</p>\n\n<blockquote>\n<p>The HTML Inline Frame element (<code>&lt;iframe&gt;</code>) represents a nested <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/browsing_context\">browsing context</a>, embedding another HTML page into the current one.</p>\n</blockquote>\n\n<h3 id=\"how-iframes-work-in-react\">How Iframes Work in React</h3>\n\n<p>Iframes are normally used with plain HTML. Using Iframes with React doesn’t require many changes, the major one being to convert attribute names to camelcase. An example of this is that <code>srcdoc</code> would become <code>srcDoc</code>.</p>\n\n<h3 id=\"the-future-of-iframes-on-the-web\">The Future of Iframes on the Web</h3>\n\n<p>Iframes continue to be really useful in web development. Something you might want to check out is Portals. As <a href=\"https://medium.com/@bluepnume/google-chromes-portals-like-iframes-but-better-and-worse-29e0bbb3f78e\">Daniel Brain explains</a>:</p>\n\n<blockquote>“Portals introduce a powerful new set of capabilities into this mix. Now it’s possible to build something that feels like an iframe, that can seamlessly animate and morph and take over the full browser window.”</blockquote>\n\n<p>One of the things Portals tries to solve is the URL bar problem. When using iframe, components rendered in the iframe don’t carry a unique URL in the address bar; as such, this might not be great for the user experience, depending on the use case. Portals is worth checking out, and I’d suggest you do that, but because it is not the focus of our article, this is all I’ll say about it here.</p>\n\n<h2 id=\"creating-the-iframe-to-house-our-result\">Creating the Iframe to House Our Result</h2>\n\n<p>Let’s move ahead with our tutorial by creating an iframe to house the result of our editors.</p>\n\n<pre><code class=\"language-javascript\">return (\n    &lt;div className=\"App\"&gt;\n      // ...\n      &lt;div&gt;\n        &lt;iframe\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n          frameBorder=\"1\"\n          width=\"100%\"\n          height=\"100%\"\n        /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );</code></pre>\n\n<p>Here, we created the iframe and housed it in a <code>div</code> container tag. In the iframe, we passed some attributes that we need:</p>\n\n<ul>\n<li><code>srcDoc</code><br />\nThe <code>srcDoc</code> attribute is written in camelcase because this is how to write iframe attributes in React. When using an iframe, we can either embed an external web page on the page or render specified HTML content. To load and embed an external page, we would use the <code>src</code> property instead. In our case, we are not loading an external page; rather, we want to create a new internal HTML document that houses our result; for this, we need the <code>srcDoc</code> attribute. This attribute takes the HTML document that we want to embed (we have not created that yet, but we will soon).</li>\n<li><code>title</code><br />\nThe title attribute is used to describe the contents of the inline frame.</li>\n<li><code>sandbox</code><br />\nThis property has <a href=\"https://www.w3schools.com/tags/att_iframe_sandbox.asp#:~:text=The%20sandbox%20attribute%20enables%20an,block%20form%20submission\">many purposes</a>. In our case, we are using it to allow scripts to run in our iframe with the <code>allow-scripts</code> value. Because we are working with a JavaScript editor, this would come in handy quickly.</li>\n<li><code>frameBorder</code><br />\nThis merely defines the border thickness of the iframe.</li>\n<li><code>width</code> and <code>height</code><br />\nThis defines the width and height of the iframe.</li>\n</ul>\n\n<p>These terms should now make more sense to you. Let’s move on and declare the state that will hold the HTML template document for <code>srcDoc</code>. If you look closely at the code block above, you’ll see that we passed a value to the <code>srcDoc</code> attribute: <em><code>srcDoc</code></em><code>={srcDoc}</code>. Let’s use our <code>useState()</code> React hook to declare the <code>srcDoc</code> state. To do this, in the <code>App.js</code> file, go to where we defined the other states and add this one:</p>\n\n<pre><code class=\"language-javascript\">const [srcDoc, setSrcDoc] = useState(` `);</code></pre>\n\n<p>Now that we have created the state, the next thing to do is display the result in the state whenever we type in the code editor. But what we don’t want is to re-render the component on every single key press. With that in mind, let’s proceed.</p>\n\n<h3 id=\"configuring-the-iframe-to-display-the-result\">Configuring the Iframe to Display the Result</h3>\n\n<p>Every time there&rsquo;s a change in any of the editors for the HTML, CSS, and JavaScript, respectively, we want <code>useEffect()</code> to be triggered, and that will render the updated result in the iframe. Let’s write <code>useEffect()</code> to do this in the <code>App.js</code> file:</p>\n\n<p>First, import the <code>useEffect()</code> hook:</p>\n\n<pre><code class=\"language-javascript\">import React, { useState,  useEffect } from 'react';</code></pre>\n\n<p>Let’s write <code>useEffect()</code> like so:</p>\n\n<pre><code class=\"language-javascript\">useEffect(() =&gt; {\n    const timeOut = setTimeout(() =&gt; {\n      setSrcDoc(\n        `\n          &lt;html&gt;\n            &lt;body&gt;${html}&lt;/body&gt;\n            &lt;style&gt;${css}&lt;/style&gt;\n            &lt;script&gt;${js}&lt;/script&gt;\n          &lt;/html&gt;\n        `\n      )\n    }, 250);\n    return () =&gt; clearTimeout(timeOut)\n  }, [html, css, js])</code></pre>\n\n<p>Here, we wrote a <code>useEffect()</code> hook that will always run whenever the value states that we declared for the HTML, CSS, and JavaScript editors are changed or updated.</p>\n\n<p>Why did we need to use <code>setTimeout()</code>? Well, if we wrote this without it, then every time a single key press is made in an editor, our iframe would be updated, and that isn’t great for performance generally. So we use <code>setTimeout()</code> to delay the update for 250 milliseconds, giving us enough time to know whether the user is still typing. That is, every time the user presses a key, it restarts the count, so the iframe would only be updated when the user has been idle (not typing) for 250 milliseconds. This is a cool way to avoid having to update the iframe every time a key is pressed.</p>\n\n<p>The next thing we did above was to update <code>srcDoc</code> with the new changes. The <code>srcDoc</code> component, as we explained above, renders specified HTML content in the iframe. In our code, we passed an HTML template, taking the <code>html</code> state that contains the code that the user has typed into the HTML editor and placing it between the <code>body</code> tags of our template. We also took the <code>css</code> state that contains the styles that the user has typed in the CSS editor, and we passed that between the <code>style</code> tags. Finally, we took the <code>js</code> state that contains the JavaScript code that the user has typed in the JavaScript editor, and we passed it between the <code>script</code> tags.</p>\n\n<p>Notice that in setting <code>setSrcDoc</code>, we used backticks (<code>` `</code>) instead of normal quotes (<code>' '</code>). This is because backticks allow us to pass in corresponding state values, as we did in the code above.</p>\n\n<p>The <code>return</code> statement in the <code>useEffect()</code> hook is a cleanup function that clears <code>setTimeout()</code> when it is complete, to avoid memory leakage. The <a href=\"https://reactjs.org/docs/hooks-effect.html\">documentation has more</a> about <code>useEffect</code>.</p>\n\n<p>Here’s what our project looks like at the moment:</p>\n\n<figure><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c00873c4-68a4-427e-8481-c4d25a44649f/3-building-web-code-editor.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7ffa79c1-1410-49b5-a145-0c0a5d986b4a/3-building-web-code-editor-800w.gif\" width=\"800\" height=\"380\" alt=\"What our project looks like at the moment\" /></a><figcaption>(<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c00873c4-68a4-427e-8481-c4d25a44649f/3-building-web-code-editor.gif\">Large preview</a>)</figcaption></figure>\n\n<h3 id=\"codemirror-addons\">CodeMirror Addons</h3>\n\n<p>With CodeMirror addons, we can enhance our editor with more of the kind of functionality we would find in other code editors. Let’s walk through an example of closing tags being added automatically when an opening tag is typed, and another example of a bracket automatically closing when the opening bracket is inputted:</p>\n\n<p>The first thing to do is import the addon for this into our <code>App.js</code> file:</p>\n\n<pre><code class=\"language-javascript\">import 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/closebrackets';</code></pre>\n\n<p>Let’s pass it in the <code>ControlledEditorComponent</code> options:</p>\n\n<pre><code class=\"language-javascript\">&lt;ControlledEditorComponent\n        ...\n        options={{\n          ...\n          autoCloseTags: true,\n          autoCloseBrackets: true,\n        }}\n      /&gt;</code></pre>\n\n<p>Now here’s what we have:</p>\n\n<figure><a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/507dbd6b-c186-4ed6-92cd-4f382f638e97/1-building-web-code-editor.gif\"><img src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/4239cd95-e529-484c-a79a-e641f64c3367/1-building-web-code-editor-800w.gif\" width=\"800\" height=\"379\" alt=\"The way our project looks\" /></a><figcaption>(<a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/507dbd6b-c186-4ed6-92cd-4f382f638e97/1-building-web-code-editor.gif\">Large preview</a>)</figcaption></figure>\n\n<p>You could add a ton of these addons to your editor to give it richer features. We couldn’t possibly go through <a href=\"https://codemirror.net/doc/manual.html#addons\">all of them</a> here.</p>\n\n<p>Now that we are done with this, let’s briefly discuss things we could do to improve our app’s accessibility and performance.</p>\n\n<h2 id=\"performance-and-accessibility-of-the-solution\">Performance and Accessibility of the Solution</h2>\n\n<p>Looking at our web code editor, some things could definitely be improved upon.</p>\n\n<p>Because we’ve paid attention primarily to functionality, we might have neglected design a little bit. For better accessibility, here are some things you could do to improve this solution:</p>\n\n<ol>\n<li>You could set an <code>active</code> class on the button for the currently open editor. Highlighting the button would improve accessibility by giving users a clear indication of which editor they’re currently working on.</li>\n<li>You might want the editor to occupy more screen space than what we have here. Another thing you could try is making the iframe pop up with the click of a button that is docked somewhere to the side. Doing so would give the editor more screen space.</li>\n<li>This sort of editor would be useful for people who want to run a quick exercise on their mobile device, so fully adapting it to mobile would be necessary (not to mention both of the points about mobile above).</li>\n<li>Currently, we are able to switch the theme of the editor component from among the multiple themes we’ve loaded in, but the general theme of the page remains the same. You could enable the user to switch between a dark and light theme for the entire layout. This would be good for accessibility, relieving the strain on people’s eyes from looking at a bright screen for too long.</li>\n<li>We didn’t look at security issues with our iframe, mainly because we were loading an internal HTML document in the iframe, rather than an external document. So we don’t need to consider this too carefully because iframes are a good fit for our use case.</li>\n<li>With iframes, another consideration would be page-loading time, because the content being loaded in the iframe would normally be out of your control. In our app, this isn’t an issue because our iframe content isn’t external.</li>\n</ol>\n\n<p>Performance and accessibility are worth a lot of consideration when you’re building any application because they will determine how useful and usable your application is to its users.</p>\n\n<p><a href=\"https://www.smashingmagazine.com/author/shedrack-akintayo/\">Shedrack</a> has done a good job of explaining methods for <a href=\"https://www.smashingmagazine.com/2020/07/methods-performance-react-apps/\">improving and optimizing performance in React apps</a>. It’s worth checking out!</p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Working through different projects helps us to learn about a wide range of subjects. Now that you’ve gone through this article, feel free to expand upon your experience by experimenting with more add-ons to make the code editor richer, revamping the UI, and fixing the accessibility and performance concerns outlined above.</p>\n\n<ul>\n<li>The entire code base for this project is <a href=\"https://github.com/smashingmagazine/web_code_editor\">available on GitHub</a>.</li>\n</ul>\n\n<p>Here’s the demo on Codesandbox:</p>\n\n<iframe src=\"https://codesandbox.io/embed/suspicious-breeze-hf41m?fontsize=14&hidenavigation=1&theme=dark\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"suspicious-breeze-hf41m\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n\n<h3 id=\"links-and-material\">Links and Material</h3>\n\n<ul>\n<li>“<a href=\"https://bluepnume.medium.com/google-chromes-portals-like-iframes-but-better-and-worse-29e0bbb3f78e\">Google Chrome’s Portals: Like Iframes, But Better, and Worse</a>”, Daniel Brain</li>\n<li>“<a href=\"https://reactjs.org/docs/optimizing-performance.html#profiling-components-with-the-chrome-performance-tab\">Optimizing Performance</a>”, React documentation</li>\n<li>“<a href=\"https://codemirror.net/doc/manual.html\">User Manual and Reference Guide</a>”, CodeMirror documentation</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(ks, vf, yk, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "If you’re a developer who’s thinking about building a platform that requires a\ncode editor in one form or another, then this article is for you. This article\nexplains how to create a web code editor t...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Issue #501"
        ],
        "link": [
            "https://css-weekly.com/issue-501/"
        ],
        "pubDate": [
            "Thu, 21 Apr 2022 12:57:53 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-501/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how images can affect your web app's performance, what CSS toggles mechanism is, why you should stop using shorthands in your CSS, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://stackoverflow.blog/2022/03/28/picture-perfect-images-with-the-modern-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Picture Perfect Images With the Modern <img> Element</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://stackoverflow.blog/2022/03/28/picture-perfect-images-with-the-modern-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/perfect-images-with-the-modern-element.jpg\" alt=\"Picture Perfect Images With the Modern <img> Element\" /></a>\n\t\t\t\t\t\t<p>Addy Osmani outlines how images can affect your web app&#8217;s performance and explains how they can help you improve user-experience and the Core Web Vitals.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://stackoverflow.blog/2022/03/28/picture-perfect-images-with-the-modern-element/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css.oddbird.net/toggles/explainer/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Toggles Explainer & Proposal</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css.oddbird.net/toggles/explainer/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/css-toggles-explainer-and-proposal.jpg\" alt=\"CSS Toggles Explainer & Proposal\" /></a>\n\t\t\t\t\t\t<p>Miriam Suzanne and Tab Atkins Jr. share a proposal for CSS toggles, a mechanism for associating toggleable state with a DOM element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css.oddbird.net/toggles/explainer/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/ad-promo\">Advertise in CSS Weekly and Reach Your Ideal, Engaged Audience</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/ad-promo\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/cssweekly-promo2.jpg\" alt=\"Advertise in CSS Weekly and Reach Your Ideal, Engaged Audience\" /></a>\n\t\t\t\t\t\t<p>Do you want to improve your brand awareness and reach? Book an ad in CSS Weekly, and speak directly to 30,000+ front-end developers and designers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/ad-promo\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://www.youtube.com/c/CSSWeekly\" target=\"_blank\">From Our YouTube Channel</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/WQ9jhxy7Mkk?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">5 Default VS Code Settings You Should Tweak Immediately</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://youtu.be/WQ9jhxy7Mkk?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/5-default-vs-code-settings-you-should-tweak-immediately.jpg\" alt=\"5 Default VS Code Settings You Should Tweak Immediately\" /></a>\n\t\t\t\t\t\t<p>A couple of handy VS Code tips that will make you more productive and your coding environment much nicer for work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/WQ9jhxy7Mkk?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.youtube.com/watch?v=iGkK-5il6Mk?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Stop Using Shorthands in Your CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kevin Powell outlines the potential issues that can arise when you use Shorthands in CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.youtube.com/watch?v=iGkK-5il6Mk?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Forced Colors Explained: A Practical Guide</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kilian Valkhof explores the Forced Colors CSS media query, explains where it comes from, how it changes your site, and how you can adapt to it.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://polypane.app/blog/forced-colors-explained-a-practical-guide/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cloudfour.com/thinks/childish-font-sizes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Childish Font Sizes</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Tyler Sticka explains why you should use larger font sizes for longer passages of content.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cloudfour.com/thinks/childish-font-sizes/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/optimizing-svg-patterns/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Optimizing SVG Patterns to Their Smallest Size</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bence Szabó shares how to optimize SVG patterns so that they contain as little code as possible without affecting the overall image quality.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/optimizing-svg-patterns/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://benmyers.dev/blog/fix-low-contrast-text/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How to Fix Your Low-Contrast Text</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ben Myers gives some advice on improving the accessibility of your text.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://benmyers.dev/blog/fix-low-contrast-text/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://timeular.com/?utm_source=css-weekly&amp;utm_medium=email&amp;utm_campaign=spring-css-weekly#login?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Effortless time tracking to improve your work-life balance 🌱</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://timeular.com/?utm_source=css-weekly&amp;utm_medium=email&amp;utm_campaign=spring-css-weekly#login?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/timeular.jpg\" alt=\"Effortless time tracking to improve your work-life balance 🌱\" /></a>\n\t\t\t\t\t\t<p>With Timeular you can easily track your time and discover where it goes. Get started in minutes and we’ll help you set new habits and optimize your day for deep work 👩‍💻<br />\nSeriously, no more overwhelming features 🙌 and it works for teams too!</p>\n<p>Use code <strong>CSSWEEKLY</strong> to get 20% off the yearly Pro plan 🎉</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://timeular.com/?utm_source=css-weekly&amp;utm_medium=email&amp;utm_campaign=spring-css-weekly#login?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Start your free trial today!</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://github.com/tabler/tabler-icons?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Tabler Icons</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Tabler Icons is a set of over 1700 free MIT-licensed high-quality SVG icons for you to use in your web projects.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://github.com/tabler/tabler-icons?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://icon-shelf.github.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Icon Shelf</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Icon Shelf is an SVG icon manager for developers, available for Mac, Windows, and Linux.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://icon-shelf.github.io/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/jh3y/pen/mdpvBey?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS MonDDDrian ✨</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/jh3y/pen/mdpvBey?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/css-mondddrian.jpg\" alt=\"CSS MonDDDrian ✨\" /></a>\n\t\t\t\t\t\t<p>Jhey Tompkins created an impressive, artistic, interactive demo using CSS and JavaScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/jh3y/pen/mdpvBey?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how images can affect your web app's performance, what CSS toggles\nmechanism is, why you should stop using shorthands in your CSS, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "7 killer JavaScript One-Liners You Must Know 😎😎"
        ],
        "dc:creator": [
            "Ashish donga"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:08:58 +0000"
        ],
        "link": [
            "https://dev.to/ashishdonga/7-killer-javascript-one-liners-you-must-know-nhm"
        ],
        "guid": [
            "https://dev.to/ashishdonga/7-killer-javascript-one-liners-you-must-know-nhm"
        ],
        "description": [
            "<p>top 7 best killer javascript one liners that you must know in your code journey</p>\n\n<p><strong>Generate random string</strong></p>\n\n<p>if you will ever need a temporary uniques id for something, this is one liner will generate a random string for you<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const randomString = Math.random().toString(36).slice(2);\nconsole.log(randomString)\n</code></pre>\n\n</div>\n\n\n\n<p><strong>extract domain name from an email</strong></p>\n\n<p>you can use the substring() method to extract the domain name of the email<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>let email = 'admin@ashishdonga.me';\nlet getDomain = email.substring(email.indexOf('@') + 1);\n\nconsole.log(getDomain)\n</code></pre>\n\n</div>\n\n\n\n<p><strong>detect dark mode</strong></p>\n\n<p>with this one linera you can check if the user is using dark mode and then you can update some functionality according to dark mode<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const isDarkMode = window.matchMedia &amp;&amp; \nwindow.matchMedia('(prefers-color-scheme:dark)').match;\n</code></pre>\n\n</div>\n\n\n\n<p>*<em>check if an element is focused *</em></p>\n\n<p>to detect if the element has the focus in javascript, you can use the read only javascript property activeElement of the document object<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const elem = document.querySelector('.text-input')\nconst isFocus = elem = document.activeElement;\n</code></pre>\n\n</div>\n\n\n\n<p><strong>Redirecting User</strong></p>\n\n<p>you can redirect the user to any specific URL using Javascript<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>const redirect = url =&gt; location.href = url\n</code></pre>\n\n</div>\n\n\n\n<p><strong>check if a variable is an array</strong></p>\n\n<p>you can check if any variable is an array or not using the Array.isArray() method<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>let fruit = 'apple';\nlet fruits = ['apple','banana','mango','orange','grapes']\n\nconst isArray = (arr) =&gt; Array.isArray(arr)\n\nconsole.log(isArray.fruit); // false\nconsole.log(isArray.fruits); //true\n</code></pre>\n\n</div>\n\n\n\n<p><strong>check if an array is empty</strong></p>\n\n<p>this is one liner will let you know if an array is empty or not<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>let arr1 = []\nlet arr2 = [2,4,6,8,10]\n\nconst arr1IsEmpty = !(Array.isArray(arr1) &amp;&amp; arr1.length &gt;0);\nconst arr2IsEmpty = !(Array.isArray(arr2) &amp;&amp; arr2.length &gt;0);\n\nconsole.log(arra1);\nconsole.log(arr2)\n</code></pre>\n\n</div>\n\n\n\n<p>read more</p>\n\n<p><a href=\"https://dev.to/ashishdonga/12-javascript-pro-snippet-codes-for-everyday-problems-hfn\"><strong>12 javascript pro snippet codes for everyday problems</strong><br>\n</a></p>\n\n<p><a href=\"https://dev.to/ashishdonga/what-is-difference-between-undefined-null-in-javascript--40gc\"><strong>What is difference between undefined &amp; null in javascript ?</strong></a></p>\n\n<p>share this JavaScript One-Liners article with your friends </p>\n\n"
        ],
        "category": [
            "javascript",
            "beginners",
            "programming",
            "tutorial"
        ],
        "plainDescription": "top 7 best killer javascript one liners that you must know in your code journey\n\nGenerate random string\n\nif you will ever need a temporary uniques id for something, this is one liner\nwill generate a r...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "Stay Private and Declutter Your Inbox Using Email Aliases"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss\"\n              title=\"Stay Private and Declutter Your Inbox Using Email Aliases\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases.jpg\"\n        alt=\"Stay Private and Declutter your Inbox Using Email Aliases\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Is your inbox full of junk? Learn how to manage your emails with email aliases, which let you easily get rid of emails you no longer want.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss\">Stay Private and Declutter Your Inbox Using Email Aliases</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/email-aliases-stay-private-declutter-inbox/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=247254",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Giorgio Barilla"
        ],
        "pubDate": [
            "Mon, 06 Dec 2021 02:00:31 GMT"
        ],
        "plainDescription": "Stay Private and Declutter your Inbox Using Email Aliases\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638757552email-aliases.jpg]\n[https://www.sitepoint.com/email-aliases-stay-private-d...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Image Trail Animation for an Intro"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Tue, 03 May 2022 10:05:31 +0000"
        ],
        "category": [
            "Playground",
            "intro",
            "page-transition"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63293",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>An intro animation concept with an initial loader and an intro screen that animates to a new layout using various effects.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/\">Image Trail Animation for an Intro</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>I&#8217;m very fascinated with the <a href=\"https://greensock.com/docs/v3/Plugins/Flip\">GSAP Flip plugin</a> and I was itching to try more examples where a layout is animated. So today I&#8217;d like to share another experiment with you that shows how easy it is to make these kind of layout changes happen using this magical plugin. Once you understand what you can do with it, there&#8217;s just so many possibilities and you realize what a powerful tool it is. It accelerates development and I don&#8217;t want to miss it anymore, that&#8217;s for sure.</p>\n\n\n\n<p>I based the design on <a href=\"https://dribbble.com/shots/17787178-9-999-Animation\">this</a> beautiful loading animation by <a href=\"https://dribbble.com/alexpopovich\">Alex Tkachev</a> and borrowed some design elements from this fantastic <a href=\"https://www.behance.net/gallery/100416033/Persona-Websites/modules/580456949\">Behance presentation</a> by <a target=\"_blank\" href=\"https://www.behance.net/RronBerisha\" rel=\"noreferrer noopener\">Rron Berisha</a> and <a target=\"_blank\" href=\"https://www.behance.net/arlindaliu\" rel=\"noreferrer noopener\">Arlind Aliu</a>.</p>\n\n\n\n<p>The initial view is the loading screen that shows an increasing percentage on the left and the image on the right:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_01.jpg\" alt=\"\" class=\"wp-image-63480\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_01.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_01-400x250.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_01-768x480.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<p>Once our fake loader reached 100%, we&#8217;ll animate the image into another view, using a <a href=\"https://tympanus.net/Sketches/005-image-motion-trail-opaque/\">trail effect</a>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_02.jpg\" alt=\"\" class=\"wp-image-63481\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_02.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_02-400x250.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_02-768x480.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<p>When we click on the enter button, the title and image will move to yet another layout:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_03.jpg\" alt=\"\" class=\"wp-image-63482\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_03.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_03-400x250.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail_03-768x480.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></figure>\n\n\n\n<p>The flip plugin makes it super easy to move from one state to another while taking care of all the nasty details.</p>\n\n\n\n<p>Let&#8217;s look at all the animations happening:</p>\n\n\n\n<figure class=\"wp-block-video\"><video autoplay controls loop src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail.mp4\"></video></figure>\n\n\n\n<p>Hope you enjoy this demo and find this experiment useful!</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/\">Image Trail Animation for an Intro</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "enclosure": [
            {
                "$": {
                    "url": "https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/introtrail.mp4",
                    "length": "858762",
                    "type": "video/mp4"
                }
            }
        ],
        "plainDescription": "An intro animation concept with an initial loader and an intro screen that\nanimates to a new layout using various effects.\n\nThe post Image Trail Animation for an Intro\n[https://tympanus.net/codrops/20...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Growing Sunflowers with Three.js"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/04/25/growing-sunflowers-with-three-js/"
        ],
        "dc:creator": [
            "Yuriy Artyukh"
        ],
        "pubDate": [
            "Mon, 25 Apr 2022 12:43:45 +0000"
        ],
        "category": [
            "Videos",
            "three.js",
            "webgl"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63409",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A coding session where you'll learn how to create an interactive scene to claim a tank with sunflowers using Three.js and Polycam.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/25/growing-sunflowers-with-three-js/\">Growing Sunflowers with Three.js</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Growing sunflowers with three.js\" width=\"500\" height=\"281\" src=\"https://www.youtube.com/embed/jmsw7ZLASkg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div></figure>\n\n\n\n<p>In this new <a href=\"https://www.youtube.com/user/flintyara/featured\">ALL YOUR HTML</a> coding session we&#8217;ll be creating an interactive scene to claim tanks with sunflowers using Three.js and Polycam. </p>\n\n\n\n<p><strong>Demo as NFT: <a href=\"https://versum.xyz/token/versum/21733\">https://versum.xyz/token/versum/21733</a></strong></p>\n\n\n\n<p>This coding session was streamed live on April 24, 2022.</p>\n\n\n\n<div class=\"box-highlight\"><p><strong>Check out the <a href=\"http://allyourhtml.club/sunflower/\">live demo</a>.</strong></p></div>\n\n\n\n<p>Support: <a href=\"https://www.patreon.com/allyourhtml\" target=\"_blank\" rel=\"noreferrer noopener\">https://www.patreon.com/allyourhtml</a> </p>\n\n\n\n<p>Setup: <a href=\"https://gist.github.com/akella/a19954c9ee42e3ae85b76d0e06977535\" target=\"_blank\" rel=\"noreferrer noopener\">https://gist.github.com/akella/a19954&#8230;</a> </p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/25/growing-sunflowers-with-three-js/\">Growing Sunflowers with Three.js</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A coding session where you'll learn how to create an interactive scene to claim\na tank with sunflowers using Three.js and Polycam.\n\nThe post Growing Sunflowers with Three.js\n[https://tympanus.net/codr...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "author": [
            "Adrian Bece"
        ],
        "title": [
            "Boost Resource Loading With fetchpriority, A New Priority Hint"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/boost-resource-loading-new-priority-hint-fetchpriority/"
        ],
        "pubDate": [
            "Mon, 11 Apr 2022 09:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/boost-resource-loading-new-priority-hint-fetchpriority/"
        ],
        "description": [
            "This new attribute will enable us to fine-tune relative resource priority, improve LCP performance, deprioritize JavaScript fetch calls, and much more. Let’s check out <code>fetchpriority</code> and explore some potential use cases."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/boost-resource-loading-new-priority-hint-fetchpriority/\" />\n              <title>Boost Resource Loading With fetchpriority, A New Priority Hint </title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Boost Resource Loading With fetchpriority, A New Priority Hint </h1>\n                  \n                    \n                    <address>Adrian Bece</address>\n                  \n                  <time datetime=\"2022-04-11T09:30:00&#43;00:00\" class=\"op-published\">2022-04-11T09:30:00+00:00</time>\n                  <time datetime=\"2022-04-11T09:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>JavaScript, CSS, images, iframes, and other resources impact how quickly website loads, renders and becomes usable to the user. Loading experience is crucial to the user’s first impression and overall usability, so Google defined <strong>Largest Contentful Paint (LCP)</strong> metric to measure how quickly the main content loads and is displayed to the user.</p>\n\n<p>The main content for LCP is usually the largest element located above the fold. This element could be an image, video, or simply, just a large block of text. Of all those options, it’s safe to assume that text is the best choice for LCP performance because it loads and renders fast.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"798\"\n\t\t\theight=\"382\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"web.dev’s main content is an image according to LCP\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      web.dev’s main content is an image according to LCP (test ran on WebPageTest). (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/f6e4e99d-0724-46e3-bce9-11aa0ecd62e4/1-resource-loading-optimization-fetchpriority-attribute.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Browsers follow a <a href=\"https://developers.google.com//web/fundamentals/performance/critical-rendering-path/analyzing-crp\">critical render path</a> to parse the HTML document and its referenced resources (CSS, JS, images, etc.) to display the content on the screen. Browsers construct a render tree using DOM and CSSOM, and the page renders once all render-blocking resources like CSS, font files, and scripts have been parsed and processed.</p>\n\n<h2 id=\"resource-priorities-defaults\">Resource Priorities Defaults</h2>\n\n<p>Let’s focus on how these resources are requested and downloaded. The HTML document is the first resource to be requested and downloaded, but how do browsers determine what to download next and in which order? <strong>Browsers have a set of predetermined priorities</strong> for each resource type, so they can be downloaded in an optimal order.</p>\n\n<p>Here is a rough summary according to the “<a href=\"https://docs.google.com/document/d/1bCDuq9H1ih9iNjgzyAL0gpwNFiEP4TZS-YLRp_RuMlc/edit#\">Resource Fetch Prioritization and Scheduling in Chromium</a>” by Patrick Meenan:</p>\n\n<table class=\"tablesaw\">\n  <thead>\n    <tr>\n      <th>Priority</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><strong>Highest</strong></td>\n      <td><ul>\n        <li>Main resource (usually a HTML document),</li>\n        <li>CSS (early &ndash; if requested before any non-preloaded image file) and font files;</li>\n      </ul></td>\n    </tr>\n    <tr>\n      <td><strong>High</strong></td>\n      <td><ul>\n        <li>Script (early &ndash; if requested before any non-preloaded image file),</li>\n        <li>Preload,</li>\n        <li>Image (in viewport);</li></ul></td>\n    </tr>\n    <tr>\n      <td><strong>Medium</strong></td>\n      <td><ul>\n        <li>CSS and Script (late &ndash; if requested after a non-preloaded image file).</li></ul></td>\n    </tr>\n    <tr>\n      <td><strong>Low</strong></td>\n      <td><ul>\n        <li>Script (async),</li>\n        <li>Media and images,</li>\n        <li>SVG document.</li></ul></td>\n    </tr>\n    <tr>\n      <td><strong>Lowest</strong></td>\n      <td><ul>\n        <li>CSS mismatch,</li>\n        <li>Prefetch.</li></ul></td>\n    </tr>\n  </tbody>\n</table>\n\n<p>These default priorities work reasonably well for most cases, usually resulting in a good performance. However, developers with a deep understanding of the project may want to improve performance beyond that by doing some fine-tuning under the hood. It’s common knowledge that better website performance results in more conversions, more traffic, and better user experience.</p>\n\n<p>We can use the <code>preload</code> attribute for the HTML <code>link</code> element to optimize loading performance by ensuring that the browser discovers the resource earlier, downloads it, and caches it. However, that doesn’t provide us with more granular control over a particular resource type.</p>\n\n<p>For example, let’s say that we are loading two render-blocking stylesheets. How can we signal to the browser that <code>main.css</code> file is more important than <code>third-party-plugin.css</code> file without resorting to using JavaScript or some other workaround?</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"fetchpriority-html-attribute\"><code>fetchpriority</code> HTML attribute</h2>\n\n<p>Enter <code>fetchpriority</code> HTML attribute. This new attribute can be assigned to virtually any HTML element that loads some kind of resources like images and scripts and affects its relative priority. <strong>Relative priority</strong> means that we can only affect a priority within the same resource type. Meaning that we cannot tell browsers to load images before loading the render-blocking JavaScript.</p>\n\n<p>It’s important to keep in mind that this attribute <strong>doesn’t ensure that a higher-priority resource will be loaded before other (lower-priority) resources of the same type.</strong>  So, <code>fetchpriority</code> shouldn’t be used to control the loading order itself, like in a case where we’d want a JavaScript dependency to be loaded before a script that uses it.</p>\n\n<p>Also, this <strong>attribute doesn’t force the browser to fetch a resource</strong> or prevent it from fetching. It’s up to the browser if it’s going to fetch the resource or not. This attribute just helps the browser prioritize it when it is fetched.</p>\n\n<p>That being said, <code>fetchpriority</code> attribute accepts one of the following three values:</p>\n\n<ul>\n<li><code>low</code><br />\nDecrease the relative priority of the resource.</li>\n<li><code>high</code><br />\nIncrease the relative priority of the resource.</li>\n<li><code>auto</code><br />\nDefault value which lets the browser decide the priority.</li>\n</ul>\n\n<p>Going back to our previous example, we can use this attribute to <strong>signal to the browser</strong> that we want to initiate a request and download of <code>main.css</code> at a higher priority than the <code>third-party-plugin.css</code> which is the same render-blocking CSS resource as <code>main.css</code>.</p>\n\n<pre><code class=\"language-javascript\">&lt;link rel=\"stylesheet\" href=\"/path/to/main.css\" fetchpriority=\"high\" /&gt;\n&lt;link rel=\"stylesheet\" href=\"/path/to/third-party-plugin.css\" fetchpriority=\"low\" /&gt;</code></pre>\n\n<p>Pretty simple, right?</p>\n\n<p><strong>Note</strong>: <em>At the moment of writing of this article, the <code>fetchpriority</code> attribute is currently supported in Chrome Canary with full release set for Chrome version 101, with other browsers to follow suit.</em></p>\n\n<h3 id=\"use-it-sparingly\">Use It Sparingly</h3>\n\n<p>It’s not recommended to assign <code>fetchpriority</code> to every resource. Browsers already do a good enough job, so it should be used sparingly for very specific use cases where we want to prioritize requests for improving LCP, prioritize one deferred resource over the other of the same type, prioritize preload requests, etc. Over-using this attribute or running premature optimization might harm performance, so make sure to run performance tests to verify.</p>\n\n<p>With that in mind, let’s move on to some of those real-world examples and scenarios, so we can use this new attribute effectively.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"examples-and-use-cases\">Examples And Use Cases</h2>\n\n<h3 id=\"improving-largest-contentful-paint-performance\">Improving Largest Contentful Paint performance</h3>\n\n<p>This is currently the best use-case for <code>fetchpriority</code>. Images are processed after all render-blocking and critical resources have already been rendered, and even using <code>preload</code> or <code>loading=&quot;eager&quot;</code> won’t change that. However, with <code>fetchpriority</code> we can try to make sure the LCP image is more likely to be ready for that initial render, resulting in a considerable performance boost.</p>\n\n<p>With that in mind, <strong>text block is the most optional LCP candidate in most cases</strong>, as it performs better than image or other media content. For cases where images are critical or the main part of the content, we have no option other than just to display them. So, we need to optimize them to load as quickly as possible.</p>\n\n<p>Let’s take a look at a simple example of an image carousel which is also the main content in the viewport and a prime candidate for LCP.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"oNppEoX\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"\"\n\tclass=\"codepen\">See the Pen [Example - without fetch priority](https://codepen.io/smashingmag/pen/oNppEoX) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oNppEoX\">Example - without fetch priority</a> by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</figcaption>\n</figure>\n\n<p>We can run Lighthouse test to check the metrics and use this data for comparison.</p>\n\n<p><strong>Please note</strong>: <em>Several factors can affect the stats, so the results might differ, but the general gist is the same.</em></p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"732\"\n\t\t\theight=\"291\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An example without priority hints\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Without priority hints. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c4061d12-8e82-4a09-99f5-a897cea7d33b/2-resource-loading-optimization-fetchpriority-attribute.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>Let’s use <code>fetchpriority</code> and assign a <code>high</code> priority to the main (active) image and <code>low</code> priority to thumbnails.</p>\n\n<pre><code class=\"language-javascript\">&lt;!-- Carousel is above the fold --&gt;    \n&lt;nav&gt;\n      &lt;ul class=\"hero__list\"&gt;\n        &lt;li&gt;\n          &lt;img fetchpriority=\"low\" src=\"...\" /&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          &lt;img fetchpriority=\"low\" src=\"...\" /&gt;\n        &lt;/li&gt;\n\n     &lt;!-- ... --&gt;\n\n    &lt;figure class=\"hero__figure\"&gt;\n      &lt;img fetchpriority=\"high\" src=\"...\"&gt;&lt;/img&gt;\n\n    &lt;!-- ... --&gt;</code></pre>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"mdppXLR\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"\"\n\tclass=\"codepen\">See the Pen [Example - with fetch priority (https://codepen.io/smashingmag/pen/mdppXLR) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</p>\n\t<figcaption>See the Pen [Example - with fetch priority (<a href=\"https://codepen.io/smashingmag/pen/mdppXLR\">https://codepen.io/smashingmag/pen/mdppXLR</a>) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</figcaption>\n</figure>\n\n<p>Let’s run Lighthouse on the modified example, and we can notice that our LCP has improved.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"674\"\n\t\t\theight=\"252\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"An example with fetchpriority=&#39;high&#39; on main image and fetchPriority=&#39;low&#39; on the thumbnails\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      With fetchpriority='high' on main image and fetchPriority='low' on the thumbnails. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2a1a4894-cfa8-4389-b1b7-6a012627920c/3-resource-loading-optimization-fetchpriority-attribute.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>By using <code>fetchpriority</code>, we marked which of the images were more important for content and which are not. So, the browser took these signals into account when fetching resources, prioritizing the main content image, which in turn allowed for the main content to show earlier, improving the LCP metric!</p>\n\n<h3 id=\"deferred-images\">Deferred Images</h3>\n\n<p>Similarly, we can use <code>fetchpriority</code> attribute to prioritize below-the-fold resources that have <code>loading=&quot;lazy&quot;</code> attribute. Even though this won’t affect LCP times, we can still signal the browser to prioritize the largest (active) carousel image over the small thumbnails when the browser decides to load them. That way, we can improve even the lazy loading user experience.</p>\n\n<p>Remember, this <strong>attribute doesn’t force browsers to fetch a resource</strong>. Even with <code>fetchpriority</code> set to <code>high</code>, the <strong>browser will still decide if the resource is going to be fetched</strong> or not. We only signal to the browser which one of these requests is more important from each group.</p>\n\n<pre><code class=\"language-javascript\">&lt;!-- Carousel is below the fold --&gt;   \n\n&lt;nav&gt;\n      &lt;ul class=\"hero__list\"&gt;\n        &lt;li&gt;\n          &lt;img loading=\"lazy\"fetchpriority=\"low\" src=\"...\" /&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n          &lt;img loading=\"lazy\" fetchpriority=\"low\" src=\"...\" /&gt;\n        &lt;/li&gt;\n\n     &lt;!-- ... --&gt;\n\n    &lt;figure class=\"hero__figure\"&gt;\n      &lt;img loading=\"lazy\" fetchpriority=\"high\" src=\"...\"&gt;&lt;/img&gt;\n\n    &lt;!-- ... --&gt;</code></pre>\n\n<h3 id=\"deferred-stylesheets\">Deferred Stylesheets</h3>\n\n<p>We can also use <code>fetchpriority</code> to signal which scripts and stylesheets should have a higher priority when loading.</p>\n\n<p><strong>Please note</strong>: <em>The scripts and stylesheets remain render-blocking if they are not deferred.</em></p>\n\n<p>Let’s take a look at the following example. If you want to follow along with this example on CodePen, <strong>make sure to inspect the configuration of the HTML tab on the CodePen</strong> example below. The code referenced below is included there, as the CodePen HTML tab only covers HTML <code>body</code>, and <code>head</code> is added with this separate config.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"oNppEQx\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"\"\n\tclass=\"codepen\">See the Pen [Prioritizing stylesheets](https://codepen.io/smashingmag/pen/oNppEQx) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oNppEQx\">Prioritizing stylesheets</a> by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</figcaption>\n</figure>\n\n<p>We are loading the following resources:</p>\n\n<ul>\n<li><strong>Google Fonts Stylesheet</strong><br />\nDefer loading right after the first render. This font switch is visible to the user (FOUT).</li>\n<li><strong>Non-Critical Below-The-Fold Stylesheet</strong> (<em>Bootstrap is used just as an example for a more sizeable CSS file</em>)<br />\nDefer loading after first render with low priority, because those styles are used below-the-fold.</li>\n<li><strong>Critical CSS</strong><br />\nRender-blocking and applied immediately.</li>\n</ul>\n\n<p>We’ll use a common technique to <a href=\"https://web.dev/defer-non-critical-css/\">defer the loading of non-critical stylesheets</a> and add a <code>preload</code> with appropriate <code>fetchpriority</code> to ensure that font is loaded as soon as possible, so the <a href=\"https://web.dev/preload-optional-fonts/\">FOUT (Flash of unstyled text)</a> occurs right after the first render.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">&lt;!-- Increase priority for fonts to load fonts right after the first render --&gt;\n&lt;link rel=\"preload\"\n      as=\"style\"\n      fetchpriority=\"high\" \n      onload=\"this.onload=null;this.rel='stylesheet'\"\n      href=\"https://fonts.googleapis.com/css2?family=Crete+Round&family=Roboto:wght@400;700&display=swap\" /&gt;\n\n&lt;!-- Preload non-critical, below-the-fold CSS with low priority --&gt;\n&lt;link rel=\"preload\"\n      as=\"style\"\n      fetchpriority=\"low\"\n      onload=\"this.onload=null;this.rel='stylesheet'\"\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" /&gt;\n\n&lt;!-- No JS fallback for stylesheets --&gt;\n&lt;noscript&gt;\n  &lt;!-- --&gt;\n&lt;/noscript&gt;\n\n&lt;!-- Inline critical CSS (above-the-fold styles) --&gt;\n&lt;style&gt;\n  /&#42; Critical CSS &#42;/\n&lt;/style&gt;</code></pre>\n</div>\n\n<p>Although this configuration won’t affect LCP or some other performance metrics, it showcases how we can use <code>fetchpriority</code> to improve the loading experience by prioritizing one resource over the other within the same type.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"oNppEVL\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"\"\n\tclass=\"codepen\">See the Pen [Prioritizing stylesheets - with fetchpriority](https://codepen.io/smashingmag/pen/oNppEVL) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/oNppEVL\">Prioritizing stylesheets - with fetchpriority</a> by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</figcaption>\n</figure>\n\n<h3 id=\"fine-tuning-javascript-resource-priorities\">Fine-tuning JavaScript Resource Priorities</h3>\n\n<p>Although we can use <code>async</code> and <code>defer</code> to change when scripts are loaded and parsed, with <code>fetchpriority</code> we can have more granular control over JavaScript resources.</p>\n\n<p>These two <a href=\"https://web.dev/priority-hints/#reprioritize-scripts\">examples from web.dev</a> perfectly showcase how we can combine these attributes for even more script loading options:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">&lt;script src=\"async_but_important.js\" async fetchpriority=\"high\"&gt;&lt;/script&gt;\n&lt;script src=\"blocking_but_unimportant.js\" fetchpriority=\"low\"&gt;&lt;/script&gt;</code></pre>\n</div>\n\n<h3 id=\"prioritizing-javascript-fetch-requests\">Prioritizing JavaScript <code>fetch</code> Requests</h3>\n\n<p>This attribute is not limited to HTML, it can be also used in JavaScript <code>fetch</code> to prioritize some API calls over others.</p>\n\n<p>For example, let’s say we are loading a blog post. We want to prioritize the main content over comments, so we need to pass a <code>priority</code> attribute in <code>fetch</code> options object.</p>\n\n<p><strong>Please note</strong>: <em>The <code>priority</code> value is <code>high</code> by default, so we only need to assign <code>low</code> when we want to reduce the priority of the <code>fetch</code> request.</em></p>\n\n<pre><code class=\"language-javascript\">/&#42; High-priority fetch for post content (default) &#42;/\nfunction loadPost() {\n  fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n    .then(parseResponse)\n    .then(parsePostData)\n    .catch(handleError);\n}\n\n/&#42; Lower-priority fetch for comments (with priority option) &#42;/\nfunction loadComments() {\n  fetch(\"https://jsonplaceholder.typicode.com/posts/1/comments\", {\n    priority: \"low\"\n  })\n    .then(parseResponse)\n    .then(parseCommentsData)\n    .catch(handleError);\n}</code></pre>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"ExooQBa\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"\"\n\tclass=\"codepen\">See the Pen [Fetch with priority](https://codepen.io/smashingmag/pen/ExooQBa) by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/ExooQBa\">Fetch with priority</a> by <a href=\"https://codepen.io/AdrianBece\">Adrian Bece</a>.</figcaption>\n</figure>\n\n<h3 id=\"embedded-iframe-elements\">Embedded <code>iframe</code> Elements</h3>\n\n<p>We can assign <code>fetchpriority</code> to <code>iframe</code> elements just like any other resource. However, keep in mind that this attribute only affects the main resource of the iframe and doesn’t apply to the resources within the <code>iframe</code>. The browser will load resources within the iframe with default priorities. However, we are still delaying them to start later.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-html\">&lt;iframe fetchpriority=\"low\" type=\"text/html\" width=\"640\" height=\"390\" src=\"http://www.youtube.com/embed/...\" frameborder=\"0\"&gt;&lt;/iframe&gt;</code></pre>\n</div>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Lately, we’ve seen exciting new features that allow us control over browser and loading behavior &mdash; <a href=\"https://www.smashingmagazine.com/2022/01/introduction-css-cascade-layers/\">CSS Cascade Layers</a> allow us control over the CSS rule layers, and now, <code>fetchpriority</code> will allow us more granular control over resource loading priority. However, this control over the core concepts requires developers to be careful and use them according to best practices, as incorrect use may harm both the performance and user experience.</p>\n\n<p>With that in mind, <code>fetchpriority</code> should be used only in specific cases, such as:</p>\n\n<ul>\n<li>Improving LCP performance for image and other media resources;</li>\n<li>Changing priorities of <code>link</code> and <code>script</code> resources;</li>\n<li>Lowering the priority of JavaScript <code>fetch</code> requests which are not critical for content or functionality;</li>\n<li>Lowering the priority of iframe elements.</li>\n</ul>\n\n<p>At the time of writing of this article, this attribute is available in <strong>Chrome Canary and is set to be released in Chrome version 101</strong>, with other browsers to follow suit. It will be great to see the development community come up with more interesting use cases and performance improvements.</p>\n\n<h3 id=\"references\">References</h3>\n\n<ul>\n<li><a href=\"https://wicg.github.io/priority-hints/#effects-of-priority-hints\">Priority Hints</a>, Draft Community Group Report</li>\n<li>“<a href=\"https://web.dev/priority-hints/\">Optimizing Resource Loading With Priority Hints</a>”, Leena Sohoni, Addy Osmani and Patrick Meenan</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "This new attribute will enable us to fine-tune relative resource priority,\nimprove LCP performance, deprioritize JavaScript fetch calls, and much more.\nLet’s check out fetchpriority and explore some p...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "10 Mental Models Developers Can Use to Get Unstuck"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/10-mental-models-developers-can-use-to-get-unstuck/?utm_source=rss\"\n              title=\"10 Mental Models Developers Can Use to Get Unstuck\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels.png\"\n        alt=\"Mental Models\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels-300x158.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels-1024x538.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels-768x403.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn ten mental models that you can use to get unstuck, deepen your understanding of problems, and see them from new angles.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/10-mental-models-developers-can-use-to-get-unstuck/?utm_source=rss\">10 Mental Models Developers Can Use to Get Unstuck</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/10-mental-models-developers-can-use-to-get-unstuck/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258201",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Entrepreneur",
            "Productivity"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Tue, 15 Feb 2022 17:39:59 GMT"
        ],
        "plainDescription": "Mental Models\n[https://uploads.sitepoint.com/wp-content/uploads/2022/02/1644916473mentalmodels.png]\n[https://www.sitepoint.com/10-mental-models-developers-can-use-to-get-unstuck/?utm_source=rss]\nLearn...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "UI Interactions & Animations Roundup #23"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Fri, 22 Apr 2022 13:05:37 +0000"
        ],
        "category": [
            "UI Interactions and Animations Roundups",
            "inspiration",
            "motion-design",
            "roundup"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63361",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A fresh set of selected motion design shots for your inspiration.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/\">UI Interactions &#038; Animations Roundup #23</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>There was lots of amazing creative output from the design community in the past couple of weeks so it&#8217;s time for a new UI Interactions and Animations roundup! The motto is: relax, chill, slow down your decorative motion but move in that crucial content swiftly! Your users will thank you <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Dream-like distortions are also a hit: subtle, wavy and water-like animations are a wonderful way to show images and play with typography.</p>\n\n\n\n<p>Hope you enjoy this selection and draw lots of ideas from it!</p>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18060236-Seek-Menu-Interactions\">Seek Menu Interactions</a></h2>\n\n\n\n<p>by Joe Taylor</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/rareuglyibex?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18053124-Home-Page-Experience\">Home Page Experience</a></h2>\n\n\n\n<p>by Awesomic</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/rectangularblissfulgordonsetter?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17887533-Aesthetica-Magazine\">Aesthetica Magazine</a></h2>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/smoggythoughtfularmadillo?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18004900-Layout-Archive\">Layout Archive</a></h2>\n\n\n\n<p>by Hrvoje Grubisic</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/unequaledincomparableleopard?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18010017-Nectar-CBD-Landing-Page\">Nectar &#8211; CBD Landing Page</a></h2>\n\n\n\n<p>by Phenomenon Studio</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/hotfainthummingbird?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17985385-Landing-page-concept\">Landing page concept</a></h2>\n\n\n\n<p>by Tamerlan Aziev</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/giddyorderlychamois?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18029854-The-Vasa\">The Vasa</a></h2>\n\n\n\n<p>by Maria Krtd</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/anchoredlargegnat?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/18004608-Digital-agency-landing-page-concept\">Digital agency landing page concept</a></h2>\n\n\n\n<p>by Tamerlan Aziev</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/positiveshoddyinsect?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17968793-Hiring-Digital-Designer\">Hiring: Digital Designer</a></h2>\n\n\n\n<p>by Nathan Riley</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/glisteninganchoredalaskanhusky?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17963681-Slider-Exploration\">Slider Exploration</a></h2>\n\n\n\n<p>by Ryan</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/cooperativesmoggyguppy?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17967235-ONE-TYPO\">ONE TYPO</a></h2>\n\n\n\n<p>by Peter Arumugam</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/hilariousenormousfulmar?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17809424-Disegno-Journal-Redesign-Concept-Stories\">Disegno Journal Redesign Concept. Stories</a></h2>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/whisperedsparsegopher?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17858886-Chefz-Onboarding\">Chefz &#8211; Onboarding</a></h2>\n\n\n\n<p>by Martin Maderic</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/nearelegantbeetle?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17846463-NFT-Cats-landing-page-design\">NFT Cats landing page design</a></h2>\n\n\n\n<p>by Sergey Antoniuk</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/safeorganichalcyon?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17750313-Uplinq-Early-Concept\">Uplinq &#8211; Early Concept</a></h2>\n\n\n\n<p>by Quintin Lodge</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/heftyallbushsqueaker?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17800417-ICEHOTEL-Brand-Indentity\">ICEHOTEL &#8211; Brand Indentity.</a></h2>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/welloffscientificirishdraughthorse?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17847940-Orchids-and-Thorns\">Orchids and Thorns</a></h2>\n\n\n\n<p>by The Glyph</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/dismalsoulfulabyssiniangroundhornbill?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17825627-Longread-interview\">Longread interview</a></h2>\n\n\n\n<p>by Tamerlan Aziev</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/longpalatableiguana?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17726689-Wendy-s-Granny-Chocolate-Web-Design-with-Illustrations\">Wendy&#8217;s Granny Chocolate &#8211; Web Design with Illustrations</a></h2>\n\n\n\n<p>by Outcrowd</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/gloriouseminentiaerismetalmark?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17715412-Cryptocurrency-website-navigation\">Cryptocurrency website navigation</a></h2>\n\n\n\n<p>by Lyashenko</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/advancedunevenamericanwarmblood?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17686440-light-and-light-3-10\">light and light-3-10</a></h2>\n\n\n\n<p>by WantLine</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/infatuatedharmlessbadger?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17690230-Ninja-tunes-The-Cinematic-Orchestra\">Ninja tunes. The Cinematic Orchestra</a></h2>\n\n\n\n<p>by Evgeny UPROCK</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/identicalflamboyantgrebe?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n\n\n\n<h2><a href=\"https://dribbble.com/shots/17690701-Crescent-Branding\">Crescent &#8211; Branding</a></h2>\n\n\n\n<p>by Wiktor Buksza</p>\n\n\n<div class='embed_responsive embed_responsive--gfycat'><iframe src='https://gfycat.com/ifr/lankyoilycougar?controls=0' frameborder='0' scrolling='no' width='100%' height='100%' style='position:absolute;top:0;left:0;' allowfullscreen></iframe></div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/\">UI Interactions &#038; Animations Roundup #23</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A fresh set of selected motion design shots for your inspiration.\n\nThe post UI Interactions & Animations Roundup #23\n[https://tympanus.net/codrops/2022/04/22/ui-interactions-animations-roundup-23/]\nap...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Learn to Code with JavaScript: The Most Popular Programming Language on Earth"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/learn-to-code-with-javascript-the-most-popular-programming-language-on-earth/?utm_source=rss\"\n              title=\"Learn to Code with JavaScript: The Most Popular Programming Language on Earth\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            In this guide, we will show you how you can learn to code with JavaScript for free. The JavaScript programming language is versatile, popular, and in high demand — making it a great language for learning how to code.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/learn-to-code-with-javascript-the-most-popular-programming-language-on-earth/?utm_source=rss\">Learn to Code with JavaScript: The Most Popular Programming Language on Earth</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/learn-to-code-with-javascript-the-most-popular-programming-language-on-earth/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=260119",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Vanilla JavaScript"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Wed, 27 Apr 2022 22:26:44 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651123441ltcarticle.jpg]\n[https://www.sitepoint.com/learn-to-code-with-javascript-the-most-popular-programming-language-on-earth/?utm_source=...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "25 Photoshop PSD Laptop Mockup Templates"
        ],
        "link": [
            "https://speckyboy.com/laptop-mockup-templates/"
        ],
        "comments": [
            "https://speckyboy.com/laptop-mockup-templates/#respond"
        ],
        "dc:creator": [
            "Paul Andrew"
        ],
        "pubDate": [
            "Thu, 28 Apr 2022 08:35:56 +0000"
        ],
        "category": [
            "Photoshop",
            "Mockup Templates",
            "PSD Templates"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=122728",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A curated collection of versatile Mac and Windows laptop mockups PSD templates. All of the templates are easy to use and customize.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/laptop-mockup-templates/\">25 Photoshop PSD Laptop Mockup Templates</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>When we think of website and software design, we still think of laptops. Yes, we&#8217;ve got all the handy gadgets. We never part with our smartphones, be they Android phones or Apple&#8217;s iPhones and iPads. Still, when we want to do something seriously, we boot up that laptop and get to work.</p>\n<p>So if you want to showcase your website and software design, there&#8217;s nothing like a laptop mockup template for Photoshop to help you do it!</p>\n<p>Today, we&#8217;re going to show you amazing and versatile laptop mockups. They&#8217;re all really easy to customize. All you need is Photoshop and a few minutes. Thanks to the smart objects system, you can easily replace the placeholders with your own designs to get beautiful and photo-realistic results your clients will love.</p>\n<p>From colorful and fun mockups that work like a charm for engaging your audience (be they your end customers or clients you&#8217;re designing for) to grid mockups with both laptops and tablets, there&#8217;s plenty to pick from.</p>\n<p>When it comes to devices, you can choose between Mac laptops and other Windows brands, depending on your audience&#8217;s preference.</p>\n<div class=\"table-of-contents\"><input type=\"checkbox\" id=\"display-content\"><strong class=\"toc-title\"><label for=\"display-content\">More Mockup Templates</label></strong></p>\n<div class=\"toc-content\">\n<ul>\n<li><a href=\"https://speckyboy.com/banner-mockup-templates/\">Banner Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/book-mockup-templates/\">Book Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/booklet-mockup-templates/\">Booklet Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/bottle-mockup-templates/\">Bottle Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/branding-mockup-templates/\">Branding Identity Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/business-card-templates/\">Business Card Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/box-packaging-mockup-templates/\">Cardboard Box Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/mug-mockup-templates/\">Cup &#038; Mug Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/dress-mockup-templates/\">Dress Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/flyer-mockup-templates/\">Flyer Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/hoodie-mockup-templates/\">Hoodies Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/ipad-mockup-templates/\">iPad Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/iphone-mockup-templates/\">iPhone Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/logo-mockup-templates/\">Logo Design Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/macbook-mockup-templates/\">Macbook Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/magazine-mockup-templates/\">Magazine Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/mobile-app-mockup-templates/\">Mobile App Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/mobile-device-mockup-templates/\">Mobile Device Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/packaging-mockup-templates/\">Packaging Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/frame-poster-mockup-templates/\">Poster Frame Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/sweatshirt-mockup-templates/\">Sweatshirt Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/tote-bag-mockup-templates/\">Tote Bag Mockup Templates</a></li>\n<li><a href=\"https://speckyboy.com/t-shirt-mockup-templates/\">T-Shirt Mockup Templates</a></li>\n</ul>\n</div>\n</div>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2F10-colorful-laptop-mockups-E3DNZ33\" rel=\"noopener noreferrer\">10 Colorful Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Colorful and engaging, these laptop mockup templates will make your next presentation a resounding success! This laptop mockup set consists of ten diverse laptop mockups, which are perfect for presenting web and online store designs, as well as presenting your products. If your audience likes vibrant visuals, pick this pack!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-01.jpg\" alt=\"10 Colorful Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockups-KP2CSR6\" rel=\"noopener noreferrer\">Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>If you&#8217;re looking for unique perspectives, choose this laptop mockup template for Photoshop. With an interesting perspective and plenty of customization options (including removable backgrounds and editable effects), this laptop mockup is perfect for presenting your software and web design, or even branding and visual identity for clients.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-02.jpg\" alt=\"Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockups-DZ8VJA4\" rel=\"noopener noreferrer\">Clean Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Minimalist mockups are perfect for emphasizing your skills, and this laptop template will show everyone you are the Kahlo of graphic design! With four pre-made scenes, a scene creator that lets you customize everything, and numerous personalization options for realizing your vision, this laptop mockup set works like a charm!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-03.jpg\" alt=\"Clean Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://clk.tradedoubler.com/click?p(265883)a(2950047)g(22913796)epi(mockup-template)url(https://stock.adobe.com/templates/laptop-and-tablet-grid-mockup/302303432)\" rel=\"noopener noreferrer\">Laptop &#038; Tablet Grid Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>A minimalist and clean laptop and tablet grid mockup, this set is perfect for presenting a variety of designs. You can showcase the responsiveness of your designs or simply use this laptop and tablet PSD mockup set to give your clients plenty of options to choose from during your presentation.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-04.jpg\" alt=\"Laptop Tablet Grid Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/748730/10168?u=http%3A%2F%2Fplaceit.net%2Fc%2Fmockups%2Fstages%2Fresponsive-mockup-of-two-macbooks-pro-and-an-ipad-pro-against-a-customizable-background-2026-el1\" rel=\"noopener noreferrer\">MacBooks Pro &#038; iPad Pro Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Make some magic with the famed Mac! This highly-responsive Apple device mockup set consists of 2 Mac laptops, as well as an iPad, giving you plenty of room to work with. You can upload different designs or showcase the responsiveness on different devices. Customize the background, and you are golden!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-05.jpg\" alt=\"MacBooks Pro iPad Pro Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockups-3Y6TW97\" rel=\"noopener noreferrer\">Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Beautifully positioned, these PSD laptop mockup templates are perfect for bringing your designs to life. You can pick from 3 photo-realistic styles and easily edit the laptop mockups with Photoshop smart objects.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-06.jpg\" alt=\"Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mock-up-EZHZUX\" rel=\"noopener noreferrer\">Photorealistic Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Simple and clean, this laptop mockup template for Photoshop gives you the opportunity to showcase your designs in a minimalist, industrial background, perfect for both colorful and dark designs. You&#8217;ll get six photo-realistic laptop PSD mockups and 4 Photoshop photo filters to make your presentation even more stunning. </p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-07.jpg\" alt=\"Photorealistic Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-screen-mockup-psds-YAD5FZQ\" rel=\"noopener noreferrer\">Laptop Screen Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Clean and minimalist, this laptop mockup template puts an emphasis on the screen showcasing your design. With five customizable PSD laptop mockups, adjustable background, customizable effects, and plenty of other options, you&#8217;ll love adding your own designs and making sure that every little detail delights your target audience. </p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-08.jpg\" alt=\"Laptop Screen Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://clk.tradedoubler.com/click?p(265883)a(2950047)g(22913796)epi(mockup-template)url(https://stock.adobe.com/templates/laptop-presentation-showcase-mockup/320620433)\" rel=\"noopener noreferrer\">Laptop Presentation Showcase Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Everyone loves vibrant and engaging presentations! And with this friendly laptop mockup template for Photoshop, you can make sure both your designs and the way you&#8217;ve chosen to present them absolutely delight your audience. This mockup is perfect for highlighting software and features, as well as web design.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-09.jpg\" alt=\"Laptop Presentation Showcase Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/748730/10168?u=http%3A%2F%2Fplaceit.net%2Fc%2Fmockups%2Fstages%2Fdigital-mockup-of-four-different-apple-devices-2025-el1\" rel=\"noopener noreferrer\">Various Apple Devices Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>An apple a day keeps the doctor away, and an Apple mockup keeps all your customers close! This Apple device mockup set consists of iPhones, iPads, Mac desktops, and Mac laptops. You can showcase responsiveness or add a different design to each mockup. Then wrap it up with fun backgrounds!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-10.jpg\" alt=\"Various Apple Devices Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Fpapercraft-laptop-diy-A6YPVD\" rel=\"noopener noreferrer\">Papercraft Laptop DIY Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>This fun papercraft laptop mockup template is perfect for audiences that value creativity! You can pick from 6 paper illustrations that bring a dose of interactivity to your designs and customize the colors of different parts. Give your regular presentations a little something extra, and rock your customers&#8217; socks off!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-11.jpg\" alt=\"Papercraft Laptop DIY Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2F5-laptop-and-tablet-mock-ups-in-cafe-vol-3-MWGDNP3\" rel=\"noopener noreferrer\">5 Laptop &#038; Tablet in Cafe Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>For a friendly, down-to-earth atmosphere, pick these five laptop and tablet mockups photographed in a cafe. After customizing the PSDs with a little help from Photoshop smart objects, you&#8217;ll get stunning, photo-realistic results. You can showcase everything from graphic design to designs of specific software features and websites.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-12.jpg\" alt=\"Laptop Tablet Cafe Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Fresponsive-website-psd-mock-up-desk-FR9P7HZ\" rel=\"noopener noreferrer\">Responsive Website &#038; Desk Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>This photo-realistic mockup template set perfectly showcases the responsiveness of your design! If your customers want their websites and tools to look perfect on every device (phone, tablet, and desktop), show them how great your work is with these device templates. All it takes is a few clicks in Photoshop!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-13.jpg\" alt=\"Responsive Website Desk Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://clk.tradedoubler.com/click?p(265883)a(2950047)g(22913796)epi(mockup-template)url(https://stock.adobe.com/templates/desktop-laptop-smartphone-and-tablet-mockup/289166887)\" rel=\"noopener noreferrer\">Desktop, Laptop, Smartphone and Tablet Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>If your design is not responsive, you will have to go back to editing. Nip that in the bud by showing your clients how your designs are displayed on different devices with these mockups for Photoshop. </p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-14.jpg\" alt=\"Desktop Laptop Smartphone Tablet Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mock-up-NH6EFTJ\" rel=\"noopener noreferrer\">Coffee &#038; Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Modern and interactive, these Macbook Pro laptop mockup templates are perfect for communicating with modern and stylish audiences. Showcase your features and user experience through 3 different mockups. You can easily edit details and present the photo-realistic results. These mockups perfectly match brands with sleek and refined identity and visuals!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-15.jpg\" alt=\"Coffee Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/748730/10168?u=http%3A%2F%2Fplaceit.net%2Fc%2Fmockups%2Fstages%2Flaptop-cover-mockup-featuring-a-computer-on-a-wooden-table-2287-el1\" rel=\"noopener noreferrer\">Computer on a Wooden Table Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>This atmospheric laptop mockup is perfect for presenting your design for laptop covers and stickers. If you&#8217;re an artist looking to expand your offer, this mockup is a great solution! Help your customers visualize what your laptop stickers will look like on their laptops, and boost your sales!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-16.jpg\" alt=\"Computer on a Wooden Table Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockup-XBFLEWR\" rel=\"noopener noreferrer\">Laptop Mockup NX <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Give your virtual designs a personal touch with this laptop mockup. With well-organized layers, this mockup is a delight: it&#8217;s easy to edit with Photoshop smart objects, and it guarantees photo-realistic results for your next presentation. Easily add your UI, software, or web designs, and wow your audience.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-17.jpg\" alt=\"Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockups-MV92LH5\" rel=\"noopener noreferrer\">Clean Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Simple and focused on the screen, these laptop mockup templates can help you present your web design or UI work in the best possible light. You&#8217;ll get 4 PSD laptop mockups that you can completely customize to fit your (or your customers&#8217;) style for photo-realistic results.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-18.jpg\" alt=\"Clean Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-mockups-NGLZ85F\" rel=\"noopener noreferrer\">Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Simple and clean, these laptop mockup templates feature the Macbook Pro, and pay special attention to screenshots. You&#8217;ll get four different PSD files, shot from different angles and customizable. If you want to make your own close-ups, you absolutely can! In the end, you will get extremely photo-realistic results.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-19.jpg\" alt=\"Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://clk.tradedoubler.com/click?p(265883)a(2950047)g(22913796)epi(mockup-template)url(https://stock.adobe.com/templates/laptop-and-smartphone-on-wooden-table-mockup-2/176409590)\" rel=\"noopener noreferrer\">Laptop and Smartphone on Wooden Table Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>These laptop and smartphone mockup templates showcase your design in a calm and neutral environment. You can add your own designs to the two devices, so they work like a charm for showcasing responsiveness. And thanks to Photoshop, you will have a gorgeous presentation in just a few minutes!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-20.jpg\" alt=\"Laptop and Smartphone on Wooden Table Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Fwhite-laptop-mockup-FZ2X4EH\" rel=\"noopener noreferrer\">White Laptop Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Stylish and perfect for light, dark, and colorful designs, these white laptop mockup templates are like nothing you&#8217;d ever seen! With 23 PSD files, you can showcase your designs in their full glory. Show everyone that your work isn&#8217;t just practical &#8211; it&#8217;s magical!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-21.jpg\" alt=\"White Laptop Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/298927/4662?subId1=mockup-templates&#038;u=https%3A%2F%2Felements.envato.com%2Flaptop-screen-mockups-EBPTW9F\" rel=\"noopener noreferrer\">Laptop Screen Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Keep the eyes glued to what matters: your design. These laptop screen templates allow you to focus on the quality of your work, be that visual identity design or software/web design. You&#8217;ll get three high-quality PSD laptop mockups, as well as plenty of customizable elements for photo-realistic results.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-22.jpg\" alt=\"Laptop Screen Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://clk.tradedoubler.com/click?p(265883)a(2950047)g(22913796)epi(mockup-template)url(https://stock.adobe.com/templates/laptop-workspace-mockup/122366101)\" rel=\"noopener noreferrer\">Laptop Workspace Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>A clean workspace and a single laptop with your design on it. Doesn&#8217;t that sound like a dream? This laptop mockup (2 variations) returns the focus back to your work.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-23.jpg\" alt=\"Laptop Workspace Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/748730/10168?u=http%3A%2F%2Fplaceit.net%2Fc%2Fmockups%2Fstages%2Fsticker-mockup-placed-on-a-macbook-2291-el1\" rel=\"noopener noreferrer\">Sticker Placed on a MacBook Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Help your customers personalize their Macbooks with these laptop sticker mockup templates! Easy to customize (it takes a few clicks, and you&#8217;ll be done), these mockup templates offer a sleek and minimalist way of presenting your work. This Macbook mockup works especially well for light and colorful designs!</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-24.jpg\" alt=\"Sticker Placed on a MacBook Photoshop PSD Mockup Template\"></p>\n<h2><a target=\"_blank\" href=\"https://1.envato.market/c/78798/748730/10168?u=http%3A%2F%2Fplaceit.net%2Fc%2Fmockups%2Fstages%2Flaptop-sleeve-mockup-featuring-a-woman-at-an-office-30851\" rel=\"noopener noreferrer\">Laptop Sleeve Mockup Templates <i class=\"fas fa-external-link-alt external\"></i></a> <small>(Photoshop PSD)</small></h2>\n<p>Spread your work far and wide with laptop sleeves! And then, when it&#8217;s time to promote your designs, use these gorgeous laptop sleeve mockup templates.</p>\n<p><img loading=\"lazy\" width=\"870\" height=\"480\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/laptop-mockup-templates-25.jpg\" alt=\"Laptop Sleeve Photoshop PSD Mockup Template\"></p>\n<hr>\n<p>Use these laptop templates to improve your presentations and breathe life into your projects. </p>\n<p>Whether you&#8217;re designing a website or software, these laptop mockups will help you highlight all the things you love about your designs and make your work quality crystal clear to your customers.</p>\n<p>These mockups are perfect for showcasing responsiveness, aesthetics, user experience, and &#8211; of course &#8211; your skills.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/laptop-mockup-templates/\">25 Photoshop PSD Laptop Mockup Templates</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/laptop-mockup-templates/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "A curated collection of versatile Mac and Windows laptop mockups PSD templates.\nAll of the templates are easy to use and customize.\n\nThe post 25 Photoshop PSD Laptop Mockup Templates\n[https://speckybo...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "SitePoint NFTs – or how we floated rhinos on the OpenSea"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss\"\n              title=\"SitePoint NFTs – or how we floated rhinos on the OpenSea\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino.jpg\"\n        alt=\"Origami Rhinos\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino-300x209.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino-768x536.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino.jpg 1024w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            After 20+ years and over 100 book cover designs, we’re releasing a strictly limited run of our latest design work as purchasable digital art.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss\">SitePoint NFTs – or how we floated rhinos on the OpenSea</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207534",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Blockchain",
            "Blogs",
            "Design & UX",
            "Ethereum",
            "Web"
        ],
        "dc:creator": [
            "Alex Walker"
        ],
        "pubDate": [
            "Thu, 21 Oct 2021 16:58:49 GMT"
        ],
        "plainDescription": "Origami Rhinos\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634858073291_-_The_Rackley_Rhino.jpg]\n[https://www.sitepoint.com/nfts-rhinos-on-the-oceansea/?utm_source=rss] After\n20+ years ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "A Beginner’s Guide to Vue Router"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss\"\n              title=\"A Beginner’s Guide to Vue Router\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router.jpg\"\n        alt=\"A Beginner's Guide to Vue Router\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn the basics of using Vue Router, such as router setup, passing custom parameters, page navigation, and implementing a 404 page.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss\">A Beginner’s Guide to Vue Router</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=247502",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Wern Ancheta"
        ],
        "pubDate": [
            "Tue, 07 Dec 2021 02:00:26 GMT"
        ],
        "plainDescription": "A Beginner's Guide to Vue Router\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638838876vue-router.jpg]\n[https://www.sitepoint.com/a-beginners-guide-to-vue-router/?utm_source=rss]\nLearn t...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Implement Memoization in React to Improve Performance"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss\"\n              title=\"How to Implement Memoization in React to Improve Performance\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react.jpg\"\n        alt=\"How to Implement Memoization in React to Improve Performance\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how memoization in React helps to improve the performance of your web apps by identifying and eliminating unnecessary re-renders.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss\">How to Implement Memoization in React to Improve Performance</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/implement-memoization-in-react-to-improve-performance/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207779",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Nida Khan"
        ],
        "pubDate": [
            "Thu, 04 Nov 2021 02:00:57 GMT"
        ],
        "plainDescription": "How to Implement Memoization in React to Improve Performance\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635996790memoization-in-react.jpg]\n[https://www.sitepoint.com/implement-memoizat...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "7 Collaborative Coding Tools for Remote Pair Programming"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/collaborative-coding-tools-for-remote-pair-programming/?utm_source=rss\"\n              title=\"7 Collaborative Coding Tools for Remote Pair Programming\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            In a remote team or want to run an idea past a colleague online? We review the best collaborative coding tools for remote pair programming.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/collaborative-coding-tools-for-remote-pair-programming/?utm_source=rss\">7 Collaborative Coding Tools for Remote Pair Programming</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/collaborative-coding-tools-for-remote-pair-programming/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=171845",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Developer Tools",
            "Software",
            "Web"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Mon, 11 Apr 2022 09:00:00 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649794129codingtools.jpg]\n[https://www.sitepoint.com/collaborative-coding-tools-for-remote-pair-programming/?utm_source=rss]\nIn a remote team...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "8 CSS & JavaScript Snippets That Enhance Hamburger Menus"
        ],
        "link": [
            "https://speckyboy.com/css-javascript-snippets-enhance-hamburger-menus/"
        ],
        "comments": [
            "https://speckyboy.com/css-javascript-snippets-enhance-hamburger-menus/#respond"
        ],
        "dc:creator": [
            "Eric Karkovack"
        ],
        "pubDate": [
            "Wed, 27 Apr 2022 06:56:10 +0000"
        ],
        "category": [
            "CSS",
            "JavaScript",
            "CSS Snippets",
            "JavaScript Snippets",
            "Navigation"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139183",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>We share a collection of CSS and JavaScript snippets that will allow you to enhance and expand the capabilities of your hamburger menus.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/css-javascript-snippets-enhance-hamburger-menus/\">8 CSS &#038; JavaScript Snippets That Enhance Hamburger Menus</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>The hamburger menu has become synonymous with mobile apps and websites. It neatly hides navigation items until users need them. They&#8217;re great for saving space when screen real estate is limited.</p>\n<p>And we&#8217;re also seeing them utilized more on desktop devices as well. This makes sense for large, complicated menus and scenarios where content needs to be the main focus. Yes, hamburgers are everywhere these days.</p>\n<p>What&#8217;s more, this type of navigation is incredibly flexible. A variety of reveal animations and <a href=\"https://speckyboy.com/hamburger-mega-menus/\" target=\"_blank\" rel=\"noopener\">layouts</a> are possible, and that&#8217;s only scratching the surface. Designers are constantly redefining what happens behind this little icon.</p>\n<p>Let&#8217;s take a look at 8 CSS and JavaScript snippets that enhance hamburger menus. You might be surprised at what they&#8217;re capable of.</p>\n\n\n<h2>CSS Animated Hamburgers <small>by Eric Porter</small></h2>\n<p>Let&#8217;s start with something simple but important: the open and close interactions. This snippet features a set of click/touch animations. The goal is to make the user experience an intuitive one. Each animation here does so effectively.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"RwZGoBR\" data-preview=\"true\" data-user=\"EricPorter\">See the Pen <a href=\"https://codepen.io/EricPorter/pen/RwZGoBR\" target=\"_blank\" rel=\"noopener\">Hamburgers &#8211; CSS Animated</a> by Eric Porter<script async src=\"https://cpwebassets.codepen.io/assets/embed/ei.js\"></script></p>\n<h2>Menu Button Interaction <small>by Aybüke Ceylan</small></h2>\n<p>Here we have a snippet that puts a unique spin on the hamburger icon&#8217;s look. The offset first and third lines stand out while keeping everything recognizable. There are more goodies inside. Clicking on the icon reveals an attractive menu that appears from the upper left. The feel is very similar to a context menu often seen in operating systems.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"zYNpWdj\" data-preview=\"true\" data-user=\"aybukeceylan\">See the Pen <a href=\"https://codepen.io/aybukeceylan/pen/zYNpWdj\" target=\"_blank\" rel=\"noopener\">Menu Button Interaction</a> by Aybüke Ceylan</p>\n<h2>Morphing a Hamburger Menu with CSS <small>by LM Gonzalves</small></h2>\n<p>Open this menu and behold the outstanding <a href=\"https://speckyboy.com/hamburger-menu-reveal-transitions/\" target=\"_blank\" rel=\"noopener\">CSS transition</a>. The lines of the hamburger icon appear to morph into the individual menu items. This is sure to get a user&#8217;s attention (not to mention leaving a few web designers in awe).</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"KaWaJO\" data-preview=\"true\" data-user=\"lmgonzalves\">See the Pen <a href=\"https://codepen.io/lmgonzalves/pen/KaWaJO\" target=\"_blank\" rel=\"noopener\">Morphing Hamburger Menu with CSS</a> by lmgonzalves</p>\n<h2>Another Menu Concept <small>by Rune Sejer Hoffmann</small></h2>\n<p>This menu&#8217;s reveal is another great example of CSS transitions. In this case, the menu becomes an overlay with a horizontal layout. The typography is spot-on, as are the sweet <a href=\"https://speckyboy.com/css-javascript-card-ui-hover-effects/\" target=\"_blank\" rel=\"noopener\">hover effects</a>.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"rmgYbo\" data-preview=\"true\" data-user=\"RSH87\">See the Pen <a href=\"https://codepen.io/RSH87/pen/rmgYbo\" target=\"_blank\" rel=\"noopener\">Another menu concept</a> by Rune Sejer Hoffmann</p>\n<h2>Animated Nav Toggle &#038; Menu <small>by A. James Liptak</small></h2>\n<p>This overlay menu features a unique twist. It uses multicolored panels, housing the navigation itself in the middle of the screen. To the left, the branding area swaps backgrounds but stays in a consistent spot. Not only does it look cool, but it also keeps users aware of the site&#8217;s brand. That&#8217;s something often lost when implementing overlays.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"MXmvZp\" data-preview=\"true\" data-user=\"AJamesL\">See the Pen <a href=\"https://codepen.io/AJamesL/pen/MXmvZp\" target=\"_blank\" rel=\"noopener\">Animated Nav Toggle &amp;Menu</a> by A. James Liptak</p>\n<h2>Full Width Menu &#038; SVG Animation <small>by Brandon Ward</small></h2>\n<p>If you&#8217;re looking to add a splash of fun to your project, you&#8217;ll want to check out this snippet. The combination of bright colors, smooth transitions, and hover effects makes this menu an attention-getter.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"WjyBQW\" data-preview=\"true\" data-user=\"brandondward\">See the Pen <a href=\"https://codepen.io/brandondward/pen/WjyBQW\" target=\"_blank\" rel=\"noopener\">Full width menu &amp;SVG animation</a> by Brandon Ward</p>\n<h2>CSS Sidebar Toggle <small>by Silvestar Bistrovic</small></h2>\n<p>It seems like most overlay menus out there tend to be opaque. That&#8217;s why this example is a nice change of pace. Clicking the hamburger icon reveals a beautiful menu that utilizes a translucent gradient background. This allows you to see a portion of the site underneath while still being able to easily navigate to another page.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"bgjKKE\" data-preview=\"true\" data-user=\"CiTA\">See the Pen <a href=\"https://codepen.io/CiTA/pen/bgjKKE\" target=\"_blank\" rel=\"noopener\">CSS sidebar toggle</a> by Silvestar Bistrović</p>\n<h2>Slide Out Navigation Menu <small>by Praveen Bisht</small></h2>\n<p>We&#8217;ve seen hamburger menus that take over the entire screen. But what about a menu that simply expands into a traditional navigation bar? This slide-out snippet does so in a very clean and subtle manner. There&#8217;s something to be said for a feature that just works without making a big deal of it. Just be aware that this one may need a little extra work to make it fully responsive.</p>\n<p class=\"codepen\" style=\"height:600px;box-sizing:border-box;display:flex;align-items:center;justify-content:center;border:2px solid;margin:1em 0;padding:1em;\" data-height=\"600\" data-default-tab=\"result\" data-slug-hash=\"NyLmeO\" data-preview=\"true\" data-user=\"prvnbist\">See the Pen <a href=\"https://codepen.io/prvnbist/pen/NyLmeO\" target=\"_blank\" rel=\"noopener\">Slide Out Navigation Menu</a> by Praveen Bisht</p>\n<h2>The Ever-Evolving Hamburger</h2>\n<p>The hamburger menu has come a long way from its early days. No longer confined to a simple drop-down, it can take full advantage of the latest that CSS and JavaScript have to offer. And while it may not be <a href=\"https://speckyboy.com/analyzing-effectiveness-hamburger-menus-web-design/\" target=\"_blank\" rel=\"noopener\">right</a> for every project, its utility continues to grow.</p>\n<p>We hope these examples have inspired you to take the hamburger menu even further! If you&#8217;d like to see more tasty snippets, please check out our <a href=\"https://codepen.io/collection/VYmKPQ\" target=\"_blank\" rel=\"noopener\">CodePen collection</a>.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/css-javascript-snippets-enhance-hamburger-menus/\">8 CSS &#038; JavaScript Snippets That Enhance Hamburger Menus</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/css-javascript-snippets-enhance-hamburger-menus/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "We share a collection of CSS and JavaScript snippets that will allow you to\nenhance and expand the capabilities of your hamburger menus.\n\nThe post 8 CSS & JavaScript Snippets That Enhance Hamburger Me...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "Functional Programming in PHP: Higher-order Functions"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss\"\n              title=\"Functional Programming in PHP: Higher-order Functions\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions.jpg\"\n        alt=\"Functional Programming in PHP: Higher-order Functions\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn what higher-order functions are, how they work, why you might need them, and what they look like in PHP, JavaScript and Python.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss\">Functional Programming in PHP: Higher-order Functions</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/functional-programming-in-php-higher-order-functions/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=213231",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "PHP",
            "Programming"
        ],
        "dc:creator": [
            "Tim Hurd"
        ],
        "pubDate": [
            "Tue, 23 Nov 2021 02:00:41 GMT"
        ],
        "plainDescription": "Functional Programming in PHP: Higher-order Functions\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637195560higher-order-functions.jpg]\n[https://www.sitepoint.com/functional-programming-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "6 Useful Bookmarklets to Boost Web Development"
        ],
        "link": [
            "https://css-tricks.com/web-development-bookmarklets/"
        ],
        "comments": [
            "https://css-tricks.com/web-development-bookmarklets/#comments"
        ],
        "dc:creator": [
            "Daniel Schwarz"
        ],
        "pubDate": [
            "Mon, 28 Mar 2022 18:15:41 +0000"
        ],
        "category": [
            "Article",
            "bookmarklet"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364118",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A bookmarklet is a JavaScript-based bookmark that adds to a web browser. I’d like to show you some awesome web browser hacks to aid your web development workflow and how to convert those hacks into time-saving bookmarklets.</p>\n<ol class=\"simpletoc-list\">\n<li>\n<a  href=\"#activating-design-mode\">Activating design mode</a></li>\n</ol>\n<p>&#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/web-development-bookmarklets/\">6 Useful Bookmarklets to Boost Web Development</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>A bookmarklet is a JavaScript-based bookmark that adds to a web browser. I’d like to show you some awesome web browser hacks to aid your web development workflow and how to convert those hacks into time-saving bookmarklets.</p>\n\n\n\n<span id=\"more-364118\"></span>\n\n\n<ol class=\"simpletoc-list\"   >\n<li>\n<a  href=\"#activating-design-mode\">Activating design mode</a></li><li>\n<a  href=\"#applying-a-background-to-everything\">Applying a background to everything</a></li><li>\n<a  href=\"#simulating-events\">Simulating events</a></li><li>\n<a  href=\"#setting-cookies\">Setting cookies</a></li><li>\n<a  href=\"#toggling-classes\">Toggling classes</a></li><li>\n<a  href=\"#color-widget-bookmark\">Color widget bookmark</a></li><li>\n<a  href=\"#what-other-bookmarklets-can-you-think-of\">What other bookmarklets can you think of?</a></li></ol>\n\n<h3 id=\"activating-design-mode\">Activating design mode</h3>\n\n\n<p>Design mode (styled as <code>designMode</code> since it’s a <em>JavaScript property</em>) is for who like to experiment with variations of copy on a live website. For example, copywriters who like to observe how content reads within the flow of the website’s design, or, say, designers who want to ensure that text fits comfortably within a certain space at a certain font size.</p>\n\n\n\n<p>JavaScript has a mightily simple feature that can render an entire HTML document editable. It works <em>exactly</em> like HTML’s <code>contenteditable=\"true\"</code> name-value attribute (or <code>contentEditable=\"true\"</code> in JavaScript) but for the whole document. If you’d like to see how it works, start by entering the browser’s console using the relevant keyboard shortcut:</p>\n\n\n\n<ul><li><strong>Chrome:</strong> <kbd>Option</kbd> + <kbd>⌘</kbd> + <kbd>J</kbd> / <kbd>Shift</kbd> + <kbd>CTRL</kbd> + <kbd>J</kbd></li><li><strong>Firefox:</strong> <kbd>Option</kbd> + <kbd>⌘</kbd> + <kbd>K</kbd> / <kbd>Shift</kbd> + <kbd>CTRL</kbd> + <kbd>K</kbd></li><li><strong>Safari:</strong> <kbd>Option</kbd> + <kbd>⌘</kbd> + <kbd>C</kbd> / <kbd>Shift</kbd> + <kbd>CTRL</kbd> + <kbd>C</kbd></li></ul>\n\n\n\n<p>Next, type <code>document.designMode=\"on\"</code> into the console, hit <strong><kbd>Return</kbd></strong>, and then click on any text element. You’ll see that this text element (and all other text elements) are now editable simply by clicking on them. This method of editing text on a live website is <em>much</em> faster than having to open DevTools, then right-clicking and selecting the “Edit Text” option… and <em>much</em> less tiresome.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2880\" height=\"1800\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=2880%2C1800&#038;ssl=1\" alt=\"Showing an edited version of the CSS-Tricks guide landing page using the design mode bookmarklet.\" class=\"wp-image-364119\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?w=2880&amp;ssl=1 2880w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=300%2C188&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=1024%2C640&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=768%2C480&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=1536%2C960&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=2048%2C1280&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463898776_1.png?resize=1000%2C625&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>“Guides and Thangs” — my favorite part of CSS-Tricks</figcaption></figure>\n\n\n\n<p>While I’m not sure that “design mode” is the most accurate description of the feature, it’s super useful nonetheless and it’s actually been around for a really long time, surprisingly.</p>\n\n\n\n<p>And what’s even an even faster way to enable it? A bookmarklet, of course! Create a bookmark using <code>javascript: document.designMode=\"on\";void 0;</code> as the URL.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2880\" height=\"1800\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=2880%2C1800&#038;ssl=1\" alt=\"Showing the bookmarklet installation.\" class=\"wp-image-364120\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?w=2880&amp;ssl=1 2880w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=300%2C188&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=1024%2C640&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=768%2C480&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=1536%2C960&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=2048%2C1280&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463919258_2.png?resize=1000%2C625&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n<h3 id=\"applying-a-background-to-everything\">Applying a background to everything</h3>\n\n\n<p>When HTML elements don’t have backgrounds, it can be difficult to visualize their bounds and/or accurately measure the distance between them and other elements. Developers might want to better visualize bounds when dealing with <a href=\"https://medium.muz.li/optical-effects-9fca82b4cd9a\" rel=\"noopener\">optical imbalance</a> (i.e. when something “looks off” even though it’s not), <a href=\"https://css-tricks.com/what-you-should-know-about-collapsing-margins/\">margin collapse</a> (when certain margins are ignored), various issues with <code>display:</code>/<code>float:</code>/<code>position:</code>, and more.</p>\n\n\n\n<p>Applying backgrounds means applying a semi-transparent background to all HTML elements in order to better visualize their bounds and spacings. It’s something many of us commonly do by opening up DevTools then typing a CSS declaration like <code>selector { background: rgb(0 0 0 / 10%); }</code> into the “Styles” box. But again, it’s <em>really</em> tiresome and repetitive — and something we can simplify with a bookmarklet.</p>\n\n\n\n<p>Once again, to create a bookmark, we’re going to make a URL. Here’s what we can use for this one:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">javascript: document.querySelectorAll(\"*\").forEach(element => element.style.background=\"rgb(0 0 0 / 10%)\");</code></pre>\n\n\n\n<p class=\"is-style-explanation\">We’re using a semi-transparent background because the transparency stacks, which ensures that every nested element is distinguishable and the distances between them can be measured.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2880\" height=\"1800\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=2880%2C1800&#038;ssl=1\" alt=\"Showing the CSS-Tricks guides landing page with all backgrounds fill with varying shades of gray.\" class=\"wp-image-364121\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?w=2880&amp;ssl=1 2880w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=300%2C188&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=1024%2C640&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=768%2C480&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=1536%2C960&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=2048%2C1280&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/s_AD0F2C835CD10D108AFDFB2358D3DFA61BF124F97B3700E8E7CBFF36E9EAA31B_1644463956113_3.png?resize=1000%2C625&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Apply a background to everything to see what’s happening.</figcaption></figure>\n\n\n<h3 id=\"simulating-events\">Simulating events</h3>\n\n\n<p>Have you ever had to test a web event that first requires a series of interactions, or certain conditions to be met? It’s super time-consuming to have to test or debug these kinds of functionalities. This event simulation bookmarklet can be used to instantly trigger specific events, making testing a breeze.</p>\n\n\n\n<p>Simulating an event means coding a “throwaway” button that triggers a JavaScript event, making it much easier to quickly and repeatedly test the event without having to meet any usual user-facing conditions, like needing to be logged in.</p>\n\n\n\n<p>Assuming that you have your <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\" rel=\"noopener\">JavaScript event listeners</a> set up, create a bookmark for each event that you’d like to trigger/simulate and submit the following URL:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">javascript: document.querySelector(\"SELECTOR\").click();</code></pre>\n\n\n\n<p>Replace “SELECTOR” with your unique selector, replace “click” with “focus” or “blur” (when necessary), or extend the snippet to make it trigger more complex events, like <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll\" rel=\"noopener\">scroll</a>.</p>\n\n\n<h3 id=\"setting-cookies\">Setting cookies</h3>\n\n\n<p>Cookies are tokens that are stored on a website visitor’s computer by the website that they’re visiting. Cookies contain data that can be read by the website that created them until they’ve exceeded their expiration date or have been deleted. The mere existence of a cookie can determine whether or not a visitor is logged in, whereas the data itself can store user information.</p>\n\n\n\n<p>An example of a scenario where you might want to set a cookie using a bookmarklet is when you want to force a logged-in state during website testing. Websites often look very different for users that are logged in, however, logging in and out eventually becomes very tedious, so this bookmarklet can save quite a bit of time.</p>\n\n\n\n<p>Manually writing <code>expires=</code> dates for cookies is awkward as heck, but luckily this <a href=\"https://cookie-bookmarklet-generator.com\" rel=\"noopener\">create-your-own-set-cookie-bookmarklet app</a> can generate a bookmarklet for a specific cookie, if you know its exact name.</p>\n\n\n<h3 id=\"toggling-classes\">Toggling classes</h3>\n\n\n<p>You may want to add or remove a class from an HTML element in order to trigger a fresh state or a change in appearance, otherwise known as toggling classes. Class toggling happens behind the scenes of most live websites, but it can also be used during testing to skip having to meet certain user-facing conditions.</p>\n\n\n\n<p>Class toggling can be used to trigger changes in appearance (e.g. alternative themes or states) and even animations, but it can be a little fiddly when doing it with developer tools when it’s only for testing reasons (i.e. the website doesn’t actually function that way for users). Similar to the other bookmarklets, use this one to rapidly toggle classes and save yourself time.</p>\n\n\n\n<p>Create the following bookmarklet to target all elements that match your chosen “SELECTOR”, which, in turn, toggles the “CLASS.”</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">javascript: document.querySelectorAll(\"SELECTOR\").forEach(element => element.classList.toggle(\"CLASS\"));</code></pre>\n\n\n<h3 id=\"color-widget-bookmark\">Color widget bookmark</h3>\n\n\n<p>While not technically a “bookmarklet,” this <a href=\"https://twitter.com/scottjehl/status/1428465011475746820\" rel=\"noopener\">bookmarkable data URI</a> by Scott Jehl opens up an <code>&lt;input type=\"color\"&gt;</code> in a new tab:</p>\n\n\n\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">So hey here&#8217;s my new color picker app! <br>It&#8217;s um, just an HTML color input wrapped in a data URI so I can bookmark it. (Feel free to do so yourself):<br><br>data:text/html;charset=utf-8,%3Chtml%3E%3Ctitle%3EColor Picker%3C%2Ftitle%3E%3Cinput type%3D&#8221;color&#8221;%3E%3C%2Fhtml%3E <a href=\"https://t.co/0QyFqAsUSq\">pic.twitter.com/0QyFqAsUSq</a></p>— Scott Jehl (@scottjehl) <a href=\"https://twitter.com/scottjehl/status/1428465011475746820?ref_src=twsrc%5Etfw\" rel=\"noopener\">August 19, 2021</a></blockquote> <script async=\"\" src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">data:text/html;charset=utf-8,%3Chtml%3E%3Ctitle%3EColor Picker%3C%2Ftitle%3E%3Cinput type%3D\"color\"%3E%3C%2Fhtml%3E</code></pre>\n\n\n\n<p>Why is that cool? Well, how many times have you needed to grab a color value off a page, only to find yourself cracking open DevTools, clicking through a bunch of elements, and pouring over CSS properties to find the value? Better to run this little guy, click the element, and get a color right away!</p>\n\n\n<h3 id=\"what-other-bookmarklets-can-you-think-of\">What other bookmarklets can you think of?</h3>\n\n\n<p>Are there any overly repetitive web development workflows that require you to use the web browser’s sometimes-awkward developer tools? If so, it’s <strong>super easy</strong> to create your own time-saving bookmarklets. Just remember to start the URL with <code>javascript:</code>!</p>\n\n\n\n<p>And if you’ve made a bookmarklet to simplify your workflow, I’d love to see it! Share them here in the comments and let’s get a nice collection going.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/web-development-bookmarklets/\">6 Useful Bookmarklets to Boost Web Development</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/web-development-bookmarklets/feed/"
        ],
        "slash:comments": [
            "30"
        ],
        "post-id": [
            {
                "_": "364118",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "A bookmarklet is a JavaScript-based bookmark that adds to a web browser. I’d\nlike to show you some awesome web browser hacks to aid your web development\nworkflow and how to convert those hacks into ti...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "How to Create an Impressive GitHub Profile README"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/github-profile-readme/?utm_source=rss\"\n              title=\"How to Create an Impressive GitHub Profile README\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme.jpg\"\n        alt=\"How to Create an Impressive GitHub Profile\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Did you know you can create a stunning GitHub profile README page? Learn how to add images, social and blog links, GitHub stats, and more.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/github-profile-readme/?utm_source=rss\">How to Create an Impressive GitHub Profile README</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/github-profile-readme/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256440",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Career Advancement",
            "Computing",
            "Developer Tools",
            "Entrepreneur"
        ],
        "dc:creator": [
            "Nida Khan"
        ],
        "pubDate": [
            "Wed, 26 Jan 2022 11:00:00 GMT"
        ],
        "plainDescription": "How to Create an Impressive GitHub Profile\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643073859github-readme.jpg]\n[https://www.sitepoint.com/github-profile-readme/?utm_source=rss] Did ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How To Create Professional Websites Effortlessly with Jimdo"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss\"\n              title=\"How To Create Professional Websites Effortlessly with Jimdo\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder.jpg\"\n        alt=\"How To Create Professional Websites Effortlessly with Jimdo\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to use Jimdo's AI-powered Dophin builder to create a professional ecommerce website without touching a line of code.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss\">How To Create Professional Websites Effortlessly with Jimdo</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/jimdo-create-professional-websites/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206179",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Low Code",
            "Web"
        ],
        "dc:creator": [
            "Monique Danao"
        ],
        "pubDate": [
            "Thu, 23 Sep 2021 02:00:13 GMT"
        ],
        "plainDescription": "How To Create Professional Websites Effortlessly with Jimdo\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632184748jimdo-ai-webbuilder.jpg]\n[https://www.sitepoint.com/jimdo-create-profess...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Surfer SEO vs Outranking: Which SEO Tool Is Best for You?"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss\"\n              title=\"Surfer SEO vs Outranking: Which SEO Tool Is Best for You?\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank.jpg\"\n        alt=\"Surfer SEO vs Outranking: Which SEO Tool Is Best for You?\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Surfer SEO vs Outranking: learn how these two AI tools boost your content creation process and efforts to rank higher on search engines.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss\">Surfer SEO vs Outranking: Which SEO Tool Is Best for You?</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/surfer-seo-vs-outranking/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=220540",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Entrepreneur",
            "Low Code",
            "Marketing",
            "SEO & SEM",
            "Web"
        ],
        "dc:creator": [
            "Christian Coulson"
        ],
        "pubDate": [
            "Wed, 24 Nov 2021 02:00:17 GMT"
        ],
        "plainDescription": "Surfer SEO vs Outranking: Which SEO Tool Is Best for You?\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1637715336surfer-seo-vs-outrank.jpg]\n[https://www.sitepoint.com/surfer-seo-vs-outran...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Learn Anything: A Beginner’s Guide to Ultralearning"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-learn-anything/?utm_source=rss\"\n              title=\"How to Learn Anything: A Beginner’s Guide to Ultralearning\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to learn anything using the Ultralearning method, and set yourself up for success with our Ultralearning Template for Notion.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-learn-anything/?utm_source=rss\">How to Learn Anything: A Beginner’s Guide to Ultralearning</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-learn-anything/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258789",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Career Advancement",
            "Computing",
            "Entrepreneur",
            "Productivity",
            "Productivity Tools"
        ],
        "dc:creator": [
            "Matthias Frank"
        ],
        "pubDate": [
            "Thu, 10 Mar 2022 18:51:37 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646966450ultralearning.jpg]\n[https://www.sitepoint.com/how-to-learn-anything/?utm_source=rss] Learn how to\nlearn anything using the Ultralear...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Arrow Functions in JavaScript: How to Use Fat & Concise Syntax"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/arrow-functions-javascript/?utm_source=rss\"\n              title=\"Arrow Functions in JavaScript: How to Use Fat & Concise Syntax\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction.jpg\"\n        alt=\"Arrow functions in JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to use JavaScript arrow functions, understand fat and concise arrow syntax, and what to be aware of when using them in your code.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/arrow-functions-javascript/?utm_source=rss\">Arrow Functions in JavaScript: How to Use Fat & Concise Syntax</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/arrow-functions-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=258749",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Vanilla JavaScript"
        ],
        "dc:creator": [
            "Maria Antonietta Perna"
        ],
        "pubDate": [
            "Wed, 09 Mar 2022 09:01:00 GMT"
        ],
        "plainDescription": "Arrow functions in JavaScript\n[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1646875624arrowfunction.jpg]\n[https://www.sitepoint.com/arrow-functions-javascript/?utm_source=rss] Learn how\nto...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The 5 Best Design Handoff Tools in 2022"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss\"\n              title=\"The 5 Best Design Handoff Tools in 2022\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff.jpg\"\n        alt=\"The 5 Best Design Handoff Tools\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Handing off designs to developers has a troubled history. Learn about 5 excellent apps that have revolutionized the design handoff process.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss\">The 5 Best Design Handoff Tools in 2022</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "https://www.sitepoint.com/?p=172412",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX",
            "Illustration"
        ],
        "dc:creator": [
            "Daniel Schwarz"
        ],
        "pubDate": [
            "Thu, 18 Nov 2021 02:00:24 GMT"
        ],
        "plainDescription": "The 5 Best Design Handoff Tools\n[https://uploads.sitepoint.com/wp-content/uploads/2019/07/1637034391design-handoff.jpg]\n[https://www.sitepoint.com/best-design-handoff-tools/?utm_source=rss] Handing\nof...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "High order functions in Javascript"
        ],
        "dc:creator": [
            "hacker4world"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:03:35 +0000"
        ],
        "link": [
            "https://dev.to/hacker4world/high-order-functions-in-javascript-1nf2"
        ],
        "guid": [
            "https://dev.to/hacker4world/high-order-functions-in-javascript-1nf2"
        ],
        "description": [
            "<p>High order functions are functions that take another function as a paramater or return another function.<br>\nYou see in javascript functions can be treated as variables as well so it makes it possible to return them or pass them as params.</p>\n<h2>\n  \n  \n  Implementing a high order function\n</h2>\n\n<p>Let's implement a simple high order function that takes another function and call it inside it's body<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">doSomething</span><span class=\"p\">(</span><span class=\"nx\">action</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">action</span><span class=\"p\">();</span> <span class=\"c1\">// Hi</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">actionFunction</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Hi</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">doSomething</span><span class=\"p\">(</span><span class=\"nx\">actionFunction</span><span class=\"p\">);</span>\n</code></pre>\n\n</div>\n\n\n\n<p>we called the doSomething function and gave it the function actionFunction as param and it simply called it inside it's body and that's perfectly fine in javascript</p>\n\n<p>let's create anothet high order function but now we will instead return a function from it<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">function</span> <span class=\"nx\">getAction</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"dl\">\"</span><span class=\"s2\">Hi</span><span class=\"dl\">\"</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">action</span> <span class=\"o\">=</span> <span class=\"nx\">getAction</span><span class=\"p\">();</span>\n\n<span class=\"nx\">action</span><span class=\"p\">();</span> <span class=\"c1\">// hi</span>\n</code></pre>\n\n</div>\n\n\n\n<p>we stored the function returned by getAction then called it afterwards to log hi to the console</p>\n\n<h2>\n  \n  \n  Existing high order functions in Javascript\n</h2>\n\n<p>javascript has a lot of high order functions built in the language, now let's see some of them that are array methods</p>\n\n<h3>\n  \n  \n  the forEach method\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">let</span> <span class=\"nx\">arr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">];</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">);</span> <span class=\"c1\">// 1, 2, 3, 4, 5</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">forEach</span><span class=\"p\">(</span><span class=\"nx\">log</span><span class=\"p\">);</span>\n</code></pre>\n\n</div>\n\n\n\n<p>the forEach function loops through the array and each time it calls the passed function and give it the element currently iterating on</p>\n\n<h3>\n  \n  \n  the map function\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">let</span> <span class=\"nx\">arr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">];</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">double</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">x</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">newArr</span> <span class=\"o\">=</span> <span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">map</span><span class=\"p\">(</span><span class=\"nx\">double</span><span class=\"p\">);</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">newArr</span><span class=\"p\">);</span> <span class=\"c1\">// [ 2, 4, 6, 8, 10 ]</span>\n</code></pre>\n\n</div>\n\n\n\n<p>the map method replaces the value that is currently iterating on with the value that the passed function returns and then returns the new array</p>\n\n<h3>\n  \n  \n  the filter method\n</h3>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight javascript\"><code><span class=\"kd\">let</span> <span class=\"nx\">arr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">];</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">isPair</span><span class=\"p\">(</span><span class=\"nx\">x</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">x</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">pairs</span> <span class=\"o\">=</span> <span class=\"nx\">arr</span><span class=\"p\">.</span><span class=\"nx\">filter</span><span class=\"p\">(</span><span class=\"nx\">isPair</span><span class=\"p\">);</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">pairs</span><span class=\"p\">);</span> <span class=\"c1\">// [ 2, 4 ]</span>\n</code></pre>\n\n</div>\n\n\n\n<p>the filter method will only keep array elements that are passed to the function and returns true</p>\n\n"
        ],
        "category": [
            "javascript",
            "tutorial",
            "webdev",
            "programming"
        ],
        "plainDescription": "High order functions are functions that take another function as a paramater or\nreturn another function.\nYou see in javascript functions can be treated as variables as well so it makes\nit possible to ...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "12 Essential Atom Packages for Web Development"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/essential-atom-packages-web-development/?utm_source=rss\"\n              title=\"12 Essential Atom Packages for Web Development\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages.jpg\"\n        alt=\"12 Essential Atom Packages for Web Development\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Atom has a wealth of packages that keep it up there with the best code editors. Learn about 12 of the best Atom packages for web developers.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/essential-atom-packages-web-development/?utm_source=rss\">12 Essential Atom Packages for Web Development</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/essential-atom-packages-web-development/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207294",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Thu, 14 Oct 2021 02:00:08 GMT"
        ],
        "plainDescription": "12 Essential Atom Packages for Web Development\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634091301atom-packages.jpg]\n[https://www.sitepoint.com/essential-atom-packages-web-development...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Manuel Matuzović"
        ],
        "title": [
            "How To Build A Progressively Enhanced, Accessible, Filterable And Paginated List"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/accessible-filterable-paginated-list-11ty-alpinejs/"
        ],
        "pubDate": [
            "Mon, 04 Apr 2022 10:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/accessible-filterable-paginated-list-11ty-alpinejs/"
        ],
        "description": [
            "Ever wondered how to build a paginated list that works with and without JavaScript? In this article, Manuel explains how you can leverage the power of Progressive Enhancement and do just that with Eleventy and Alpine.js."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/accessible-filterable-paginated-list-11ty-alpinejs/\" />\n              <title>How To Build A Progressively Enhanced, Accessible, Filterable And Paginated List</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How To Build A Progressively Enhanced, Accessible, Filterable And Paginated List</h1>\n                  \n                    \n                    <address>Manuel Matuzović</address>\n                  \n                  <time datetime=\"2022-04-04T10:00:00&#43;00:00\" class=\"op-published\">2022-04-04T10:00:00+00:00</time>\n                  <time datetime=\"2022-04-04T10:00:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>Most sites I build are static sites with HTML files generated by a static site generator or pages served on a server by a CMS like <a href=\"https://wordpress.com/\">Wordpress</a> or <a href=\"https://craftcms.com/\">CraftCMS</a>. I use JavaScript only on top to enhance the user experience. I use it for things like disclosure widgets, accordions, fly-out navigations, or modals.</p>\n\n<p>The requirements for most of these features are simple, so using a library or framework would be overkill. Recently, however, I found myself in a situation where writing a component from scratch in Vanilla JS without the help of a framework would’ve been too complicated and messy.</p>\n\n<h2 id=\"lightweight-frameworks\">Lightweight Frameworks</h2>\n\n<p>My task was to add multiple filters, sorting and pagination to an existing list of items. I didn’t want to use a JavaScript Framework like Vue or React, only because I needed help in some places on my site, and I didn’t want to change my stack. <a href=\"https://twitter.com/mmatuzo/status/1483739260092100609\">I consulted Twitter</a>, and people suggested minimal frameworks like <a href=\"https://lit.dev/\">lit</a>, <a href=\"https://github.com/vuejs/petite-vue\">petite-vue</a>, <a href=\"https://hyperscript.org/\">hyperscript</a>, <a href=\"https://htmx.org/\">htmx</a> or <a href=\"https://alpinejs.dev/\">Alpine.js</a>. I went with Alpine because it sounded like it was exactly what I was looking for:</p>\n\n<blockquote>“Alpine is a rugged, minimal tool for composing behavior directly in your markup. Think of it like jQuery for the modern web. Plop in a script tag and get going.”</blockquote>\n\n<h2 id=\"alpine-js\">Alpine.js</h2>\n\n<p>Alpine is a lightweight (&#126;7KB) collection of 15 attributes, 6 properties, and 2 methods. I won’t go into the basics of it (check out this <a href=\"https://css-tricks.com/alpine-js-the-javascript-framework-thats-used-like-jquery-written-like-vue-and-inspired-by-tailwindcss/\">article about Alpine</a> by <a href=\"https://codewithhugo.com/\">Hugo Di Francesco</a> or read the <a href=\"https://alpinejs.dev/start-here\">Alpine docs</a>), but let me quickly introduce you to Alpine:</p>\n\n<p><strong>Note:</strong> <em>You can skip this intro and go straight to the <a href=\"#static-paginated-list\">main content of the article</a> if you’re already familiar with Alpine.js.</em></p>\n\n<p>Let’s say we want to turn a simple list with many items into a <a href=\"https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\">disclosure widget</a>. You could use the native HTML elements: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details\">details and summary</a> for that, but for this exercise, I’ll use Alpine.</p>\n\n<p>By default, with JavaScript disabled, we show the list, but we want to hide it and allow users to open and close it by pressing a button if JavaScript is enabled:</p>\n\n<pre><code class=\"language-html\">&lt;h2&gt;Beastie Boys Anthology&lt;/h2&gt;\n&lt;p&gt;The Sounds of Science is the first anthology album by American rap rock group Beastie Boys composed of greatest hits, B-sides, and previously unreleased tracks.&lt;/p&gt;\n&lt;ol&gt;\n  &lt;li&gt;Beastie Boys&lt;/li&gt;\n  &lt;li&gt;Slow And Low&lt;/li&gt;\n  &lt;li&gt;Shake Your Rump&lt;/li&gt;\n  &lt;li&gt;Gratitude&lt;/li&gt;\n  &lt;li&gt;Skills To Pay The Bills&lt;/li&gt;\n  &lt;li&gt;Root Down&lt;/li&gt;\n  &lt;li&gt;Believe Me&lt;/li&gt;\n  …\n&lt;/ol&gt;</code></pre>\n\n<p>First, we include Alpine using a <code>script</code> tag. Then we wrap the list in a <code>div</code> and use the <code>x-data</code> directive to pass data into the component. The <code>open</code> property inside the object we passed is available to all children of the <code>div</code>:</p>\n\n<pre><code class=\"language-html\">&lt;div x-data=\"{ open: false }\"&gt;\n  &lt;ol&gt;\n    &lt;li&gt;Beastie Boys&lt;/li&gt;\n    &lt;li&gt;Slow And Low&lt;/li&gt;\n    …\n  &lt;/ol&gt;\n&lt;/div&gt;\n\n&lt;script src=\"https://unpkg.com/alpinejs@3.9.1/dist/cdn.min.js\" integrity=\"sha384-mDHH3kdyMS0F6QcfHCxEgPMMjssTurzucc7Jct3g1GOfB4p7PxJuugPP1NOLvE7I\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;</code></pre>\n\n<p>We can use the <code>open</code> property for the <code>x-show</code> directive, which determines whether or not an element is visible:</p>\n\n<pre><code class=\"language-html\">&lt;div x-data=\"{ open: false }\"&gt;\n  &lt;ol x-show=\"open\"&gt;\n    &lt;li&gt;Beastie Boys&lt;/li&gt;\n    &lt;li&gt;Slow And Low&lt;/li&gt;\n    …\n  &lt;/ol&gt;\n&lt;/div&gt;</code></pre>\n\n<p>Since we set <code>open</code> to <code>false</code>, the list is hidden now.</p>\n\n<p>Next, we need a button that toggles the value of the <code>open</code> property. We can add events by using the <code>x-on:click</code> directive or the shorter @-Syntax <code>@click</code>:</p>\n\n<pre><code class=\"language-html\">&lt;div x-data=\"{ open: false }\"&gt;\n  &lt;button @click=\"open = !open\"&gt;Tracklist&lt;/button&gt;\n  \n  &lt;ol x-show=\"open\"&gt;\n    &lt;li&gt;Beastie Boys&lt;/li&gt;\n    &lt;li&gt;Slow And Low&lt;/li&gt;\n    …\n  &lt;/ol&gt;\n&lt;/div&gt;</code></pre>\n\n<p>Pressing the button, <code>open</code> now switches between <code>false</code> and <code>true</code> and <code>x-show</code> reactively watches these changes, showing and hiding the list accordingly.</p>\n\n<p>While this works for keyboard and mouse users, it’s useless to screen reader users, as we need to communicate the state of our widget. We can do that by toggling the value of the <code>aria-expanded</code> attribute:</p>\n\n<pre><code class=\"language-html\">&lt;button @click=\"open = !open\" :aria-expanded=\"open\"&gt;\n  Tracklist\n&lt;/button&gt;</code></pre>\n\n<p>We can also create a semantic connection between the button and the list using <code>aria-controls</code> for <a href=\"https://a11ysupport.io/tech/aria/aria-controls_attribute\">screen readers that support the attribute</a>:</p>\n\n<pre><code class=\"language-html\">&lt;button @click=\"open = ! open\" :aria-expanded=\"open\" aria-controls=\"tracklist\"&gt;\n  Tracklist\n&lt;/button&gt;\n&lt;ol x-show=\"open\" id=\"tracklist\"&gt;\n  …\n&lt;/ol&gt;</code></pre>\n\n<p>Here’s the final result:</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"xxpdzNz\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Simple disclosure widget with Alpine.js](https://codepen.io/smashingmag/pen/xxpdzNz) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/xxpdzNz\">Simple disclosure widget with Alpine.js</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p>Pretty neat! You can enhance existing static content with JavaScript without having to write a single line of JS. Of course, you may need to write some JavaScript, especially if you’re working on more complex components.</p>\n\n<h3 id=\"static-paginated-list\">A Static, Paginated List</h3>\n\n<p>Okay, now that we know the basics of Alpine.js, I’d say it’s time to build a more complex component.</p>\n\n<blockquote><strong>Note</strong>: You can <a href=\"https://sad-kare-e07051.netlify.app/index_js/\">take a look at the final result</a> before we get started.</blockquote>\n\n<p>I want to build a paginated list of my vinyl records that works without JavaScript. We’ll use the static site generator <a href=\"https://www.11ty.dev\">eleventy (or short “11ty”)</a> for that and Alpine.js to enhance it by making the list filterable.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"600\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A picture with vinyls standing in a row\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Anyone else here also a fan of vinyl records? ;-) (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/d87b905e-1190-4a40-80d1-4947c3185aa7/1-accessible-filterable-paginated-list-11ty-alpinejs.jpg'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"setup\">Setup</h3>\n\n<p>Before we get started, let’s set up our site. We need:</p>\n\n<ul>\n<li>a project folder for our site,</li>\n<li>11ty to generate HTML files,</li>\n<li>an input file for our HTML,</li>\n<li>a data file that contains the list of records.</li>\n</ul>\n\n<p>On your command line, navigate to the folder where you want to save the project, create a folder, and <code>cd</code> into it:</p>\n\n<pre><code class=\"language-bash\">cd Sites # or wherever you want to save the project\nmkdir myrecordcollection # pick any name\ncd myrecordcollection</code></pre>\n\n<p>Then create a <code>package.json</code> file and <a href=\"https://www.11ty.dev/docs/getting-started/\">install eleventy</a>:</p>\n\n<pre><code class=\"language-bash\">npm init -y\nnpm install @11ty/eleventy</code></pre>\n\n<p>Next, create an <code>index.njk</code> file (<code>.njk</code> means this is a Nunjucks file; more about that below) and a folder <code>_data</code> with a <code>records.json</code>:</p>\n\n<pre><code class=\"language-bash\">touch index.njk\nmkdir _data\ntouch _data/records.json</code></pre>\n\n<p>You don’t have to do all these steps on the command line. You can also create folders and files in any user interface. The final file and folder structure looks like this:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"361\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot of the final file and the folder structure\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/8e3c1fe3-0614-4b3f-9c1e-90d7f12dc607/5-accessible-filterable-paginated-list-11ty-alpinejs.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"adding-content\">Adding Content</h3>\n\n<p>11ty allows you to write content directly into an HTML file (or Markdown, Nunjucks, and <a href=\"https://www.11ty.dev/docs/languages/\">other template languages</a>). You can even store data in the <a href=\"https://www.11ty.dev/docs/data-frontmatter/\">front matter</a> or in a JSON file. I don’t want to manage hundreds of entries manually, so I’ll store them in the JSON file we just created. Let’s add some data to the file:</p>\n\n<pre><code class=\"language-javascript\">[\n  {\n    \"artist\": \"Akne Kid Joe\",\n    \"title\": \"Die große Palmöllüge\",\n    \"year\": 2020\n  },\n  {\n    \"artist\": \"Bring me the Horizon\",\n    \"title\": \"Post Human: Survial Horror\",\n    \"year\": 2020\n  },\n  {\n    \"artist\": \"Idles\",\n    \"title\": \"Joy as an Act of Resistance\",\n    \"year\": 2018\n  },\n  {\n    \"artist\": \"Beastie Boys\",\n    \"title\": \"Licensed to Ill\",\n    \"year\": 1986\n  },\n  {\n    \"artist\": \"Beastie Boys\",\n    \"title\": \"Paul's Boutique\",\n    \"year\": 1989\n  },\n  {\n    \"artist\": \"Beastie Boys\",\n    \"title\": \"Check Your Head\",\n    \"year\": 1992\n  },\n  {\n    \"artist\": \"Beastie Boys\",\n    \"title\": \"Ill Communication\",\n    \"year\": 1994\n  }\n]</code></pre>\n\n<p>Finally, let’s add a basic HTML structure to the <code>index.njk</code> file and start eleventy:</p>\n\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    \n  &lt;title&gt;My Record Collection&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;My Record Collection&lt;/h1&gt;\n    \n&lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p>By running the following command you should be able to access the site at <code>http://localhost:8080</code>:</p>\n\n<pre><code class=\"language-bash\">eleventy --serve</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"396\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot where the site showing the heading ‘My Record Collection\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      Eleventy running on port <code>:8080</code>. The site just shows the heading ‘My Record Collection’. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c44ab0d-330a-4228-8f5d-62908ed7b3f1/2-accessible-filterable-paginated-list-11ty-alpinejs.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"displaying-content\">Displaying Content</h3>\n\n<p>Now let’s take the data from our JSON file and turn it into HTML. We can access it by looping over the <code>records</code> object in nunjucks:</p>\n\n<pre><code class=\"language-html\">&lt;div class=\"collection\"&gt;\n  &lt;ol&gt;\n    {% for record in records %}\n    &lt;li&gt;\n      &lt;strong&gt;{{ record.title }}&lt;/strong&gt;&lt;br&gt;\n      Released in &lt;time datetime=\"{{ record.year }}\"&gt;{{ record.year }}&lt;/time&gt; by {{ record.artist }}.\n    &lt;/li&gt;\n    {% endfor %}\n  &lt;/ol&gt;\n&lt;/div&gt;</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"577\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot with 7 Records listed, each with their title, artist and release date\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      7 Records listed, each with their title, artist and release date. (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2995f1e8-2aab-4cc9-9707-b4f6a363008d/3-accessible-filterable-paginated-list-11ty-alpinejs.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"pagination\">Pagination</h3>\n\n<p>Eleventy supports pagination out of the box. All we have to do is add a frontmatter block to our page, tell 11ty which dataset it should use for pagination, and finally, we have to adapt our <code>for</code> loop to use the paginated list instead of all records:</p>\n\n<pre><code class=\"language-html\">---\npagination:\n  data: records\n  size: 5\n---\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n      \n    &lt;title&gt;My Record Collection&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;My Record Collection&lt;/h1&gt;\n  \n    &lt;div class=\"collection\"&gt;\n      &lt;p id=\"message\"&gt;Showing &lt;output&gt;{{ records.length }} records&lt;/output&gt;&lt;/p&gt;\n      \n      &lt;div aria-labelledby=\"message\" role=\"region\"&gt;\n        &lt;ol class=\"records\"&gt;\n          {% for record in pagination.items %}\n          &lt;li&gt;\n            &lt;strong&gt;{{ record.title }}&lt;/strong&gt;&lt;br&gt;\n            Released in &lt;time datetime=\"{{ record.year }}\"&gt;{{ record.year }}&lt;/time&gt; by {{ record.artist }}.\n          &lt;/li&gt;\n          {% endfor %}\n        &lt;/ol&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre>\n\n<p>If you access the page again, the list only contains 5 items. You can also see that I’ve added a status message (ignore the <code>output</code> element for now), wrapped the list in a <code>div</code> with the <code>role</code> “region”, and that I’ve labelled it by creating a reference to <code>#message</code> using <code>aria-labelledby</code>. I did that to turn it into a <a href=\"https://www.htmhell.dev/tips/landmarks/\">landmark</a> and allow screen reader users to access the list of results directly using keyboard shortcuts.</p>\n\n<p>Next, we’ll add a navigation with links to all pages created by the static site generator. The <code>pagination</code> object holds an <code>array</code> that contains all pages. We use <code>aria-current=&quot;page&quot;</code> to highlight the current page:</p>\n\n<pre><code class=\"language-html\">&lt;nav aria-label=\"Select a page\"&gt;\n  &lt;ol class=\"pages\"&gt;\n    {% for page_entry in pagination.pages %}\n      {%- set page_url = pagination.hrefs[loop.index0] -%}\n      &lt;li&gt;\n        &lt;a href=\"{{ page_url }}\"{% if page.url == page_url %} aria-current=\"page\"{% endif %}&gt;\n          Page {{ loop.index }}\n        &lt;/a&gt;\n      &lt;/li&gt;\n    {% endfor %}\n  &lt;/ol&gt;\n&lt;/nav&gt;</code></pre>\n\n<p>Finally, let’s add some basic CSS to improve the styling:</p>\n\n<pre><code class=\"language-css\">body {\n  font-family: sans-serif;\n  line-height: 1.5;\n}\n\nol {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n.records > &#42; + &#42; {\n  margin-top: 2rem;\n}\n\nh2 {\n  margin-bottom: 0;\n}\n\nnav {\n  margin-top: 1.5rem;\n}\n\n.pages {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.pages a {\n  border: 1px solid #000000;\n  padding: 0.5rem;\n  border-radius: 5px;\n  display: flex;\n  text-decoration: none;\n}\n\n.pages a:where([aria-current]) {\n  background-color: #000000;\n  color: #ffffff;\n}\n\n.pages a:where(:focus, :hover) {\n  background-color: #6c6c6c;\n  color: #ffffff;\n}</code></pre>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"577\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A screenshot with 7 Records listed, each with their title, artist and release date, with links to all pages and a highlighted current page\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/86b4494b-c550-42b3-8db3-792d24049008/4-accessible-filterable-paginated-list-11ty-alpinejs.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<p>You can see it in action in the <a href=\"https://sad-kare-e07051.netlify.app/\">live demo</a> and you can check out the <a href=\"https://github.com/matuzo/articles/tree/main/11ty-alpine\">code on GitHub</a>.</p>\n\n<p>This works fairly well with 7 records. It might even work with 10, 20, or 50, but I have over 400 records. We can make browsing the list easier by adding filters.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/typescript-in-50-lessons/\">“TypeScript in 50 Lessons”</a></strong>, our shiny new guide to TypeScript. With detailed <strong>code walkthroughs</strong>, hands-on examples and common gotchas — all broken down into short, manageable lessons. For developers who know enough <strong>JavaScript</strong> to be dangerous.</p>\n<a data-instant href=\"/printed-books/typescript-in-50-lessons/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"/printed-books/typescript-in-50-lessons/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2732dfe9-e1ee-41c3-871a-6252aeda741c/typescript-panel.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/c2f2c6d6-4e85-449a-99f5-58bd053bc846/typescript-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"481\"\n    height=\"698\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"a-dynamic-paginated-and-filterable-list\">A Dynamic Paginated And Filterable List</h2>\n\n<p>I like JavaScript, but I also believe that the core content and functionality of a website should be accessible without it. This doesn’t mean that you can’t use JavaScript at all, it just means that you start with a basic server-rendered foundation of your component or site, and you add functionality layer by layer. This is called <a href=\"https://briefs.video/videos/is-progressive-enhancement-dead-yet/\">progressive enhancement</a>.</p>\n\n<p>Our foundation in this example is the static list created with 11ty, and now we add a layer of functionality with Alpine.</p>\n\n<p>First, right before the closing <code>body</code> tag, we reference the latest version (as of writing 3.9.1) of Alpine.js:</p>\n\n<pre><code class=\"language-html\"> &lt;script src=\"https://unpkg.com/alpinejs@3.9.1/dist/cdn.min.js\" integrity=\"sha384-mDHH3kdyMS0F6QcfHCxEgPMMjssTurzucc7Jct3g1GOfB4p7PxJuugPP1NOLvE7I\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\n&lt;/body&gt;</code></pre>\n\n<p><strong>Note:</strong> <em>Be careful using a third-party CDN, this can have all kinds of negative implications (performance, privacy, security). Consider referencing the file locally or <a href=\"https://alpinejs.dev/essentials/installation#as-a-module\">importing it as a module</a>.<br />\nIn case you’re wondering why you don’t see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity\">Subresource Integrity</a> hash in the official docs, it’s because I’ve created and added it manually.</em></p>\n\n<p>Since we’re moving into JavaScript-world, we need to make our records available to Alpine.js. Probably not the best, but the quickest solution is to create a <code>.eleventy.js</code> file in your root folder and add the following lines:</p>\n\n<pre><code class=\"language-css\">module.exports = function(eleventyConfig) {\n    eleventyConfig.addPassthroughCopy(\"_data\");\n};</code></pre>\n\n<p>This ensures that eleventy doesn’t just generate HTML files, but it also copies the contents of the <code>_data</code> folder into our destination folder, making it accessible to our scripts.</p>\n\n<h3 id=\"fetching-data\">Fetching Data</h3>\n\n<p>Just like in the previous example, we’ll add the <code>x-data</code> directive to our component to pass data:</p>\n\n<pre><code class=\"language-html\">&lt;div class=\"collection\" x-data=\"{ records: [] }\"&gt;\n&lt;/div&gt;</code></pre>\n\n<p>We don’t have any data, so we need to fetch it as the component initialises. The <code>x-init</code> directive allows us to hook into the initialisation phase of any element and perform tasks:</p>\n\n<pre><code class=\"language-html\">&lt;div class=\"collection\" x-init=\"records = await (await fetch('/_data/records.json')).json()\" x-data=\"{ records: [] }\"&gt;\n  &lt;div x-text=\"records\"&gt;&lt;/div&gt;\n  […]\n&lt;/div&gt;</code></pre>\n\n<p>If we output the results directly, we see a list of <code>[object Object]</code>s, because we’re fetching and receiving an <code>array</code>. Instead, we should iterate over the list using the <code>x-for</code> directive on a <code>template</code> tag and output the data using <code>x-text</code>:</p>\n\n<pre><code class=\"language-html\">&lt;template x-for=\"record in records\"&gt;\n  &lt;li&gt;\n    &lt;strong x-text=\"record.title\"&gt;&lt;/strong&gt;&lt;br&gt;\n    Released in &lt;time :datetime=\"record.year\" x-text=\"record.year\"&gt;&lt;/time&gt; by &lt;span x-text=\"record.artist\"&gt;&lt;/span&gt;.\n  &lt;/li&gt;\n&lt;/template&gt;</code></pre>\n\n<blockquote>The <code>&lt;template&gt;</code> HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.<br /><br /><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template\">MDN: <code>&lt;template&gt;</code>: The Content Template Element</a></blockquote>\n\n<p>Here’s how the whole list looks like now:</p>\n\n<pre><code class=\"language-html\">&lt;div class=\"collection\" x-init=\"records = await (await fetch('/_data/records.json')).json()\" x-data=\"{ records: [] }\"&gt;\n  &lt;p id=\"message\"&gt;Showing &lt;output&gt;{{ records.length }} records&lt;/output&gt;&lt;/p&gt;\n  \n  &lt;div aria-labelledby=\"message\" role=\"region\"&gt;\n    &lt;ol class=\"records\"&gt;  \n      &lt;template x-for=\"record in records\"&gt;\n        &lt;li&gt;\n          &lt;strong x-text=\"record.title\"&gt;&lt;/strong&gt;&lt;br&gt;\n          Released in &lt;time :datetime=\"record.year\" x-text=\"record.year\"&gt;&lt;/time&gt; by &lt;span x-text=\"record.artist\"&gt;&lt;/span&gt;.\n        &lt;/li&gt;\n      &lt;/template&gt;\n      \n      {%- for record in pagination.items %}\n        &lt;li&gt;\n          &lt;strong&gt;{{ record.title }}&lt;/strong&gt;&lt;br&gt;\n          Released in &lt;time datetime=\"{{ record.year }}\"&gt;{{ record.year }}&lt;/time&gt; by {{ record.artist }}.\n        &lt;/li&gt;\n      {%- endfor %}\n    &lt;/ol&gt;\n  &lt;/div&gt;\n  […]\n&lt;/div&gt;</code></pre>\n\n<p>Isn’t it amazing how quickly we were able to fetch and output data? Check out the demo below to see how Alpine populates the list with results.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<p><strong>Hint:</strong> <em>You don’t see any Nunjucks code in this CodePen, because 11ty doesn’t run in the browser. I’ve just copied and pasted the rendered HTML of the first page.</em></p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"abEWRMY\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 1](https://codepen.io/smashingmag/pen/abEWRMY) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/abEWRMY\">Pagination + Filter with Alpine.js Step 1</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p>You can achieve a lot by using Alpine’s directives, but at some point relying only on attributes can get messy. That’s why I’ve decided to move the data and some of the logic into a separate Alpine component object.</p>\n\n<p>Here’s how that works: Instead of passing data directly, we now reference a component using <code>x-data</code>. The rest is pretty much identical: Define a variable to hold our data, then fetch our JSON file in the initialization phase. However, we don’t do that inside an attribute, but inside a <code>script</code> tag or file instead:</p>\n\n<pre><code class=\"language-javascript\">&lt;div class=\"collection\" x-data=\"collection\"&gt;\n  […]\n&lt;/div&gt;\n\n[…]\n\n&lt;script&gt;\n  document.addEventListener('alpine:init', () =&gt; {\n    Alpine.data('collection', () =&gt; ({\n      records: [],\n      async getRecords() {\n        this.records = await (await fetch('/&#95;data/records.json')).json();\n      },\n      init() {\n        this.getRecords();\n      }\n    }))\n  })\n&lt;/script&gt;\n\n&lt;script src=\"https://unpkg.com/alpinejs@3.9.1/dist/cdn.min.js\" integrity=\"sha384-mDHH3kdyMS0F6QcfHCxEgPMMjssTurzucc7Jct3g1GOfB4p7PxJuugPP1NOLvE7I\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;</code></pre>\n\n<p>Looking at the previous CodePen, you’ve probably noticed that we now have a duplicate set of data. That’s because our static 11ty list is still there. Alpine has a directive that tells it to ignore certain DOM elements. I don’t know if this is actually necessary here, but it’s a nice way of marking these <em>unwanted</em> elements. So, we add the <code>x-ignore</code> directive on our 11ty list items, and we add a class to the <code>html</code> element when the data has loaded and then use the class and the attribute to hide those list items in CSS:</p>\n\n<pre><code class=\"language-javascript\">&lt;style&gt;\n  .alpine [x-ignore] {\n    display: none;\n  }\n&lt;/style&gt;\n\n[…]\n{%- for record in pagination.items %}\n  &lt;li x-ignore&gt;\n    &lt;strong&gt;{{ record.title }}&lt;/strong&gt;&lt;br&gt;\n    Released in &lt;time datetime=\"{{ record.year }}\"&gt;{{ record.year }}&lt;/time&gt; by {{ record.artist }}.\n  &lt;/li&gt;\n{%- endfor %}\n[…]\n&lt;script&gt;\n  document.addEventListener('alpine:init', () =&gt; {\n    Alpine.data('collection', () =&gt; ({\n      records: [],\n      async getRecords() {\n        this.records = await (await fetch('/&#95;data/records.json')).json();\n        document.documentElement.classList.add('alpine');\n      },\n      init() {\n        this.getRecords();\n      }\n    }))\n  })\n&lt;/script&gt;</code></pre>\n\n<p>11ty data is hidden, results are coming from Alpine, but the pagination is not functional at the moment:</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"eYyWQOe\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 2](https://codepen.io/smashingmag/pen/eYyWQOe) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/eYyWQOe\">Pagination + Filter with Alpine.js Step 2</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<h3 id=\"pagination-1\">Pagination</h3>\n\n<p>Before we add filters, let’s paginate our data. 11ty did us the favor of handling all the logic for us, but now we have to do it on our own. In order to split our data across multiple pages, we need the following:</p>\n\n<ul>\n<li>the number of items per page (<code>itemsPerPage</code>),</li>\n<li>the current page (<code>currentPage</code>),</li>\n<li>the total number of pages (<code>numOfPages</code>),</li>\n<li>a dynamic, paged subset of the whole data (<code>page</code>).</li>\n</ul>\n\n<pre><code class=\"language-javascript\">document.addEventListener('alpine:init', () =&gt; {\n  Alpine.data('collection', () =&gt; ({\n    records: [],\n    itemsPerPage: 5,\n    currentPage: 0,\n    numOfPages: // total number of pages,\n    page: // paged items\n    async getRecords() {\n      this.records = await (await fetch('/_data/records.json')).json();\n      document.documentElement.classList.add('alpine');\n    },\n    init() {\n      this.getRecords();\n     }\n  }))\n})</code></pre>\n\n<p>The number of items per page is a fixed value <code>(5)</code>, and the current page starts with <code>0</code>. We get the number of pages by dividing the total number of items by the number of items per page:</p>\n\n<pre><code class=\"language-javascript\">numOfPages() {\n  return Math.ceil(this.records.length / this.itemsPerPage)\n  // 7 / 5 = 1.4\n  // Math.ceil(7 / 5) = 2\n},</code></pre>\n\n<p>The easiest way for me to get the items per page was to use the <code>slice()</code> method in JavaScript and take out the slice of the dataset that I need for the current page:</p>\n\n<pre><code class=\"language-javascript\">page() {\n  return this.records.slice(this.currentPage &#42; this.itemsPerPage, (this.currentPage + 1) &#42; this.itemsPerPage)\n\n  // this.currentPage &#42; this.itemsPerPage, (this.currentPage + 1) &#42; this.itemsPerPage\n  // Page 1: 0 &#42; 5, (0 + 1) &#42; 5 (=> slice(0, 5);)\n  // Page 2: 1 &#42; 5, (1 + 1) &#42; 5 (=> slice(5, 10);)\n  // Page 3: 2 &#42; 5, (2 + 1) &#42; 5 (=> slice(10, 15);)\n}</code></pre>\n\n<p>To only display the items for the current page, we have to adapt the <code>for</code> loop to iterate over <code>page</code> instead of <code>records</code>:</p>\n\n<pre><code class=\"language-html\">&lt;ol class=\"records\"&gt; \n  &lt;template x-for=\"record in page\"&gt;\n    &lt;li&gt;\n      &lt;strong x-text=\"record.title\"&gt;&lt;/strong&gt;&lt;br&gt;\n      Released in &lt;time :datetime=\"record.year\" x-text=\"record.year\"&gt;&lt;/time&gt; by &lt;span x-text=\"record.artist\"&gt;&lt;/span&gt;.\n    &lt;/li&gt;\n  &lt;/template&gt;\n&lt;/ol&gt;</code></pre>\n\n<p>We now have a page, but no links that allow us to jump from page to page. Just like earlier, we use the <code>template</code> element and the <code>x-for</code> directive to display our page links:</p>\n\n<pre><code class=\"language-html\">&lt;ol class=\"pages\"&gt;\n  &lt;template x-for=\"idx in numOfPages\"&gt;\n    &lt;li&gt;\n      &lt;a :href=\"`/${idx}`\" x-text=\"`Page ${idx}`\" :aria-current=\"idx === currentPage + 1 ? 'page' : false\" @click.prevent=\"currentPage = idx - 1\"&gt;&lt;/a&gt;\n    &lt;/li&gt;\n  &lt;/template&gt;\n  \n  {% for page_entry in pagination.pages %}\n    &lt;li x-ignore&gt;\n      […]\n    &lt;/li&gt;\n  {% endfor %}\n&lt;/ol&gt;</code></pre>\n\n<p>Since we don’t want to reload the whole page anymore, we put a <code>click</code> event on each link, prevent the default click behavior, and change the current page number on click:</p>\n\n<pre><code class=\"language-html\">&lt;a href=\"/\" @click.prevent=\"currentPage = idx - 1\"&gt;&lt;/a&gt;</code></pre>\n\n<p>Here’s what that looks like in the browser. (I’ve added more entries to the JSON file. You can <a href=\"https://raw.githubusercontent.com/matuzo/articles/main/11ty-alpine/_data/records_full.json\">download it on GitHub</a>.)</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"GRymwjg\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 3](https://codepen.io/smashingmag/pen/GRymwjg) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/GRymwjg\">Pagination + Filter with Alpine.js Step 3</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<h3 id=\"filtering\">Filtering</h3>\n\n<p>I want to be able to filter the list by artist and by decade.</p>\n\n<p>We add two select elements wrapped in a <code>fieldset</code> to our component, and we put a <code>x-model</code> directive on each of them. <code>x-model</code> allows us to bind the value of an input element to Alpine data:</p>\n\n<pre><code class=\"language-html\">&lt;fieldset class=\"filters\"&gt;\n  &lt;legend&gt;Filter by&lt;/legend&gt;\n\n  &lt;label for=\"artist\"&gt;Artist&lt;/label&gt;\n  &lt;select id=\"artist\" x-model=\"filters.artist\"&gt;\n    &lt;option value=\"\"&gt;All&lt;/option&gt;\n  &lt;/select&gt;\n\n  &lt;label for=\"decade\"&gt;Decade&lt;/label&gt;\n  &lt;select id=\"decade\" x-model=\"filters.year\"&gt;\n    &lt;option value=\"\"&gt;All&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/fieldset&gt;</code></pre>\n\n<p>Of course, we also have to create these data fields in our Alpine component:</p>\n\n<pre><code class=\"language-javascript\">document.addEventListener('alpine:init', () =&gt; {\n  Alpine.data('collection', () =&gt; ({\n      filters: {\n        year: '',\n        artist: '',\n      },\n      records: [],\n      itemsPerPage: 5,\n      currentPage: 0,\n      numOfPages() {\n        return Math.ceil(this.records.length / this.itemsPerPage)\n      },\n      page() {\n        return this.records.slice(this.currentPage &#42; this.itemsPerPage, (this.currentPage + 1) &#42; this.itemsPerPage)\n      },\n      async getRecords() {\n        this.records = await (await fetch('/_data/records.json')).json();\n        document.documentElement.classList.add('alpine');\n      },\n      init() {\n        this.getRecords();\n      }\n  }))\n})</code></pre>\n\n<p>If we change the selected value in each <code>select</code>, <code>filters.artist</code> and <code>filters.year</code> will update automatically. You can try it here with some dummy data I’ve added manually:</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"GRymwEp\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 4](https://codepen.io/smashingmag/pen/GGRymwEp) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/GGRymwEp\">Pagination + Filter with Alpine.js Step 4</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p>Now we have <code>select</code> elements, and we’ve bound the data to our component. The next step is to populate each <code>select</code> dynamically with artists and decades respectively. For that we take our <code>records</code> array and manipulate the data a bit:</p>\n\n<pre><code class=\"language-javascript\">document.addEventListener('alpine:init', () =&gt; {\n  Alpine.data('collection', () =&gt; ({\n    artists: [],\n    decades: [],\n    // […]\n    async getRecords() {\n      this.records = await (await fetch('/_data/records.json')).json();\n      this.artists = [...new Set(this.records.map(record =&gt; record.artist))].sort();\n      this.decades = [...new Set(this.records.map(record =&gt; record.year.toString().slice(0, -1)))].sort();\n      document.documentElement.classList.add('alpine');\n    },\n    // […]\n  }))\n})</code></pre>\n\n<p>This looks wild, and I’m sure that I’ll forget what’s going on here real soon, but what this code does is that it takes the array of objects and turns it into an array of strings (<code>map()</code>), it makes sure that each entry is unique (that’s what <code>[...new Set()]</code> does here) and sorts the array alphabetically (<code>sort()</code>). For the decade&rsquo;s array, I’m additionally slicing off the last digit of the year because I don’t want this filter to be too granular. Filtering by decade is good enough.</p>\n\n<p>Next, we populate the artist and decade <code>select</code> elements, again using the <code>template</code> element and the <code>x-for</code> directive:</p>\n\n<pre><code class=\"language-javascript\">&lt;label for=\"artist\"&gt;Artist&lt;/label&gt;\n&lt;select id=\"artist\" x-model=\"filters.artist\"&gt;\n  &lt;option value=\"\"&gt;All&lt;/option&gt;\n  &lt;template x-for=\"artist in artists\"&gt;\n    &lt;option x-text=\"artist\"&gt;&lt;/option&gt;\n  &lt;/template&gt;\n&lt;/select&gt;\n\n&lt;label for=\"decade\"&gt;Decade&lt;/label&gt;\n&lt;select id=\"decade\" x-model=\"filters.year\"&gt;\n  &lt;option value=\"\"&gt;All&lt;/option&gt;\n  &lt;template x-for=\"year in decades\"&gt;\n    &lt;option :value=\"year\" x-text=\"`${year}0`\"&gt;&lt;/option&gt;\n  &lt;/template&gt;\n&lt;/select&gt;</code></pre>\n\n<p>Try it yourself in <a href=\"https://codepen.io/matuzo/pen/KKZwqQe?editors=1010\">demo 5 on Codepen</a>.</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"OJzmaZb\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 5](https://codepen.io/smashingmag/pen/OJzmaZb) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/OJzmaZb\">Pagination + Filter with Alpine.js Step 5</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p>We’ve successfully populated the select elements with data from our JSON file. To finally filter the data, we go through all records, we check whether a filter is set. If that’s the case, we check that the respective field of the record corresponds to the selected value of the filter. If not, we filter this record out. We’re left with a filtered array that matches the criteria:</p>\n\n<pre><code class=\"language-javascript\">get filteredRecords() {\n  const filtered = this.records.filter((item) =&gt; {\n    for (var key in this.filters) {\n      if (this.filters[key] === '') {\n        continue\n      }\n\n      if(!String(item[key]).includes(this.filters[key])) {\n        return false\n      }\n    }\n\n    return true\n  });\n\n  return filtered\n}</code></pre>\n\n<p>For this to take effect we have to adapt our <code>numOfPages()</code> and <code>page()</code> functions to use only the filtered records:</p>\n\n<pre><code class=\"language-javascript\">numOfPages() {\n  return Math.ceil(this.filteredRecords.length / this.itemsPerPage)\n},\npage() {\n  return this.filteredRecords.slice(this.currentPage &#42; this.itemsPerPage, (this.currentPage + 1) &#42; this.itemsPerPage)\n},</code></pre>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"GRymwQZ\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 6](https://codepen.io/smashingmag/pen/GRymwQZ) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/GRymwQZ\">Pagination + Filter with Alpine.js Step 6</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p><strong>Three things left to do:</strong></p>\n\n<ol>\n<li>fix a bug;</li>\n<li>hide the form;</li>\n<li>update the status message.</li>\n</ol>\n\n<h3 id=\"bug-fix-watching-a-component-property\">Bug Fix: Watching a Component Property</h3>\n\n<p>When you open the first page, click on page 6, then select “1990” &mdash; you don’t see any results. That’s because our filter thinks that we’re still on page 6, but 1) we’re actually on page 1, and 2) there is no page 6 with “1990” active. We can fix that by resetting the <code>currentPage</code> when the user changes one of the filters. To watch changes in the <code>filter</code> object, we can use a so-called magic method:</p>\n\n<pre><code class=\"language-javascript\">init() {\n  this.getRecords();\n  this.$watch('filters', filter =&gt; this.currentPage = 0);\n}</code></pre>\n\n<p>Every time the <code>filter</code> property changes, the currentPage will be set to <code>0</code>.</p>\n\n<h3 id=\"hiding-the-form\">Hiding the Form</h3>\n\n<p>Since the filters only work with JavaScript enabled and functioning, we should hide the whole form when that’s not the case. We can use the <code>.alpine</code> class we created earlier for that:</p>\n\n<pre><code class=\"language-html\">&lt;fieldset class=\"filters\" hidden&gt;\n  […]\n&lt;/fieldset&gt;</code></pre>\n\n<pre><code class=\"language-css\">.filters {\n  display: block;\n}\n\nhtml:not(.alpine) .filters {\n  visibility: hidden;\n}</code></pre>\n\n<p>I’m using <code>visibility: hidden</code> instead of <code>hidden</code> only to avoid content shifting while Alpine is still loading.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"communicating-changes\">Communicating Changes</h3>\n\n<p>The status message at the beginning of our list still reads “Showing 7 records”, but this doesn’t change when the user changes the page or filters the list. There are two things we have to do to make the paragraph dynamic: bind data to it and communicate changes to assistive technology (a screen reader, e.g.).</p>\n\n<p>First, we bind data to the <code>output</code> element in the paragraph that changes based on the current page and filter:</p>\n\n<pre><code class=\"language-html\">&lt;p id=\"message\"&gt;Showing &lt;output x-text=\"message\"&gt;{{ records.length }} records&lt;/output&gt;&lt;/p&gt;</code></pre>\n\n<pre><code class=\"language-javascript\">Alpine.data('collection', () =&gt; ({\n  message() {\n    return `${this.filteredRecords.length} records`;\n  },\n// […]</code></pre>\n\n<p>Next, we want to communicate to screen readers that the content on the page has changed. There are at least two ways of doing that:</p>\n\n<ol>\n  <li>We could turn an element into a so-called <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\">live region</a> using the <code>aria-live</code> attribute. A live region is an element that announces its content to screen readers every time it changes.<br />\n  <pre><code class=\"language-html\">&lt;div aria-live=\"polite\"&gt;Dynamic changes will be announced&lt;/div&gt;</code></pre>\n  In our case, we don’t have to do anything, because we’re already using the <code>output</code> element (remember?) which is an implicit live region by default.<br />\n  <pre><code class=\"language-html\">&lt;p id=\"message\"&gt;Showing &lt;output x-text=\"message\"&gt;{{ records.length }} records&lt;/output&gt;&lt;/p&gt;</code></pre>\n  <blockquote>“The <code>&lt;output&gt;</code> HTML element is a container element into which a site or app can inject the results of a calculation or the outcome of a user action.”<br /><br />Source: <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\"><code>&lt;output&gt;</code>: The Output Element</a>, MDN Web Docs</blockquote></li>\n  <li>We could make the region focusable and move the focus to the region when its content changes. Since the region is labelled, its name and role will be announced when that happens.<br /><pre><code class=\"language-html\">&lt;div aria-labelledby=\"message\" role=\"region\" tabindex=\"-1\" x-ref=\"region\"&gt;</code></pre>\n  We can reference the region using the <code>x-ref</code> directive.<br />\n  <pre><code class=\"language-html\">&lt;a @click.prevent=\"currentPage = idx - 1; $nextTick(() =&gt; { $refs.region.focus(); $refs.region.scrollIntoView(); });\" :href=\"`/${idx}`\" x-text=\"`Page ${idx}`\" :aria-current=\"idx === currentPage + 1 ? 'page' : false\"></a></code></pre></li>\n</ol>\n\n<p>I’ve decided to do both:</p>\n\n<ol>\n<li>When users <em>filter</em> the page, we update the live region, but we don’t move focus.</li>\n<li>When they <em>change</em> the page, we move focus to the list.</li>\n</ol>\n\n<p>That’s it. Here’s the <a href=\"https://sad-kare-e07051.netlify.app/index_js/\">final result</a>:</p>\n\n<figure class=\"break-out\">\n\t<p data-height=\"480\"\n\tdata-theme-id=\"light\"\n\tdata-slug-hash=\"zYpwMXX\"\n\tdata-user=\"smashingmag\"\n\tdata-default-tab=\"result\"\n\tclass=\"codepen\">See the Pen [Pagination + Filter with Alpine.js Step 7](https://codepen.io/smashingmag/pen/zYpwMXX) by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</p>\n\t<figcaption>See the Pen <a href=\"https://codepen.io/smashingmag/pen/zYpwMXX\">Pagination + Filter with Alpine.js Step 7</a> by <a href=\"https://codepen.io/matuzo\">Manuel Matuzovic</a>.</figcaption>\n</figure>\n\n<p><strong>Note:</strong> <em>When you filter by artist, and the status message shows “1 records”, and you filter again by another artist, also with just one record, the content of the <code>output</code> element doesn’t change, and nothing is reported to screen readers. This can be seen as a bug or as a feature to reduce redundant announcements. You’ll have to test this with users.</em></p>\n\n<h2 id=\"what-s-next\">What’s Next?</h2>\n\n<p>What I did here might seem redundant, but if you’re like me, and you don’t have enough trust in JavaScript, it’s worth the effort. And if you look at the <a href=\"https://codepen.io/matuzo/pen/GRygvwY?editors=1100\">final CodePen</a> or the <a href=\"https://github.com/matuzo/articles/tree/main/11ty-alpine\">complete code on GitHub</a>, it actually wasn’t that much extra work. Minimal frameworks like Alpine.js make it really easy to progressively enhance static components and make them reactive.</p>\n\n<p>I’m pretty happy with the result, but there are a few more things that could be improved:</p>\n\n<ol>\n<li>The pagination could be smarter (maximum number of pages, previous and next links, and so on).</li>\n<li>Let users pick the number of items per page.</li>\n<li>Sorting would be a nice feature.</li>\n<li>Working with the history API would be great.</li>\n<li>Content shifting can be improved.</li>\n<li>The solution needs user testing and browser/screen reader testing.</li>\n</ol>\n\n<p><strong>P.S.</strong> <em>Yes, I know, Alpine produces invalid HTML with its custom <code>x-</code> attribute syntax. That hurts me as much as it hurts you, but as long as it doesn’t affect users, I can live with that. :)</em></p>\n\n<p><strong>P.S.S.</strong> <em>Special thanks to Scott, Søren, Thain, David, Saptak and Christian for their feedback.</em></p>\n\n<h3 id=\"further-resources\">Further Resources</h3>\n\n<ul>\n<li>“<a href=\"https://annualbeta.com/blog/how-to-build-a-filterable-list-of-things/\">How To Build A Filterable List Of Things</a>”, Søren Birkemeyer</li>\n<li>“<a href=\"https://www.scottohara.me/blog/2022/02/05/dynamic-results.html\">Considering Dynamic Search Results And Content</a>”, Scott O’Hara</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Ever wondered how to build a paginated list that works with and without\nJavaScript? In this article, Manuel explains how you can leverage the power of\nProgressive Enhancement and do just that with Ele...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Nuxt 3 Beta: What’s New and How to Get Started"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss\"\n              title=\"Nuxt 3 Beta: What’s New and How to Get Started\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a.jpg\"\n        alt=\"Nuxt 3 Beta: What's New and How to Get Started\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn about the most notable new features and improvements offered by Nuxt 3 beta and how you can implement them in your projects.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss\">Nuxt 3 Beta: What’s New and How to Get Started</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254739",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Ivaylo Gerchev"
        ],
        "pubDate": [
            "Thu, 16 Dec 2021 02:00:16 GMT"
        ],
        "plainDescription": "Nuxt 3 Beta: What's New and How to Get Started\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1639624183nuxt3a.jpg]\n[https://www.sitepoint.com/nuxt-3-whats-new-get-started/?utm_source=rss] ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Displaying Data from MySQL on the Web: an Introduction"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/mysql-data-web/?utm_source=rss\"\n              title=\"Displaying Data from MySQL on the Web: an Introduction\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web.jpg\"\n        alt=\"Displaying Data from MySQL on the Web: an Introduction\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to take information stored in a MySQL database and display it on a web page for all to see.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/mysql-data-web/?utm_source=rss\">Displaying Data from MySQL on the Web: an Introduction</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/mysql-data-web/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=257166",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "PHP",
            "Web"
        ],
        "dc:creator": [
            "Tom Butler"
        ],
        "pubDate": [
            "Fri, 11 Feb 2022 06:52:50 GMT"
        ],
        "plainDescription": "Displaying Data from MySQL on the Web: an Introduction\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604505mysql-web.jpg]\n[https://www.sitepoint.com/mysql-data-web/?utm_source=rss] Lea...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "7 of the Best Code Playgrounds & CodePen Alternatives"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/code-playgrounds/?utm_source=rss\"\n              title=\"7 of the Best Code Playgrounds & CodePen Alternatives\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds.jpg\"\n        alt=\"7 of the Best Code Playgrounds\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Code playgrounds make it easy to experiment, share code, and show off your skills! Learn about seven of the best front-end code playgrounds.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/code-playgrounds/?utm_source=rss\">7 of the Best Code Playgrounds & CodePen Alternatives</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/code-playgrounds/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "http://www.sitepoint.com/?p=63469",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "CSS",
            "Debugging",
            "HTML",
            "HTML & CSS",
            "JavaScript",
            "Libraries",
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Thu, 02 Sep 2021 02:00:40 GMT"
        ],
        "plainDescription": "7 of the Best Code Playgrounds\n[https://uploads.sitepoint.com/wp-content/uploads/2018/08/1630484762code-playgrounds.jpg]\n[https://www.sitepoint.com/code-playgrounds/?utm_source=rss] Code playgrounds\nm...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Sam Poder"
        ],
        "title": [
            "The What, When, Why And How Of Next.js’ New Middleware Feature"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/next-js-middleware-feature/"
        ],
        "pubDate": [
            "Fri, 01 Apr 2022 10:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/next-js-middleware-feature/"
        ],
        "description": [
            "Next.js’ recent 12.0 release included a new beta feature: middleware. For a detailed explanation, you can read all about it in Sam’s previous article, “<a href=\"https://www.smashingmagazine.com/2021/11/nextjs-wildcard-subdomains/\">Next.js Wildcard Subdomains</a>”. This article, on the other hand, dives into the overall concept of middleware and how handy it can be in building things."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/next-js-middleware-feature/\" />\n              <title>The What, When, Why And How Of Next.js’ New Middleware Feature</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>The What, When, Why And How Of Next.js’ New Middleware Feature</h1>\n                  \n                    \n                    <address>Sam Poder</address>\n                  \n                  <time datetime=\"2022-04-01T10:30:00&#43;00:00\" class=\"op-published\">2022-04-01T10:30:00+00:00</time>\n                  <time datetime=\"2022-04-01T10:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>“Middleware” isn’t a new term in computing. It is often used as a term to describe a piece of software that holds two systems together. You could call it “glue” for software, and essentially, that’s how Next.js’ middleware works.</p>\n\n<p>Next.js’ middleware allows you to create functions that execute after a user’s request is made and before the request is completed &mdash; in the middle of the two processes. This enables you to process a user’s request and then modify the response by rewriting, redirecting, modifying headers, or even streaming HTML.</p>\n\n<p>Within Next.js, middleware operates in a limited runtime described as the “Edge Runtime”. The code which ran through the runtime has access to a set of standard Web APIs, that’ll be discussed later in the article. For Vercel customers, middleware functions will be executed as <a href=\"https://vercel.com/features/edge-functions\">Vercel Edge Functions</a>.</p>\n\n<h2 id=\"what-about-api-routes\">What About API Routes?</h2>\n\n<p>As you read this article, you may be thinking about how middleware sounds awfully like Next.js’ API routes that have been around for a while. The key difference is how they are used: the more restricted runtime of middleware functions, individual requests are made to API routes, whilst Middleware functions operate in between a user’s request to a page, and that page’s being rendered.</p>\n\n<p>This also means that Middleware can be scoped to multiple pages allowing you to avoid repeating code. For example, if you need to change each page in the <code>app</code> directory based on whether a user is logged in, you could create a Middleware function within that directory to process users’ cookies to see if they&rsquo;re logged in, and then pass that information onto the page. In comparison, achieving a similar effect would require extra code within an API route.</p>\n\n<p>The primary technical difference between the two is that Next.js’ API routes were designed to be hosted on a single node server hosted in one place, whilst Middleware functions are designed to be deployed on the “edge”, which is essentially a marketing term for deploying code in multiple locations around the world. Alongside the difference in physical distance, the “edge” is commonly associated with aggressive caching and efficient cache invalidation which reduces unnecessary computation.</p>\n\n<p>The goal of this is speed. A server’s response generally arrives faster when the user is closer to the server, so when you have only one server, those speeds are only accessible to a subset of your users. However, with your code being deployed in multiple locations, more users will have access to fast responses.</p>\n\n<p>Lastly, Middleware is designed to have no cold boot time. An API route’s boot time is a significant cause of slow responses. On Vercel, Serverless Functions (which are used to deploy API routes) normally take around 250 milliseconds to boot. Middleware is also designed to startup in much less time than API routes, Vercel claims that their Edge Functions (which are used to deploy Next.js Middleware) have a “100x faster startup” than their Serverless Functions.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/touch-design-for-mobile-interfaces/\">Touch Design for Mobile Interfaces</a></strong>, Steven Hoober’s brand-new guide on <strong>designing for mobile</strong> with proven, universal, human-centric guidelines. <strong>400 pages</strong>, jam-packed with in-depth user research and <strong>best practices</strong>.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14bcab88-b622-47f6-a51d-76b0aa003597/touch-design-book-shop-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b14658fc-bb2d-41a6-8d1a-70eaaf1b8ec8/touch-design-book-shop-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"when-should-i-use-middleware\">When Should I Use Middleware?</h2>\n\n<p>Middleware should be used in cases where a small amount of processing is required, this is because Middleware needs to return a response in less than 1.5 seconds, otherwise the request will time out.</p>\n\n<h3 id=\"geolocation\">Geolocation</h3>\n\n<p>The <code>NextRequest</code> object which is available within Middleware has geographic information available in the <code>geo</code> key. Using this information, you could then rewrite your user to pages with localized information. For example, if you were creating a site for a global restaurant chain, you could show a different menu depending on the user’s location. Vercel’s <a href=\"https://github.com/vercel/examples/tree/main/edge-functions/power-parity-pricing\">example here</a> uses this geolocation to provide Power Parity Pricing.</p>\n\n<p>This can work alongside Next.js’ i8n / localization feature, like <a href=\"https://github.com/vercel/examples/tree/main/edge-functions/i18n\">this</a>.</p>\n\n<h3 id=\"security\">Security</h3>\n\n<p>Through the <code>NextRequest</code> object, the cookie information is available (on the <code>cookies</code> key), and by using <code>NextResponse</code> you can set cookies. These cookies can be used to authenticate users on your site.</p>\n\n<p>You may also want to block access to your sites from certain users, such as bots or users in a certain country. To achieve this you can conditionally return a 404 or rewrite the request to a “blocked” page. Vercel has an example of blocking based on location <a href=\"https://github.com/vercel/examples/tree/main/edge-functions/geolocation-country-block\">here</a>.</p>\n\n<h3 id=\"a-b-testing\">A/B Testing</h3>\n\n<p>Previously, to show a different page to a user on a static site as part of A/B testing (or a similar exercise) you would have had to process the user’s request on the client-side which can cause cumulative layout shifts or a flash. However, if we process it on a server this can be avoided.</p>\n\n<p>To achieve this you can place users in “buckets” through cookies, and then redirect them based on the bucket their cookie places them in. View <a href=\"https://github.com/vercel/examples/tree/main/edge-functions/ab-testing-simple\">Vercel’s example</a> to see how that can work.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"the-limitations-of-middleware\">The Limitations of Middleware</h2>\n\n<p>Middleware is starting to sound pretty wonderful, isn’t it? Whilst it is wonderful, there are some drawbacks which means that you’ll probably still be needing API routes for certain use cases.</p>\n\n<p>Some of these limitations are specific to Vercel deployments of Next.js sites, however, similar limitations exist on other platforms.</p>\n\n<h3 id=\"execution-time-vercel-specific\">Execution Time (Vercel specific)</h3>\n\n<p>A middleware function can execute for a maximum of thirty seconds, however, as I mentioned above, it must return a response within one and a half seconds. This means that your function should return a response as soon as possible, and you can then continue any other workloads in the background if you need to. For example, if you were looking to do server-side analytics, you could extract the information you need, return a response, and then make a call to your database to log the information after returning the response.</p>\n\n<h3 id=\"function-size-vercel-specific\">Function Size (Vercel specific)</h3>\n\n<p>A Middleware function can be at most 1MB, this includes all other code bundled with the function. Most use cases won’t require such a large code bundle, but it’s certainly something to keep an eye on.</p>\n\n<h3 id=\"native-node-js-apis-aren-t-supported\">Native Node.js APIs Aren’t Supported</h3>\n\n<p>Middleware functions don’t run through Node.js like the rest of Next.js’ server-side code does (such as API Routes). One of the key things that limit Middleware functions from performing is reading and writing to the filesystem.</p>\n\n<p>This also means that JavaScript modules that rely on native Node.js APIs also can’t be used.</p>\n\n<h3 id=\"es-modules-only\">ES Modules Only</h3>\n\n<p>Node Modules can be used within middleware, however, they must be ES Modules. Whilst there is a growing shift within the ecosystem to switch to ES Modules, there are still many packages that use CommonJS or rely on other packages through CommonJS.</p>\n\n<h3 id=\"no-string-evaluation\">No String Evaluation</h3>\n\n<p>Neither JavaScript’s <code>eval</code> or <code>new Function(evalString)</code> are allowed within the runtime.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"implementing-middleware\">Implementing Middleware</h2>\n\n<p>To explore how Middleware works we’ll be creating a link shortener that’ll be much faster than those that use API routes.</p>\n\n<p>To get started, clone the starter for the app:</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-bash\">yarn create next-app -e https://github.com/sampoder/middleware-demo/tree/starter</code></pre>\n</div>\n\n<p>The starter has two key files: <code>routes.js</code> &amp; <code>pages/index.js</code>. <code>routes.js</code> will contain all the routes for our link shortener. Normally, you’d use a database, but for the purpose of this exercise, we&rsquo;ll keep it simple with a hardcoded key/value object. <code>pages/index.js</code> will serve as our link shortener&rsquo;s homepage with a list of all the available routes.</p>\n\n<p>Then we’ll create our Middleware function by creating a new file named <code>_middleware.js</code> in the <code>pages</code> directory. A middleware function is scoped to the directory, affecting sibling and children routes. For example, as the <code>/pages</code> directory is linked to the <code>/</code> routes, thus if the middleware is placed in the <code>/pages</code> directory, it will apply to routes, such as <code>/about</code> or <code>/about/team/john</code>. Meanwhile, if the middleware was placed in the <code>/pages/blog</code> directory, it would apply to routes, such as <code>/blog/middleware</code> or <code>/blog/about/submit</code>, but not <code>/info</code>.</p>\n\n<p>We then will need to import <code>NextResponse</code> from <code>next/server</code>:</p>\n\n<pre><code class=\"language-javascript\">import { NextResponse } from 'next/server'</code></pre>\n\n<p>As the <code>NextResponse</code> object is an extension of the Node.js’ <code>Response</code> interface, it’ll allow us to modify the response.</p>\n\n<p>We’ll also need to import the routes file:</p>\n\n<pre><code class=\"language-javascript\">import routes from \"../routes\"</code></pre>\n\n<p>Each Middleware file needs to export a function named <code>middleware</code>. This will be what Next.js runs on request:</p>\n\n<pre><code class=\"language-javascript\">export function middleware(req) {\n  \n}</code></pre>\n\n<p>The middleware function will be passed through a request object. Similar to the <code>NextResponse</code> object, this request object is an extension of the Node.js’ <code>Request</code> interface. It’ll give us information about the client’s request.</p>\n\n<p>Through this request object we can then access the path name of the current request via the <code>nextUrl</code> key:</p>\n\n<pre><code class=\"language-javascript\">let { pathname } = req.nextUrl;</code></pre>\n\n<p>For our link shortener we will need to check whether our <code>routes</code> object contains a key with the same value as the pathname:</p>\n\n<pre><code class=\"language-javascript\">if (routes[pathname]) {\n\n}</code></pre>\n\n<p>Then we can use the <code>NextResponse</code> object to modify the response. The <code>NextResponse</code> object enables us to both <code>redirect()</code> and <code>rewrite()</code> responses to different locations. As we’re building a URL shortener, we’ll use the <code>redirect()</code> method to transport users to their intended destination:</p>\n\n<pre><code class=\"language-javascript\">if (routes[pathname]) {\n  return NextResponse.redirect(routes[req.nextUrl.pathname])\n}</code></pre>\n\n<p>We’ve created a new <code>NextResponse</code> object, applied the redirect method, and then returned that object.</p>\n\n<p>We also need to handle cases in which the pathname doesn’t have a matching destination. In these cases, we’ll redirect the users to our homepage:</p>\n\n<pre><code class=\"language-javascript\">else{\n  const url = request.nextUrl.clone()\n  url.pathname = '/'\n  return NextResponse.redirect(url)\n}</code></pre>\n\n<p>We can’t redirect to <code>/</code> directly, because support for relative URLs within Middleware will be <a href=\"https://nextjs.org/docs/messages/middleware-relative-urls\">deprecated soon</a>. Instead, we make a clone of the request’s URL and change the pathname, before passing that URL object to the <code>redirect()</code> function.</p>\n\n<p>And just like that we’ve got a functioning link shortener! For those curious, our entire middleware function ended up as:</p>\n\n<pre><code class=\"language-javascript\">import { NextResponse } from \"next/server\";\nimport routes from \"../routes\";\n\nexport function middleware(req) {\n  let { pathname } = req.nextUrl\n  if (routes[pathname]) {\n    return NextResponse.redirect(routes[req.nextUrl.pathname])\n  }\n  else{\n    const url = request.nextUrl.clone()\n    url.pathname = '/'\n    return NextResponse.redirect(url)\n  }\n}</code></pre>\n\n<p>And the entire codebase is available at <a href=\"https://github.com/sampoder/middleware-demo\">https://github.com/sampoder/middleware-demo</a>.</p>\n\n<p>Whilst this example is short, it shows how handy middleware can be in building things. When you run the web app, you’ll also see how fast it can be.</p>\n\n<p>Last but not least, middleware has a lot of promise, and I hope you enjoyed exploring the feature with me!</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Next.js’ recent 12.0 release included a new beta feature: middleware. For a\ndetailed explanation, you can read all about it in Sam’s previous article,\n“Next.js Wildcard Subdomains\n[https://www.smashin...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Ideas for Becoming a Greener Freelancer"
        ],
        "link": [
            "https://speckyboy.com/greener-freelancer/"
        ],
        "comments": [
            "https://speckyboy.com/greener-freelancer/#respond"
        ],
        "dc:creator": [
            "Eric Karkovack"
        ],
        "pubDate": [
            "Thu, 21 Apr 2022 06:49:37 +0000"
        ],
        "category": [
            "Freelance Design",
            "Freelance Business",
            "Freelance Career"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139034",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Everyone likes to talk about &#8220;going green&#8221; these days. And there are plenty of good reasons for doing so. Most importantly, it&#8217;s the right thing to do for Mother Earth....</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/greener-freelancer/\">Ideas for Becoming a Greener Freelancer</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>Everyone likes to talk about &#8220;going green&#8221; these days. And there are plenty of good reasons for doing so. Most importantly, it&#8217;s the right thing to do for Mother Earth.</p>\n<p>And there are several ways we freelancers can pitch in. Having a positive (if tiny) impact on the environment is part of the appeal. Beyond that, adopting green practices can increase your efficiency and potentially save you a little bit of money. What&#8217;s not to love?</p>\n<p>Freelance web designers are also in a great position to make such changes. Since many of us are solo entrepreneurs, we can start enacting these practices immediately. There&#8217;s no need to run it by the &#8220;boss.&#8221;</p>\n<p>With that, here are some things you can do to become a greener freelancer. It may be easier than you think!</p>\n\n\n<h2>Stick To Virtual Meetings</h2>\n<p>One of the side effects of the global pandemic was a huge shift towards virtual get-togethers. Clients who used to insist on <a href=\"https://speckyboy.com/client-meetings-thing-past/\" target=\"_blank\" rel=\"noopener\">face-to-face</a> meetings are now just as comfortable with a Zoom conference.</p>\n<p>As things have gradually opened up, this is one habit that should stick. Whether you generally travel by car or public transport, there&#8217;s a chance to save emissions by firing up your webcam.</p>\n<p>And, for busy designers, the whole act of trudging out to a meeting is a massive drain on time. When you factor in preparation and travel, a simple one-hour confab can take up a significant portion of your day. It&#8217;s very inefficient.</p>\n<p>There may be situations when being physically present is a requirement. Otherwise, you may as well take advantage of technology.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/greener-freelancer-01.jpg\" alt=\"A woman participating in a video conference.\" width=\"900\" height=\"400\" /></p>\n<h2>Turn Off Unused Equipment</h2>\n<p>Both web and graphic design can be filled with energy-intensive tasks. You need a <a href=\"https://speckyboy.com/how-to-choose-hardware-for-your-design-business/\" target=\"_blank\" rel=\"noopener\">powerful computer</a>, along with various peripherals to do your job effectively. Put together, these items can use up a significant amount of electricity.</p>\n<p>Many of us tend to leave this high-end equipment powered on – even when it&#8217;s not being used. This ends up wasting finite resources and costing you money.</p>\n<p>Thankfully, the solution to this one is easy: turn off your equipment when it&#8217;s not in use. Computers can be placed in a &#8220;sleep&#8221; state, where they draw <a href=\"https://www.it.northwestern.edu/hardware/eco/stats.html\" target=\"_blank\" rel=\"noopener\">very little</a> power. Or you could shut them down completely.</p>\n<p>Meanwhile, hardware such as printers only needs to be on while they&#8217;re actively being used. Even if the savings are relatively small, it adds up over time.</p>\n<p>Turning off hardware isn&#8217;t relevant just to your off-hours. It also applies to times when you&#8217;re at work. For example, shutting off your monitor during breaks and adjusting its brightness settings are also worthwhile tweaks.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/greener-freelancer-02.jpg\" alt=\"A power switch.\" width=\"900\" height=\"400\" /></p>\n<h2>Recycle Old Electronics</h2>\n<p>The unfortunate part of having so many high-tech gadgets is that they tend to become obsolete – and quickly. That fancy phone you couldn&#8217;t wait to buy? How about that &#8220;state-of-the-art&#8221; laptop? Well, they&#8217;re not quite as shiny these days.</p>\n<p>If you&#8217;re anything like this web designer, you likely have a number of these items sitting in a closet. While they aren&#8217;t necessarily hurting anything, they are taking up valuable space. And, because they often contain environmentally toxic materials, it&#8217;s not safe to simply throw them in the trash.</p>\n<p>Recycling is a much better option. However, it&#8217;s not always a straightforward task. Not every geographic area has a recycling program. And some recyclers aren&#8217;t very transparent about their process – meaning your old devices can still do environmental harm.</p>\n<p>Therefore, you&#8217;ll want to do some research beforehand. Look for a service that will take your old electronics and recycle them in an environmentally-conscious way.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/greener-freelancer-03.jpg\" alt=\"An old cellphone.\" width=\"900\" height=\"400\" /></p>\n<h2>Minimize the Use of Paper</h2>\n<p>Over the years, the term &#8220;paperless&#8221; has been mentioned quite a bit. But how realistic is it?</p>\n<p>Paper is still all around us. Postal mail arrives at our homes and offices. Stores continue to sell books, sketchpads, and all manner of paper products. It&#8217;s not going away anytime soon.</p>\n<p>There is a great opportunity to minimize our use, however. Electronic <a href=\"https://speckyboy.com/free-invoice-templates-designers/\" target=\"_blank\" rel=\"noopener\">invoicing</a> for clients is a great alternative to mailing out hard copies (and saves you some postage). While there may be a few old-fashioned clients who prefer paper, the majority should be fine receiving bills via email.</p>\n<p>It&#8217;s also likely that most of the vendors you work with offer electronic billing as well. And with digital storage being both cheap and abundant, computerizing your receipt archives is a logical choice. Storing piles of paper, on the other hand, is a pain.</p>\n<p>Printers are still an office necessity, but it&#8217;s worth thinking twice before using them. If you need a hard copy of a document, that&#8217;s fine. Otherwise, you may be served just as well by keeping it digitally.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/greener-freelancer-04.jpg\" alt=\"Sheets of paper.\" width=\"900\" height=\"400\" /></p>\n<h2>Easy Ways Designers Can Help the Planet</h2>\n<p>The ideas above share a few common threads. First, they&#8217;re incredibly easy to implement. None of them require a massive effort. And they&#8217;re also small steps toward reducing waste.</p>\n<p>There are plenty of opportunities to take further action – both large and small. We&#8217;ll leave those options up to you. However, positioning your business to be as green as possible is a great start.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/greener-freelancer/\">Ideas for Becoming a Greener Freelancer</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/greener-freelancer/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "Everyone likes to talk about “going green” these days. And there are plenty of\ngood reasons for doing so. Most importantly, it’s the right thing to do for\nMother Earth....\n\nThe post Ideas for Becoming...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "Is Magento 2 Migration Worth It? The Process Explained"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss\"\n              title=\"Is Magento 2 Migration Worth It? The Process Explained\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration.jpg\"\n        alt=\"Is Magento 2 Migration Worth It? The Process Explained\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Magento 1 is out of date. Are you ready for Magento 2 migration? Learn why it's important, the steps involved, and how long it will take.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss\">Is Magento 2 Migration Worth It? The Process Explained</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/magento-2-migration-process-explained/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207464",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Alex Husar"
        ],
        "pubDate": [
            "Thu, 21 Oct 2021 02:00:13 GMT"
        ],
        "plainDescription": "Is Magento 2 Migration Worth It? The Process Explained\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634620880magento-2-migration.jpg]\n[https://www.sitepoint.com/magento-2-migration-proce...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "A Beginner’s Guide to the Parse Platform on Back4App"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss\"\n              title=\"A Beginner’s Guide to the Parse Platform on Back4App\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app.jpg\"\n        alt=\"A Beginner's Guide to the Parse Platform on Back4App\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            No-code and low-code platforms are limited and lock you in. Learn how Parse and Back4App provide all the customization experienced devs need.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss\">A Beginner’s Guide to the Parse Platform on Back4App</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/parse-platform-back4app-beginner-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=208020",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "JavaScript",
            "Low Code",
            "Node.js"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Tue, 09 Nov 2021 02:00:24 GMT"
        ],
        "plainDescription": "A Beginner's Guide to the Parse Platform on Back4App\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636417748parse-back4app.jpg]\n[https://www.sitepoint.com/parse-platform-back4app-beginner...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Noam Rosenthal"
        ],
        "title": [
            "What Web Frameworks Solve: The Vanilla Alternative (Part 2)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/02/web-frameworks-guide-part2/"
        ],
        "pubDate": [
            "Fri, 04 Feb 2022 13:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/02/web-frameworks-guide-part2/"
        ],
        "description": [
            "In this second part, Noam suggests a few patterns of how to use the web platform directly as an alternative to some of the solutions that are offered by frameworks."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/02/web-frameworks-guide-part2/\" />\n              <title>What Web Frameworks Solve: The Vanilla Alternative (Part 2)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>What Web Frameworks Solve: The Vanilla Alternative (Part 2)</h1>\n                  \n                    \n                    <address>Noam Rosenthal</address>\n                  \n                  <time datetime=\"2022-02-04T13:30:00&#43;00:00\" class=\"op-published\">2022-02-04T13:30:00+00:00</time>\n                  <time datetime=\"2022-02-04T13:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p><a href=\"https://www.smashingmagazine.com/2022/01/web-frameworks-guide-part1/\">Last week</a>, we looked at the different benefits and costs of using frameworks, starting from the point of view of which core problems they’re trying to solve, focusing on declarative programming, data-binding, reactivity, lists and conditionals. Today, we’ll see whether an alternative can emerge from the web platform itself.</p>\n\n<h2 id=\"roll-your-own-framework\">Roll Your Own Framework?</h2>\n\n<p>An outcome that might seem inevitable from exploring life without one of the frameworks, is to roll your own framework for reactive data-binding. Having tried this before, and seeing how costly it can be, I decided to work with a guideline in this exploration; not to roll my own framework, but instead to see if I can use the web platform directly in a way that makes frameworks less necessary. If you consider rolling your own framework, be aware that there is a set of costs not discussed in this article.</p>\n\n<h2 id=\"vanilla-choices\">Vanilla Choices</h2>\n\n<p>The web platform already provides a declarative programming mechanism out of the box: HTML and CSS. This mechanism is mature, well tested, popular, widely used, and documented. However, it does not provide clear built-in concepts of data-binding, conditional rendering, and list synchronization, and reactivity is a subtle detail spread across multiple platform features.</p>\n\n<p>When I skim through the documentation of popular frameworks, I find the features <a href=\"https://www.smashingmagazine.com/2022/01/web-frameworks-guide-part1/\">described in Part 1</a> straight away. When I read the web platform documentation (for example, on <a href=\"https://developer.mozilla.org/\">MDN</a>), I find many confusing patterns of how to do things, without a conclusive representation of data-binding, list synchronization, or reactivity. I will try to draw some guidelines of how to approach these problems on the web platform, without requiring a framework (in other words, by going vanilla).</p>\n\n<h3 id=\"reactivity-with-stable-dom-tree-and-cascading\">Reactivity With Stable DOM Tree and Cascading</h3>\n\n<p>Let’s go back to the error label example. In ReactJS and SolidJS, we create declarative code that translates to imperative code that adds the label to the DOM or removes it. In Svelte, that code is generated.</p>\n\n<p>But what if we didn’t have that code at all, and instead we used CSS to hide and show the error label?</p>\n\n<pre><code class=\"language-javascript\">&lt;style&gt;\n    label.error { display: none; }\n    .app.has-error label.error {display: block; }\n&lt;/style&gt;\n&lt;label class=\"error\"&gt;Message&lt;/label&gt;\n\n&lt;script&gt;\n   app.classList.toggle('has-error', true);\n&lt;/script&gt;\n</code></pre>\n\n<p>The reactivity, in this case, is handled in the browser &mdash; the app’s change of class propagates to its descendants until the internal mechanism in the browser decides whether to render the label.</p>\n\n<p>This technique has several advantages:</p>\n\n<ul>\n<li>The bundle size is zero.</li>\n<li>There are zero build steps.</li>\n<li>Change propagation is optimized and well tested, in native browser code, and avoids unnecessary expensive DOM operations like <code>append</code> and <code>remove</code>.</li>\n<li>The selectors are stable. In this case, you can count on the label element being there. You can apply animations to it without relying on complicated constructs such as “transition groups”. You can hold a reference to it in JavaScript.</li>\n<li>If the label is shown or hidden, you can see the reason in the style panel of the developer tools, which shows you the entire cascade, the chain of rules that ended up in the label being visible (or hidden).</li>\n</ul>\n\n<p>Even if you read this and choose to keep working with frameworks, the idea of keeping the DOM stable and changing state with CSS is powerful. Consider where this could be useful to you.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h3 id=\"form-oriented-data-binding\">Form-Oriented “Data-Binding”</h3>\n\n<p>Before the era of JavaScript-heavy single-page applications (SPAs), forms were the major way to create web applications that include user input. Traditionally, the user would fill in the form and click a “Submit” button, and the server-side code would handle the response. Forms were the multi-page application version of data-binding and interactivity. No wonder that HTML elements with the basic names of <code>input</code> and <code>output</code> are form elements.</p>\n\n<p>Because of their wide use and long history, the form APIs accumulated several hidden nuggets that make them useful for problems that are not traditionally thought of as being solved by forms.</p>\n\n<h4 id=\"forms-and-form-elements-as-stable-selectors\">Forms and Form Elements as Stable Selectors</h4>\n\n<p>Forms are accessible by name (using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/forms\"><code>document.forms</code></a>), and each form element is accessible by its name (using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements\"><code>form.elements</code></a>). In addition, the form associated with an element is accessible (using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement\"><code>form</code> attribute</a>). This includes not only input elements, but also other form elements such as <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output\"><code>output</code></a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea\"><code>textarea</code></a>, and <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset\"><code>fieldset</code></a>, which allows for nested access of elements in a tree.</p>\n\n<p>In the error label example from the previous section, we showed how to reactively show and hide the error message. This is how we update the error message text in React (and similarly in SolidJS):</p>\n\n<pre><code class=\"language-javascript\">const [errorMessage, setErrorMessage] = useState(null);\nreturn &lt;label className=\"error\"&gt;{errorMessage}&lt;/label&gt;\n</code></pre>\n\n<p>When we have a stable DOM and stable tree forms and form elements, we can do the following:</p>\n\n<pre><code class=\"language-javascript\">&lt;form name=\"contactForm\"&gt;\n  &lt;fieldset name=\"email\"&gt;\n     &lt;output name=\"error\"&gt;&lt;/output&gt;\n  &lt;/fieldset&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n  function setErrorMessage(message) {\n  document.forms.contactForm.elements.email.elements.error.value = message;\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>This looks quite verbose in its raw form, but it’s also very stable, direct, and extremely performant.</p>\n\n<h4 id=\"forms-for-input\">Forms for Input</h4>\n\n<p>Usually, when we build a SPA, we have some kind of JSON-like API that we work with to update our server, or whatever model we use.</p>\n\n<p>This would be a familiar example (written in Typescript for readability):</p>\n\n<pre><code class=\"language-javascript\">interface Contact {\n  id: string;\n  name: string;\n  email: string;\n  subscriber: boolean;\n}\n\nfunction updateContact(contact: Contact) { … }\n</code></pre>\n\n<p>It’s common in framework code to generate this <code>Contact</code> object by selecting input elements and constructing the object piece by piece. With proper use of forms, there is a concise alternative:</p>\n\n<pre><code class=\"language-javascript\">&lt;form name=\"contactForm\"&gt;\n  &lt;input name=\"id\" type=\"hidden\" value=\"136\" /&gt;\n  &lt;input name=\"email\" type=\"email\"/&gt;\n  &lt;input name=\"name\" type=\"string\" /&gt;\n  &lt;input name=\"subscriber\" type=\"checkbox\" /&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n   updateContact(Object.fromEntries(\n       new FormData(document.forms.contactForm));\n&lt;/script&gt;\n</code></pre>\n\n<p>By using hidden inputs and the useful <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\"><code>FormData</code></a> class, we can seamlessly transform values between DOM input and JavaScript functions.</p>\n\n<h4 id=\"combining-forms-and-reactivity\">Combining Forms and Reactivity</h4>\n\n<p>By combining the high-performance selector stability of forms and CSS reactivity, we can achieve more complex UI logic:</p>\n\n<pre><code class=\"language-javascript\">&lt;form name=\"contactForm\"&gt;\n  &lt;input name=\"showErrors\" type=\"checkbox\" hidden /&gt;\n  &lt;fieldset name=\"names\"&gt;\n     &lt;input name=\"name\" /&gt;\n     &lt;output name=\"error\"&gt;&lt;/output&gt;\n  &lt;/fieldset&gt;\n  &lt;fieldset name=\"emails\"&gt;\n     &lt;input name=\"email\" /&gt;\n     &lt;output name=\"error\"&gt;&lt;/output&gt;\n  &lt;/fieldset&gt;\n&lt;/form&gt;\n\n&lt;script&gt;\n  function setErrorMessage(section, message) {\n  document.forms.contactForm.elements[section].elements.error.value = message;\n  }\n  function setShowErrors(show) {\n  document.forms.contactForm.elements.showErrors.checked = show;\n  }\n&lt;/script&gt;\n\n&lt;style&gt;\n   input[name=\"showErrors\"]:not(:checked) ~ * output[name=\"error\"] {\n      display: none;\n   }\n&lt;/style&gt;\n</code></pre>\n\n<p>Note in this example that there is no use of classes &mdash; we develop the behavior of the DOM and style from the data of the forms, rather than by manually changing element classes.</p>\n\n<p>I am not fond of overusing CSS classes as JavaScript selectors. I think they should be used to group together similarly styled elements, not as a catch-all mechanism to change component styles.</p>\n\n<h4 id=\"advantages-of-forms\">Advantages of Forms</h4>\n\n<ul>\n<li>As with cascading, forms are built into the web platform, and most of their features are stable. That means much less JavaScript, many fewer framework version mismatches, and no “build”.</li>\n<li>Forms are accessible by default. If your app uses forms properly, there is much less need for ARIA attributes, “accessibility plugins”, and last-minute audits. Forms lend themselves to keyboard navigation, screen readers, and other assistive technologies.</li>\n<li>Forms come with built-in input-validation features: validation by regex pattern, reactivity to invalid and valid forms in CSS, handling of required versus optional, and more. You don’t need something to look like a form in order to enjoy these features.</li>\n<li>The <code>submit</code> event of forms is extremely useful. For example, it allows an “Enter” key to be caught even when there is no submit button, and it allows multiple submit buttons to be differentiated by the <code>submitter</code> attribute (as we’ll see in the TODO example later).</li>\n<li>Elements are associated with their containing form by default but can be associated with any other form in the document using the <code>form</code> attribute. This allows us to play around with form association without creating a dependency on the DOM tree.</li>\n<li>Using the stable selectors helps with UI test automation: We can use the nested API as a stable way to hook into the DOM regardless of its layout and hierarchy. The <code>form &gt; (fieldsets) &gt; element</code> hierarchy can serve as the interactive skeleton of your document.</li>\n</ul>\n\n<h3 id=\"chacha-and-html-template\">ChaCha and HTML Template</h3>\n\n<p>Frameworks provide their own way of expressing observable lists. Many developers today also rely on non-framework libraries that provide this kind of feature, such as MobX.</p>\n\n<p>The main problem with general-purpose observable lists is that they are general purpose. This adds convenience with the cost of performance, and it also requires special developer tools to debug the complicated actions that those libraries do in the background.</p>\n\n<p>Using those libraries and understanding what they do are OK, and they can be useful regardless of the choice of UI framework, but using the alternative might not be more complicated, and it might prevent some of the pitfalls that happen when you try to roll your own model.</p>\n\n<h3 id=\"channel-of-changes-or-chacha\">Channel of Changes (or ChaCha)</h3>\n\n<p>The ChaCha &mdash; otherwise also known as <em>Changes Channel</em> &mdash; is a bidirectional stream whose purpose is to notify changes in the <strong>intent</strong> direction and the <strong>observe</strong> direction.</p>\n\n<ul>\n<li>In the <strong>intent</strong> direction, the UI notifies the model of changes intended by the user.</li>\n<li>In the <strong>observe</strong> direction, the model notifies the UI of changes that were made to the model and that need to be displayed to the user.</li>\n</ul>\n\n<p>It’s perhaps a funny name, but it’s not a complicated or novel pattern. Bidirectional streams are used everywhere on the web and in software (for example, <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MessagePort\"><code>MessagePort</code></a>). In this case, we are creating a bidirectional stream that has a particular purpose: to report actual model changes to the UI and intentions to the model.</p>\n\n<p>The interface of ChaCha can usually be derived from the specification of the app, without any UI code.</p>\n\n<p>For example, an app that allows you to add and remove contacts and that loads the initial list from a server (with an option to refresh) could have a ChaCha that looks like this:</p>\n\n<pre><code class=\"language-javascript\">interface Contact {\n  id: string;\n  name: string;\n  email: string;\n}\n// \"Observe\" Direction\ninterface ContactListModelObserver {\n  onAdd(contact: Contact);\n  onRemove(contact: Contact);\n  onUpdate(contact: Contact);\n}\n// \"Intent\" Direction\ninterface ContactListModel {\n  add(contact: Contact);\n  remove(contact: Contact);\n  reloadFromServer();  \n}\n</code></pre>\n\n<p>Note that all of the functions in the two interfaces are void and only receive plain objects. This is intentional. ChaCha is built like a channel with two ports to send messages, which allows it to work in an <code>EventSource</code>, an HTML <code>MessageChannel</code>, a service worker, or any other protocol.</p>\n\n<p>The nice thing about ChaChas is that they’re easy to test: You send actions and expect specific calls to the observer in return.</p>\n\n<h3 id=\"the-html-template-element-for-list-items\">The HTML Template Element for List Items</h3>\n\n<p>HTML templates are special elements that are present in the DOM but don’t get displayed. Their purpose is to generate dynamic elements.</p>\n\n<p>When we use a <code>template</code> element, we can avoid all of the boilerplate code of creating elements and populating them in JavaScript.</p>\n\n<p>The following will add a name to a list using a <code>template</code>:</p>\n\n<pre><code class=\"language-javascript\">&lt;ul id=\"names\"&gt;\n  &lt;template&gt;\n   &lt;li&gt;&lt;label class=\"name\" /&gt;&lt;/li&gt;\n  &lt;/template&gt;\n&lt;/ul&gt;\n&lt;script&gt;\n  function addName(name) {\n    const list = document.querySelector('#names');\n    const item = list.querySelector('template').content.cloneNode(true).firstElementChild;\n    item.querySelector('label').innerText = name;\n    list.appendChild(item);\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>By using the <code>template</code> element for list items, we can see the list item in our original HTML &mdash; it’s not “rendered” using JSX or some other language. Your HTML file now contains <em>all</em> of the HTML of the app &mdash; the static parts are part of the rendered DOM, and the dynamic parts are expressed in templates, ready to be cloned and appended to the document when the time comes.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"putting-it-all-together-todomvc\">Putting It All Together: TodoMVC</h2>\n\n<p><a href=\"https://todomvc.com/\">TodoMVC</a> is an app specification of a TODO list that has been used to showcase the different frameworks. The TodoMVC template comes with ready-made HTML and CSS to help you focus on the framework.</p>\n\n<p>You can play with <a href=\"https://noamr.github.io/todomvc-app-template/index.html\">the result</a> in the GitHub repository, and the <a href=\"https://github.com/noamr/todomvc-app-template\">full source code</a> is available.</p>\n\n<h3 id=\"start-with-a-specification-derived-chacha\">Start With a Specification-Derived ChaCha</h3>\n\n<p>We’ll start with the <a href=\"https://github.com/tastejs/todomvc/blob/master/app-spec.md\">specification</a> and use it to build the ChaCha interface:</p>\n\n<pre><code class=\"language-javascript\">interface Task {\n   title: string;\n   completed: boolean;\n}\n\ninterface TaskModelObserver {\n   onAdd(key: number, value: Task);\n   onUpdate(key: number, value: Task);\n   onRemove(key: number);\n   onCountChange(count: {active: number, completed: number});\n}\n\ninterface TaskModel {\n   constructor(observer: TaskModelObserver);\n   createTask(task: Task): void;\n   updateTask(key: number, task: Task): void;\n   deleteTask(key: number): void;\n   clearCompleted(): void;\n   markAll(completed: boolean): void;\n}\n</code></pre>\n\n<p>The functions in the task model are derived directly from the specification and what the user can do (clear completed tasks, mark all as completed or active, get the active and completed counts).</p>\n\n<p>Note that it follows the guidelines of ChaCha:</p>\n\n<ul>\n<li>There are two interfaces, one acting and one observing.</li>\n<li>All of the parameter types are primitives or plain objects (being easily translated to JSON).</li>\n<li>All of the functions return void.</li>\n</ul>\n\n<p>The implementation of TodoMVC <a href=\"https://github.com/noamr/todomvc-app-template/blob/main/js/model.js\">uses <code>localStorage</code> as the back end</a>.</p>\n\n<p>The model is very simple and not very relevant to the discussion about the UI framework. It saves to <code>localStorage</code> when needed and fires change callbacks to the observer when something changes, either as a result of user action or when the model is loaded from <code>localStorage</code> for the first time.</p>\n\n<h3 id=\"lean-form-oriented-html\">Lean, Form-Oriented HTML</h3>\n\n<p>Next, I’ll take the TodoMVC template and modify it to be form-oriented &mdash; a hierarchy of forms, with input and output elements representing data that can be changed with JavaScript.</p>\n\n<p>How do I know whether something needs to be a form element? As a rule of thumb, if it binds to data from the model, then it should be a form element.</p>\n\n<p>The <a href=\"https://github.com/noamr/todomvc-app-template/blob/main/index.html\">full HTML file</a> is available, but here is its main part:</p>\n\n<pre><code class=\"language-javascript\">&lt;section class=\"todoapp\"&gt;\n   &lt;header class=\"header\"&gt;\n       &lt;h1&gt;todos&lt;/h1&gt;\n       &lt;form name=\"newTask\"&gt;\n           &lt;input name=\"title\" type=\"text\" placeholder=\"What needs to be done?\" autofocus&gt;\n       &lt;/form&gt;\n   &lt;/header&gt;\n\n   &lt;main&gt;\n       &lt;form id=\"main\"&gt;&lt;/form&gt;\n       &lt;input type=\"hidden\" name=\"filter\" form=\"main\" /&gt;\n       &lt;input type=\"hidden\" name=\"completedCount\" form=\"main\" /&gt;\n       &lt;input type=\"hidden\" name=\"totalCount\" form=\"main\" /&gt;\n       &lt;input name=\"toggleAll\" type=\"checkbox\" form=\"main\" /&gt;\n\n       &lt;ul class=\"todo-list\"&gt;\n           &lt;template&gt;\n               &lt;form class=\"task\"&gt;\n                   &lt;li&gt;\n                       &lt;input name=\"completed\" type=\"checkbox\" checked&gt;\n                       &lt;input name=\"title\" readonly /&gt;\n                       &lt;input type=\"submit\" hidden name=\"save\" /&gt;\n                       &lt;button name=\"destroy\"&gt;X&lt;/button&gt;\n                   &lt;/li&gt;\n               &lt;/form&gt;\n           &lt;/template&gt;\n       &lt;/ul&gt;\n   &lt;/main&gt;\n\n   &lt;footer&gt;\n       &lt;output form=\"main\" name=\"activeCount\"&gt;0&lt;/output&gt;\n       &lt;nav&gt;\n           &lt;a name=\"/\" href=\"#/\"&gt;All&lt;/a&gt;\n           &lt;a name=\"/active\" href=\"#/active\"&gt;Active&lt;/a&gt;\n           &lt;a name=\"/completed\" href=\"#/completed\"&gt;Completed&lt;/a&gt;\n       &lt;/nav&gt;\n       &lt;input form=\"main\" type=\"button\" name=\"clearCompleted\" value=\"Clear completed\" /&gt;\n   &lt;/footer&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>This HTML includes the following:</p>\n\n<ul>\n<li>We have a <code>main</code> form, with all of the global inputs and buttons, and a new form for creating a new task. Note that we associate the elements to the form using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-form\"><code>form</code> attribute</a>, to avoid nesting the elements in the form.</li>\n<li>The <code>template</code> element represents a list item, and its root element is another form that represents the interactive data related to a particular task. This form would be repeated by cloning the template’s contents when tasks are added.</li>\n<li>Hidden inputs represent data that is not directly shown but that is used for styling and selecting.</li>\n</ul>\n\n<p>Note how this DOM is concise. It does not have classes sprinkled across its elements. It includes all of the elements needed for the app, arranged in a sensible hierarchy. Thanks to the hidden input elements, you can already get a good sense of what might change in the document later on.</p>\n\n<p>This HTML does not know how it’s going to be styled or exactly what data it’s bound to. Let the CSS and JavaScript work for your HTML, rather than your HTML work for a particular styling mechanism. This would make it much easier to change designs as you go along.</p>\n\n<h3 id=\"minimal-controller-javascript\">Minimal Controller JavaScript</h3>\n\n<p>Now that we have most of the reactivity in CSS, and we have list-handling in the model, what’s left is the controller code &mdash; the duct tape that holds everything together. In this small application, the controller JavaScript is <a href=\"https://github.com/noamr/todomvc-app-template/blob/main/js/app.js\">around 40 lines</a>.</p>\n\n<p>Here is a version, with an explanation for each part:</p>\n\n<pre><code class=\"language-javascript\">import TaskListModel from './model.js';\n\nconst model = new TaskListModel(new class {\n</code></pre>\n\n<p>Above, we create a new model.</p>\n\n<pre><code class=\"language-javascript\">onAdd(key, value) {\n   const newItem = document.querySelector('.todo-list template').content.cloneNode(true).firstElementChild;\n   newItem.name = `task-${key}`;\n   const save = () => model.updateTask(key,  Object.fromEntries(new FormData(newItem)));\n   newItem.elements.completed.addEventListener('change', save);\n   newItem.addEventListener('submit', save);\n   newItem.elements.title.addEventListener('dblclick', ({target}) => target.removeAttribute('readonly'));\n   newItem.elements.title.addEventListener('blur', ({target}) => target.setAttribute('readonly', ''));\n   newItem.elements.destroy.addEventListener('click', () => model.deleteTask(key));\n   this.onUpdate(key, value, newItem);\n   document.querySelector('.todo-list').appendChild(newItem);\n}\n</code></pre>\n\n<p>When an item is added to the model, we create its corresponding list item in the UI.</p>\n\n<p>Above, we clone the contents of the item <code>template</code>, assign the event listeners for a particular item, and add the new item to the list.</p>\n\n<p>Note that this function, along with <code>onUpdate</code>, <code>onRemove</code>, and <code>onCountChange</code>, are callbacks that are going to be called from the <a href=\"https://github.com/noamr/todomvc-app-template/blob/main/js/model.js\">model</a>.</p>\n\n<pre><code class=\"language-javascript\">onUpdate(key, {title, completed}, form = document.forms[`task-${key}`]) {\n   form.elements.completed.checked = !!completed;\n   form.elements.title.value = title;\n   form.elements.title.blur();\n}\n</code></pre>\n\n<p>When an item is updated, we set its <code>completed</code> and <code>title</code> values, and then <code>blur</code> (to exit editing mode).</p>\n\n<pre><code class=\"language-javascript\">onRemove(key) { document.forms[`task-${key}`].remove(); }\n</code></pre>\n\n<p>When an item is removed from the model, we remove its corresponding list item from the view.</p>\n\n<pre><code class=\"language-javascript\">onCountChange({active, completed}) {\n   document.forms.main.elements.completedCount.value = completed;\n   document.forms.main.elements.toggleAll.checked = active === 0;\n   document.forms.main.elements.totalCount.value = active + completed;\n   document.forms.main.elements.activeCount.innerHTML = `&lt;strong&gt;${active}&lt;/strong&gt; item${active === 1 ? '' : 's'} left`;\n}\n</code></pre>\n\n<p>In the code above, when the number of completed or active items changes, we set the proper inputs to trigger the CSS reactions, and we format the output that displays the count.</p>\n\n<pre><code class=\"language-javascript\">const updateFilter = () => filter.value = location.hash.substr(2);\nwindow.addEventListener('hashchange', updateFilter);\nwindow.addEventListener('load', updateFilter);\n</code></pre>\n\n<p>And we update the filter from the <code>hash</code> fragment (and at startup). All we’re doing above is setting the value of a form element &mdash; CSS handles the rest.</p>\n\n<pre><code class=\"language-javascript\">document.querySelector('.todoapp').addEventListener('submit', e => e.preventDefault(), {capture: true});\n</code></pre>\n\n<p>Here, we ensure that we don’t reload the page when a form is submitted. This is the line that turns this app into a SPA.</p>\n\n<pre><code class=\"language-javascript\">document.forms.newTask.addEventListener('submit', ({target: {elements: {title}}}) =&gt;   \n    model.createTask({title: title.value}));\ndocument.forms.main.elements.toggleAll.addEventListener('change', ({target: {checked}})=&gt;\n    model.markAll(checked));\ndocument.forms.main.elements.clearCompleted.addEventListener('click', () =&gt;\n    model.clearCompleted());\n</code></pre>\n\n<p>And this handles the main actions (creating, marking all, clearing completed).</p>\n\n<h3 id=\"reactivity-with-css\">Reactivity With CSS</h3>\n\n<p>The <a href=\"https://github.com/noamr/todomvc-app-template/blob/main/css/app.css\">full CSS file</a> is available for you to view.</p>\n\n<p>CSS handles a lot of the requirements of the specification (with some amendments to favor accessibility). Let’s look at some examples.</p>\n\n<p>According to the specification, the “X” (<code>destroy</code>) button is shown only on hover. I’ve also added an accessibility bit to make it visible when the task is focused:</p>\n\n<pre><code class=\"language-javascript\">.task:not(:hover, :focus-within) button[name=\"destroy\"] { opacity: 0 }\n</code></pre>\n\n<p>The <code>filter</code> link gets a red-ish border when it’s the current one:</p>\n\n<pre><code class=\"language-javascript\">.todoapp input[name=\"filter\"][value=\"\"] ~ footer a[href$=\"#/\"],\nnav a:target {\n   border-color: #CE4646;\n}\n</code></pre>\n\n<p>Note that we can use the <code>href</code> of the link element as a partial attribute selector &mdash; no need for JavaScript that checks the current filter and sets a <code>selected</code> class on the proper element.</p>\n\n<p>We also use the <code>:target</code> selector, which frees us from having to worry about whether to add filters.</p>\n\n<p>The view and edit style of the <code>title</code> input changes based on its read-only mode:</p>\n\n<pre><code class=\"language-javascript\">.task input[name=\"title\"]:read-only {\n…\n}\n\n.task input[name=\"title\"]:not(:read-only) {\n…\n}\n</code></pre>\n\n<p>Filtering (i.e. showing only active and completed tasks) is done with a selector:</p>\n\n<pre><code class=\"language-javascript\">input[name=\"filter\"][value=\"active\"] ~ * .task\n      :is(input[name=\"completed\"]:checked, input[name=\"completed\"]:checked ~ *),\ninput[name=\"filter\"][value=\"completed\"] ~ * .task\n     :is(input[name=\"completed\"]:not(:checked), input[name=\"completed\"]:not(:checked) ~ *) {\n   display: none;\n}\n</code></pre>\n\n<p>The code above might seem a bit verbose, and it is probably easier to read with a CSS preprocessor such as Sass. But what it does is straightforward: If the filter is <code>active</code> and the <code>completed</code> checkbox is checked, or vice versa, then we hide the checkbox and its siblings.</p>\n\n<p>I chose to implement this simple filter in CSS to show how far this can go, but if it starts to get hairy, then it would totally make sense to move it into the model instead.</p>\n\n<h2 id=\"conclusion-and-takeaways\">Conclusion and Takeaways</h2>\n\n<p>I believe that frameworks provide convenient ways to achieve complicated tasks, and they have benefits beyond technical ones, such as aligning a group of developers to a particular style and pattern. The web platform offers many choices, and adopting a framework gets everyone at least partially on the same page for some of those choices. There’s value in that. Also, there is something to be said for the elegance of declarative programming, and the big feature of componentization is not something I’ve tackled in this article.</p>\n\n<p>But remember that alternative patterns exist, often with less cost and not always needing less developer experience. Allow yourself to be curious with those patterns, even if you decide to pick and choose from them while using a framework.</p>\n\n<h3 id=\"pattern-recap\">Pattern Recap</h3>\n\n<ul>\n<li>Keep the DOM tree stable. It starts a chain reaction of making things easy.</li>\n<li>Rely on CSS for reactivity instead of JavaScript, when you can.</li>\n<li>Use form elements as the main way to represent interactive data.</li>\n<li>Use the HTML <code>template</code> element instead of JavaScript-generated templates.</li>\n<li>Use a bidirectional stream of changes as the interface to your model.</li>\n</ul>\n\n<p><em>Special thanks to the following individuals for technical reviews: Yehonatan Daniv, Tom Bigelajzen, Benjamin Greenbaum, Nick Ribal, Louis Lazaris</em></p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "In this second part, Noam suggests a few patterns of how to use the web platform\ndirectly as an alternative to some of the solutions that are offered by\nframeworks....",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "Exploring Vite Through its Source Code"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss\"\n              title=\"Exploring Vite Through its Source Code\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code.jpg\"\n        alt=\"Exploring Vite Through its Source Code\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn about Vite's internal architecture, including its template and plugin systems, and how its core system is connected to a plugin.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss\">Exploring Vite Through its Source Code</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206254",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Andy Li"
        ],
        "pubDate": [
            "Wed, 22 Sep 2021 02:00:43 GMT"
        ],
        "plainDescription": "Exploring Vite Through its Source Code\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632280500vite-source-code.jpg]\n[https://www.sitepoint.com/exploring-vite-source-code/?utm_source=rss] ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "React Redux Tutorial Part 5 -- useSelector の使い方の復習"
        ],
        "dc:creator": [
            "kaede"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:03:33 +0000"
        ],
        "link": [
            "https://dev.to/kaede_io/react-redux-tutorial-part-5-useselector-noshi-ifang-nofu-xi-48po"
        ],
        "guid": [
            "https://dev.to/kaede_io/react-redux-tutorial-part-5-useselector-noshi-ifang-nofu-xi-48po"
        ],
        "description": [
            "<h2>\n  \n  \n  why\n</h2>\n\n<p><a href=\"https://react-redux.js.org/api/hooks#useselector-examples\">https://react-redux.js.org/api/hooks#useselector-examples</a></p>\n\n<p>React Redux で connect の代替となる useSelector の説明があったが、チュートリアルとしてはなかったので、実際に動かしてみる</p>\n\n\n\n\n<h2>\n  \n  \n  connect の時の流れ\n</h2>\n\n<p><a href=\"https://dev.to/kaede_io/react-redux-tutorial-part-4-connect-api-woshi-tute-todo-apuriwozuo-ru-23f9\">https://dev.to/kaede_io/react-redux-tutorial-part-4-connect-api-woshi-tute-todo-apuriwozuo-ru-23f9</a></p>\n\n<p>この記事の時は</p>\n\n<p>redux/actions -&gt; reducers -&gt; redux/store -&gt; src/index/Provider</p>\n\n<p>と</p>\n\n<p>redux/store -&gt; redux/selectors.js -&gt; Components/.../connect(mapToStateProps) </p>\n\n<p>これで取ってきている</p>\n\n\n\n\n<h2>\n  \n  \n  useSelector での流れ\n</h2>\n\n<p>reducers -&gt; redux/store -&gt; Components/.../useSelector</p>\n\n<p>これで取って来れると予測する。</p>\n\n\n\n\n<h2>\n  \n  \n  CRA with TS して store と reducers を作成する\n</h2>\n\n\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"nx\">npx</span> <span class=\"nx\">create</span><span class=\"o\">-</span><span class=\"nx\">react</span><span class=\"o\">-</span><span class=\"nx\">app</span> <span class=\"nx\">redux</span><span class=\"o\">-</span><span class=\"nx\">useselector</span> <span class=\"o\">--</span><span class=\"nx\">template</span> <span class=\"nx\">typescript</span>\n</code></pre>\n\n</div>\n\n\n\n<p>CRA with TS で redux-useselector という名前で React アプリを作成</p>\n\n<p><a href=\"https://dev.to/kaede_io/react-redux-part-1-react-redux-nodao-ru-5o1\">https://dev.to/kaede_io/react-redux-part-1-react-redux-nodao-ru-5o1</a></p>\n\n<p>これの流れの通りに再びやってみた。<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"kd\">const</span> <span class=\"nx\">counterSlice</span> <span class=\"o\">=</span> <span class=\"nx\">createSlice</span><span class=\"p\">({</span>\n  <span class=\"na\">name</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">counter</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n  <span class=\"nx\">initialState</span><span class=\"p\">,</span>\n  <span class=\"na\">reducers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"na\">increment</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">value</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">decrement</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">value</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\n    <span class=\"p\">},</span>\n    <span class=\"na\">incrementByAmount</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">,</span> <span class=\"na\">action</span><span class=\"p\">:</span> <span class=\"nx\">PayloadAction</span><span class=\"o\">&lt;</span><span class=\"kr\">number</span><span class=\"o\">&gt;</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">value</span> <span class=\"o\">+=</span> <span class=\"nx\">action</span><span class=\"p\">.</span><span class=\"nx\">payload</span>\n    <span class=\"p\">},</span>\n  <span class=\"p\">},</span>\n<span class=\"p\">})</span>\n<span class=\"k\">export</span> <span class=\"kd\">const</span> <span class=\"p\">{</span> <span class=\"nx\">increment</span><span class=\"p\">,</span> <span class=\"nx\">decrement</span><span class=\"p\">,</span> <span class=\"nx\">incrementByAmount</span> <span class=\"p\">}</span> <span class=\"o\">=</span> <span class=\"nx\">counterSlice</span><span class=\"p\">.</span><span class=\"nx\">actions</span>\n<span class=\"c1\">// exporting increment and decrement</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">counterSlice</span><span class=\"p\">.</span><span class=\"nx\">reducer</span>\n<span class=\"c1\">// exporting counter state</span>\n</code></pre>\n\n</div>\n\n\n\n<p>改めてみると、slice ファイルでグローバルステート定義して<br>\nexport default で出して<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight typescript\"><code><span class=\"k\">export</span> <span class=\"kd\">function</span> <span class=\"nx\">Counter</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kd\">const</span> <span class=\"nx\">count</span> <span class=\"o\">=</span> <span class=\"nx\">useAppSelector</span><span class=\"p\">((</span><span class=\"nx\">state</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">counter</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">)</span>\n</code></pre>\n\n</div>\n\n\n\n<p>useSelector (をラップしたもの) でグローバルステートを持ってきている。</p>\n\n"
        ],
        "category": [
            "redux"
        ],
        "plainDescription": "WHY\n\nhttps://react-redux.js.org/api/hooks#useselector-examples\n[https://react-redux.js.org/api/hooks#useselector-examples]\n\nReact Redux で connect の代替となる useSelector の説明があったが、チュートリアルとしてはなかったので、実際に動かしてみ...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "How to Create Responsive React Components with React Textfit"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss\"\n              title=\"How to Create Responsive React Components with React Textfit\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components.jpg\"\n        alt=\"How to Create Responsive React Components with React Textfit\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to create truly responsive React components that adapt to different UI environments by using the handy react-textfit library.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss\">How to Create Responsive React Components with React Textfit</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/responsive-react-components-textfit/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207078",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Antonello Zanini"
        ],
        "pubDate": [
            "Mon, 11 Oct 2021 02:00:08 GMT"
        ],
        "plainDescription": "How to Create Responsive React Components with React Textfit\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633673325responsive-react-components.jpg]\n[https://www.sitepoint.com/responsive-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Magento 2 Translation: How Internationalization Works"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss\"\n              title=\"Magento 2 Translation: How Internationalization Works\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation.jpg\"\n        alt=\"Magento 2 Translation: How Internationalization Works\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Magento 2 translation is important for reaching a global audience. Learn the steps involved in adding languages to your online store.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss\">Magento 2 Translation: How Internationalization Works</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/magento-2-translation-how-internationalization-works/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207699",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Wed, 03 Nov 2021 02:00:52 GMT"
        ],
        "plainDescription": "Magento 2 Translation: How Internationalization Works\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635910977magento-translation.jpg]\n[https://www.sitepoint.com/magento-2-translation-how-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Build a Reading List with Svelte"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/build-reading-list-svelte/?utm_source=rss\"\n              title=\"Build a Reading List with Svelte\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction.jpg\"\n        alt=\"Getting Started with Svelte\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to take your first steps with Svelte, a relatively new JavaScript frontend framework for developing websites and web apps.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/build-reading-list-svelte/?utm_source=rss\">Build a Reading List with Svelte</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/build-reading-list-svelte/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=257695",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Programming",
            "Tools & Libraries"
        ],
        "dc:creator": [
            "Simon Holthausen"
        ],
        "pubDate": [
            "Wed, 23 Feb 2022 22:47:03 GMT"
        ],
        "plainDescription": "Getting Started with Svelte\n[https://uploads.sitepoint.com/wp-content/uploads/2022/02/1643934928svelte-introduction.jpg]\n[https://www.sitepoint.com/build-reading-list-svelte/?utm_source=rss] Learn how...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Add a CSS Lens Flare to Photos for a Bright Touch"
        ],
        "link": [
            "https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/"
        ],
        "comments": [
            "https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/#comments"
        ],
        "dc:creator": [
            "Shimin Zhang"
        ],
        "pubDate": [
            "Tue, 12 Apr 2022 17:10:13 +0000"
        ],
        "category": [
            "Article",
            "design",
            "gradients"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364385",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>I&#8217;m a big fan of movies by <a href=\"https://en.wikipedia.org/wiki/J._J._Abrams\" rel=\"noopener\">J.J. Abrams</a>. I enjoy their tight plots, quippy dialog, and of course: <strong>anamorphic lens flares</strong>. <a href=\"https://gizmodo.com/j-j-abrams-admits-star-trek-lens-flares-are-ridiculou-5230278\" rel=\"noopener\">Filmmakers like Abrams use lens flare</a> to add a dash of &#8216;homemade&#8217; realism to their movies, &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/\">Add a CSS Lens Flare to Photos for a Bright Touch</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>I&#8217;m a big fan of movies by <a href=\"https://en.wikipedia.org/wiki/J._J._Abrams\" rel=\"noopener\">J.J. Abrams</a>. I enjoy their tight plots, quippy dialog, and of course: <strong>anamorphic lens flares</strong>. <a href=\"https://gizmodo.com/j-j-abrams-admits-star-trek-lens-flares-are-ridiculou-5230278\" rel=\"noopener\">Filmmakers like Abrams use lens flare</a> to add a dash of &#8216;homemade&#8217; realism to their movies, a technique we can easily recreate in tools like Photoshop, then add to our sites as raster images.</p>\n\n\n\n<p>But what if we wanted to apply the same lens flare look <em>without</em> the use of photo editing tools? We can create a CSS lens flare to add a cinematic touch to our gallery images, background photos, or user profiles.</p>\n\n\n\n<span id=\"more-364385\"></span>\n\n\n\n<p>There are different types of flares in photography. The one we’re working with is known as artifacts, as they leave behind little blotches of light that take the shape of a camera’s aperture where the light enters and reflects off the surface of the lens.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2560\" height=\"1591\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=2560%2C1591&#038;ssl=1\" alt=\"A diagram showing how light enters a camera lens at various angles to create a flare.\" class=\"wp-image-364386\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?w=2560&amp;ssl=1 2560w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=300%2C186&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=1024%2C636&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=768%2C477&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=1536%2C955&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=2048%2C1273&amp;ssl=1 2048w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/2560px-Lens_flare_scheme_en.svg.png?resize=1000%2C621&amp;ssl=1 1000w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Source:&nbsp;<a href=\"https://commons.wikimedia.org/wiki/File:Lens_flare_scheme_en.svg\" target=\"_blank\" rel=\"noreferrer noopener\">Wikipedia</a></figcaption></figure>\n\n\n\n<p>Here’s a good example of the sort of lens flare we’re going to make, pulled straight from a J.J. Abrams movie still, naturally:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"600\" height=\"300\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/startrek.jpg.webp?resize=600%2C300&#038;ssl=1\" alt=\"An example of the CSS lens flare we are making, showing a flare to the right of an actor in a still from the 2009 Star Trek movie\" class=\"wp-image-364387\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/startrek.jpg.webp?w=600&amp;ssl=1 600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/02/startrek.jpg.webp?resize=300%2C150&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Star Trek&nbsp;(2009)</figcaption></figure>\n\n\n\n<p>There are a few parts to the lens flare above. Let’s list them out so we know what we’re aiming for:</p>\n\n\n\n<ol><li>The center light source appears as a glowing ball of light.</li><li>There are some horizontal elliptical light streaks — rays of light that are distorted and blurred, resulting in elongated ellipses.</li><li>Random rays of light shoot off from the center light source at various angles.</li></ol>\n\n\n\n<p>We start with the HTML elements below that map to our flare components. There is a central light source and two off-diagonal circular flares, three horizontal lens flares, and three conical ray-like flares.  </p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;div class=\"lens-center\">&lt;/div>\n    &lt;div class=\"circle-1\">&lt;/div>\n    &lt;div class=\"circle-2\">&lt;/div>\n    &lt;div class=\"left-flare horizontal-flare\">&lt;/div>\n    &lt;div class=\"right-flare horizontal-flare\">&lt;/div>\n    &lt;div class=\"full-flare horizontal-flare\">&lt;/div>\n    &lt;div class=\"conic-1\">&lt;/div>\n    &lt;div class=\"conic-2\">&lt;/div>\n    &lt;div class=\"conic-3\">&lt;/div>\n&lt;/div></code></pre>\n\n\n\n<p>Lastly, in order for our lens flare to be believably superimposed on an image, its center light source has to be adjustable. This way, we can place it over a believable existing light source on a picture and not overlap with any faces.</p>\n\n\n\n<h3>The background and light source of a CSS lens flare</h3>\n\n\n\n<p>Let&#8217;s start with a black background and central light source for our CSS lens flare. Most <a href=\"https://css-tricks.com/a-complete-guide-to-css-gradients/\">gradients on the web</a> are linear gradients with solid-color transitions, but we can apply alpha channels to them which is actually a nice way to produce a glowing effect. A circular-shaped radial gradient with multiple layers of semi-transparent colors gives us a good camera center effect.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">background: radial-gradient(\n  closest-side circle at center,\n  hsl(4 5% 100% / 100%) 0%,\n  hsl(4 5% 100% / 100%) 15%,\n  hsl(4 10% 70% / 70%) 30%,\n  hsl(4 0% 50% / 30%) 55%,\n  hsl(4 0% 10% / 5%) 75%,\n  transparent 99\n);\nfilter: blur(4px);</code></pre>\n\n\n\n<p class=\"is-style-explanation\">Curious about that HSL syntax? It’s new and appears to be <a href=\"https://css-tricks.com/new-css-color-features-preview/#aa-there-are-no-special-functions-just-for-alpha-anymore\">the future direction of defining alpha transparency</a> in all CSS color functions.</p>\n\n\n\n<p>Notice we’re using a <a href=\"https://css-tricks.com/almanac/properties/f/filter/#aa-blur\">CSS blur filter</a> in there to make the gradients look a bit closer to layers of diffused light.</p>\n\n\n\n<p>Now that we know how to add circular flares, we will also add a larger, diffused flare behind the light source, as well as three additional flares at a <code>45deg</code> angle from the center, to give the effect a more realistic look.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_xxPpvEw\" src=\"//codepen.io/anon/embed/xxPpvEw?height=450&amp;theme-id=1&amp;slug-hash=xxPpvEw&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed xxPpvEw\" title=\"CodePen Embed xxPpvEw\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Setting up horizontal light streaks</h3>\n\n\n\n<p>Let’s start with horizontal flares. There are a few options we can take, a very elongated ellipse gradient would be the simplest approach. However, I’ve noticed that horizontal lens flares are usually less symmetrical than the ones in my reference photos, so I wanted to make mine a little less symmetrical as well.</p>\n\n\n\n<p>Luckily, radial gradients have an optional location argument in CSS. We can create two slightly differently-sized left and right portions of the same horizontal flare, and with slightly different colors. We can also add an opacity filter to make the area where the horizontal flares join the center to make the flare less jarring.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">background: radial-gradient(\n  closest-side circle at center,\n  transparent 50%,\n  hsl(4 10% 70% / 40%) 90%,\n  transparent 100%\n);\nfilter: blur(5px);</code></pre>\n\n\n\n<p>While we are at it, let&#8217;s also add a single full elongated elliptical bottom flare three-quarters of the way down the viewport for another touch of &#8220;realism.&#8221;</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_oNopKBY\" src=\"//codepen.io/anon/embed/oNopKBY?height=450&amp;theme-id=1&amp;slug-hash=oNopKBY&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed oNopKBY\" title=\"CodePen Embed oNopKBY\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Creating the diffused rays of light</h3>\n\n\n\n<p>With both the radial and horizontal flares in place, all we have left are the angled rays of light shooting off from the light source. We could add additional elliptical radial gradients then skew and translate the container to get a close approximation. But we also have a CSS gradient that’s already made for the job, the <strong>conic gradient</strong>. Below is an example that gives us a <code>7deg</code> conic gradient at a <code>5deg</code> offset from its container&#8217;s bottom-right corner.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">background: conic-gradient(\n  from 5deg at 0% 100%,\n  transparent 0deg,\n  hsl(4 10% 70% / 30%) 7deg,\n  transparent 15deg\n);\ntransform-origin: bottom left;\ntransform: rotate(-45deg);</code></pre>\n\n\n\n<p>We&#8217;ll add a few conic gradients centered at our flare center, with various gradient angles of semi-transparent colors. Because conic gradients can show the corner of its container <code>div</code>, we will rotationally transform them using our light source as its origin, resulting in an offset diffused ray filter effect.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_BamJXdV\" src=\"//codepen.io/anon/embed/BamJXdV?height=450&amp;theme-id=1&amp;slug-hash=BamJXdV&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed BamJXdV\" title=\"CodePen Embed BamJXdV\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Using CSS custom properties for a more flexible lens flare</h3>\n\n\n\n<p>So far, we&#8217;ve created a responsive, but statically-positioned, lens flare effect at a fixed location. It would be difficult to adjust the center of the lens flare without also breaking the horizontal and conic flares around it.</p>\n\n\n\n<p>To make the CSS lens flare both adjustable and less brittle, we&#8217;ll expose the light source flare&#8217;s position, size, and hue via a set of custom properties.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">:root {\n  --hue: 4;\n  --lens-center-size: 40%;\n  --lens-spread-size: 80%;\n  --lens-left: 55%;\n  --lens-top: 15%;\n}</code></pre>\n\n\n\n<p>While we are at it, we are also going to adjust the flare hue and the size of the horizontal flare height. For horizontal flare width, we use <a href=\"https://blog.shimin.io/css-custom-properties-as-style-api/\" rel=\"noopener\">CSS variable overloading</a> to make them adjustable on their own; otherwise, we fall back to the light source flare center or the image center.</p>\n\n\n\n<pre rel=\"CSS\" class=\"wp-block-csstricks-code-block language-css\" data-line=\"\"><code markup=\"tt\">.left-flare {\n  width: var(--left-flare-width, var(--lens-left, 50%));\n}</code></pre>\n\n\n\n<p>This is what the completed CSS lens flare effect looks like with a photo background and the lens flare moved up so the light source location looks believable. Go ahead, add your own photo to see how it works in different contexts!</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_vYWpoWe\" src=\"//codepen.io/anon/embed/vYWpoWe?height=450&amp;theme-id=1&amp;slug-hash=vYWpoWe&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed vYWpoWe\" title=\"CodePen Embed vYWpoWe\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<h3>Other CSS and non-CSS lens flare examples</h3>\n\n\n\n<p>This is just one way to create a CSS lens flare, of course. I like this approach because it’s flexible in terms of the color, size, and positioning of the flare and its parts. That makes it more of a reusable component that can be used in many contexts.</p>\n\n\n\n<p>Here’s one by Keith Grant that uses a linear gradient as well as CSS custom properties. Then it sprinkles some JavaScript in there to randomize the HSLA values.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ObJzra\" src=\"//codepen.io/anon/embed/ObJzra?height=450&amp;theme-id=1&amp;slug-hash=ObJzra&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ObJzra\" title=\"CodePen Embed ObJzra\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>Nicholas Guest has another CSS lens flare that applies a box shadow on the <code>::before</code> and <code>::after</code> pseudo-elements of a <code>.flare</code> element to get the effect, plus a smidge of jQuery that makes the flare follow the mouse on hover.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_ezzLxP\" src=\"//codepen.io/anon/embed/ezzLxP?height=450&amp;theme-id=1&amp;slug-hash=ezzLxP&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed ezzLxP\" title=\"CodePen Embed ezzLxP\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>This one is made with Canvas and is neat in how the light source follows the mouse on hover while showing how the lens flare artifacts change position as the light source position changes.</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_BabGPw\" src=\"//codepen.io/anon/embed/BabGPw?height=450&amp;theme-id=1&amp;slug-hash=BabGPw&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed BabGPw\" title=\"CodePen Embed BabGPw\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>The same sort of idea here:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_yXJZKN\" src=\"//codepen.io/anon/embed/yXJZKN?height=450&amp;theme-id=1&amp;slug-hash=yXJZKN&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed yXJZKN\" title=\"CodePen Embed yXJZKN\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>And a fun one that uses GSAP, Canvas, and a library called <a href=\"https://github.com/foumart/JS.LensFlare\" rel=\"noopener\">JS.LensFlare</a>:</p>\n\n\n\n<div class=\"wp-block-cp-codepen-gutenberg-embed-block cp_embed_wrapper\"><iframe id=\"cp_embed_OqompQ\" src=\"//codepen.io/anon/embed/OqompQ?height=450&amp;theme-id=1&amp;slug-hash=OqompQ&amp;default-tab=result\" height=\"450\" scrolling=\"no\" frameborder=\"0\" allowfullscreen allowpaymentrequest name=\"CodePen Embed OqompQ\" title=\"CodePen Embed OqompQ\" class=\"cp_embed_iframe\" style=\"width:100%;overflow:hidden\">CodePen Embed Fallback</iframe></div>\n\n\n\n<p>How would you approach a CSS lens flare effect? Share in the comments!</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/\">Add a CSS Lens Flare to Photos for a Bright Touch</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/add-a-css-lens-flare-to-photos-for-a-bright-touch/feed/"
        ],
        "slash:comments": [
            "1"
        ],
        "post-id": [
            {
                "_": "364385",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "I’m a big fan of movies by J.J. Abrams\n[https://en.wikipedia.org/wiki/J._J._Abrams]. I enjoy their tight plots, quippy\ndialog, and of course: anamorphic lens flares. Filmmakers like Abrams use lens\nfl...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Teaching as a Side Hustle for Engineers"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss\"\n              title=\"Teaching as a Side Hustle for Engineers\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9.jpg\"\n        alt=\"Teaching as a Side Hustle for Engineers\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            As a developer, you have a lot of knowledge to offer others. Learn ways to share your skills, boost your status, and make some extra money.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss\">Teaching as a Side Hustle for Engineers</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203240",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Productivity Tools"
        ],
        "dc:creator": [
            "Craig Buckler"
        ],
        "pubDate": [
            "Wed, 01 Sep 2021 02:00:41 GMT"
        ],
        "plainDescription": "Teaching as a Side Hustle for Engineers\n[https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630463978teaching-programming9.jpg]\n[https://www.sitepoint.com/teaching-side-hustle-engineers/?utm_so...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Introducing MySQL: A Beginner’s Guide"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/introducing-mysql-a-beginners-guide/?utm_source=rss\"\n              title=\"Introducing MySQL: A Beginner’s Guide\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction.jpg\"\n        alt=\"Introducing MySQL: A Beginner's Guide\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn what a database is, and how to work with your own databases using Structured Query Language (SQL).\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/introducing-mysql-a-beginners-guide/?utm_source=rss\">Introducing MySQL: A Beginner’s Guide</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/introducing-mysql-a-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=257115",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "PHP",
            "Programming"
        ],
        "dc:creator": [
            "Tom Butler"
        ],
        "pubDate": [
            "Fri, 11 Feb 2022 06:46:26 GMT"
        ],
        "plainDescription": "Introducing MySQL: A Beginner's Guide\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604354mysql-introduction.jpg]\n[https://www.sitepoint.com/introducing-mysql-a-beginners-guide/?utm_so...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Set Up VS Code Remote Development for Free on Amazon EC2"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss\"\n              title=\"How to Set Up VS Code Remote Development for Free on Amazon EC2\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev.gif\"\n        alt=\"Setting Up VS Code Remote Development for Free on Amazon EC2\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-300x170.gif 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-1024x580.gif 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev-768x435.gif 768w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Interested in remote development? Learn how to set up a free tier EC2 instance and connect it to your local Visual Studio Code editor.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss\">How to Set Up VS Code Remote Development for Free on Amazon EC2</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/vs-code-remote-development-amazon-ec2/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203984",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Chisimdiri Ejinkeonye"
        ],
        "pubDate": [
            "Tue, 14 Sep 2021 02:00:27 GMT"
        ],
        "plainDescription": "Setting Up VS Code Remote Development for Free on Amazon EC2\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631578863vscode-remote-dev.gif]\n[https://www.sitepoint.com/vs-code-remote-develo...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "ELK Stack Deployment using MiniKube single node architecture"
        ],
        "dc:creator": [
            "Sagar R Ravkhande"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:10:19 +0000"
        ],
        "link": [
            "https://dev.to/sagary2j/elk-stack-deployment-using-minikube-single-node-architecture-16cl"
        ],
        "guid": [
            "https://dev.to/sagary2j/elk-stack-deployment-using-minikube-single-node-architecture-16cl"
        ],
        "description": [
            "<h2>\n  \n  \n  Minikube Installation\n</h2>\n\n<p>When starting Minikube, you’ll need to allocate some extra firepower as the plan is to deploy a multi-node Elasticsearch cluster.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>minikube start --cpus 4 --memory 8192\n</code></pre>\n\n</div>\n\n\n\n<p>You should see output like this:</p>\n\n<blockquote>\n<p><code>[Output]</code><br>\nYou should see output like this:<br>\nStarting local Kubernetes v1.10.0 cluster...<br>\nStarting VM...<br>\nGetting VM IP address...<br>\nMoving files into cluster...<br>\nSetting up certs...<br>\nConnecting to cluster...<br>\nSetting up kubeconfig...<br>\nStarting cluster components...<br>\nKubectl is now configured to use the cluster.</p>\n</blockquote>\n\n<p>Just to verify your single-node Kubernetes cluster is up and running, use:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>kubectl cluster-info\n</code></pre>\n\n</div>\n\n\n\n<blockquote>\n<p><code>[Output]</code><br>\nKubernetes master is running at https:// 192.168.59.102:8443<br>\nCoreDNS is running at https:// 192.168.59.102:8443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</p>\n</blockquote>\n\n<p>To further debug and diagnose cluster problems, Use:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>kubectl cluster-info dump\n</code></pre>\n\n</div>\n\n\n\n<h2>\n  \n  \n  Deploying Elasticsearch\n</h2>\n\n<p>First up, we need to deploy an Elasticsearch instance into our cluster. Normally, Elasticsearch would require 3 nodes to run within its own cluster. <br>\nHowever, since we are using Minikube to act as a development environment, we will configure Elasticsearch to run in single node mode so that it can run on our single simulated Kubernetes node within Minikube.</p>\n\n<p>So, from the terminal, enter the following command to deploy Elasticsearch into our cluster.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f es-deployment.yaml\n</code></pre>\n\n</div>\n\n\n\n<blockquote>\n</blockquote>\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>deployment.apps/es-logging created<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get deployments\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME READY UP-TO-DATE AVAILABLE AGE<br>\nes-logging 1/1 1 1 3m31s<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get pods\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME READY STATUS RESTARTS AGE<br>\nes-logging-5744d89fb9-xhbq7 1/1 Running 0 4m28s</p>\n</blockquote>\n\n<p>For more information on the status of the Deployment or Pod, use the kubectl describe or kubectl logs commands:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>$ kubectl describe deployment es-logging\n$ kubectl describe pod es-logging-5744d89fb9-xhbq7\n$ kubectl logs –f deployments/es-logging\n</code></pre>\n\n</div>\n\n\n\n<h2>\n  \n  \n  Exposing Elasticsearch\n</h2>\n\n<p>Now that we have Elasticsearch running in our cluster, we need to expose it so that we can connect other services to it. To briefly explain, this will allow us to expose our Elasticsearch Deployment resource through a Service that will give us the ability to access our Elasticsearch HTTP API from other resources (namely Logstash and Kibana). </p>\n\n<p>Run the following command to expose our Deployment:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f es-svc.yaml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>service/es-service created</p>\n</blockquote>\n\n<p>This will have created a Kubernetes Service resource that exposes the port 9200 from our Elasticsearch Deployment resource, Elasticsearch’s HTTP port. This port will now be accessible through a port assigned in the cluster. To see this Service and the external port that has been assigned, run the following command:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get svc\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE<br>\nes-service NodePort 10.97.114.162  9200:32375/TCP 6s<br>\nkubernetes ClusterIP 10.96.0.1  443/TCP 54m<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;minikube service es-service\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>|-----------|------------|-------------|-----------------------------|<br>\n| NAMESPACE | NAME | TARGET PORT | URL |<br>\n|-----------|------------|-------------|-----------------------------|<br>\n| default | es-service | 9200 | <a href=\"http://192.168.59.102:32375\">http://192.168.59.102:32375</a> |<br>\n|-----------|------------|-------------|-----------------------------|</p>\n\n<ul>\n<li>Opening service default/es-service in default browser...</li>\n</ul>\n</blockquote>\n\n<p>To get Minikube IP:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;minikube ip\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>192.168.59.102</p>\n</blockquote>\n\n<p>As you can see, our Elasticsearch HTTP port has been mapped to external port 32375. Since we are running through Minikube, the external port will be for that virtual machine, so we will use the Minikube IP address and external port to check that our setup is working correctly.</p>\n\n<p><code>[Browser Output]</code></p>\n\n<blockquote>\n<p>{<br>\n\"name\" : \"es-logging-5744d89fb9-xhbq7\",<br>\n\"cluster_name\" : \"docker-cluster\",<br>\n\"cluster_uuid\" : \"XKT9bYwCR1CencccW6JggQ\",<br>\n\"version\" : {<br>\n  \"number\" : \"7.8.0\",<br>\n  \"build_flavor\" : \"default\",<br>\n  \"build_type\" : \"docker\",<br>\n  \"build_hash\" : \"757314695644ea9a1dc2fecd26d1a43856725e65\",<br>\n  \"build_date\" : \"2020-06-14T19:35:50.234439Z\",<br>\n  \"build_snapshot\" : false,<br>\n  \"lucene_version\" : \"8.5.1\",<br>\n  \"minimum_wire_compatibility_version\" : \"6.8.0\",<br>\n  \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"<br>\n  },<br>\n\"tagline\" : \"You Know, for Search\"<br>\n}</p>\n</blockquote>\n\n<p>To check health point setup for liveness and readiness probes, Run:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>http://192.168.59.102:32375/_cluster/health\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>{\"cluster_name\":\"docker-cluster\",\"status\":\"green\",\"timed_out\":false,\"number_of_nodes\":1,\"number_of_data_nodes\":1,\"active_primary_shards\":0,\"active_shards\":0,\"relocating_shards\":0,\"initializing_shards\":0,\"unassigned_shards\":0,\"delayed_unassigned_shards\":0,\"number_of_pending_tasks\":0,\"number_of_in_flight_fetch\":0,\"task_max_waiting_in_queue_millis\":0,\"active_shards_percent_as_number\":100.0}</p>\n</blockquote>\n\n<h2>\n  \n  \n  Deploying Kibana\n</h2>\n\n<p>Now that we have an Elasticsearch instance running and accessible via the Minikube IP and assigned port number, we will spin up a Kibana instance and connect it to Elasticsearch. We will do this in the same way we have setup Elasticsearch: creating another Kubernetes Deployment resource.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f kibana-deployment.yaml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>deployment.apps/kibana-logging created<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get deployment kibana-logging\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME READY UP-TO-DATE AVAILABLE AGE<br>\nkibana-logging 1/1 1 1 70s</p>\n</blockquote>\n\n<p>Like with the Elasticsearch instance, our Kibana instance isn’t going to work straight away. The reason for this is that it doesn’t know where the Elasticsearch instance is running. By default, it will be trying to connect using the URL <a href=\"http://elasticsearch:9200\">http://elasticsearch:9200</a>. You can see this by checking in the logs for the Kibana pod.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get pods\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME READY STATUS RESTARTS AGE<br>\nes-logging-5744d89fb9-xhbq7 1/1 Running 0 33m<br>\nkibana-logging-5dc77584cc-7jfnt 1/1 Running 0 2m13s<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl logs kibana-logging-5dc77584cc-7jfnt\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]<br>\n</code></p>\n\n<blockquote>\n<p>{\"type\":\"log\",\"@timestamp\":\"2022-03-28T10:15:18Z\",\"tags\":[\"warning\",\"elasticsearch\",\"admin\"],\"pid\":11,\"message\":\"Unable to revive connection: <a href=\"http://elasticsearch:9200/%22\">http://elasticsearch:9200/\"</a>}</p>\n</blockquote>\n\n<p>The URL of the Elasticsearch instance is defined via an environment variable in the Kibana Docker Image, just like the mode for Elasticsearch. However, the actual key of the variable is ELASTICSEARCH_HOSTS, which contains all valid characters to use the kubectl command for changing an environment variable in a Deployment resource. Since we now know we can access Elasticsearch’s HTTP port via the host mapped port 32375 on the Minikube IP, we can update Kibana to point to the Elasticsearch instance.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;minikube ip\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>192.168.59.102</p>\n</blockquote>\n\n<p>Then, set environment variable using below command<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>kubectl set env deployments/kibana-logging ELASTICSEARCH_HOSTS=http://$(minikube ip):elasticsearch-Node-port\n</code></pre>\n\n</div>\n\n\n\n<p>for e.g<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl set env deployments/kibana-logging ELASTICSEARCH_HOSTS=http://192.168.59.102:32375\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>deployment.apps/kibana-logging env updated</p>\n</blockquote>\n\n<p>Note: We don’t need to use the Minikube IP to allow our components to talk to each other. Because they are living within the same Kubernetes cluster, we can use the Cluster IP assigned to each Service resource (run kubectl get services to see what the Cluster IP addresses are). This is particularly useful if your setup returns the localhost IP address for your Minikube installation. In this case, you will not need to use the Node Port, but instead use the actual container port.</p>\n\n<p>This will trigger a change in the deployment, which will result in the existing Kibana Pod being terminated, and a new Pod (with the new environment variable value) being spun up. If you run kubectl get pods again, you should be able to see this new Pod now. Again, if we check the logs of the new Pod, we should see that it has successfully connected to the Elasticsearch instance and is now hosting the web UI on port 5601.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl logs -f pod/kibana-logging-59d555748b-mg76x\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>{\"type\":\"log\",\"@timestamp\":\"2022-03-28T10:51:14Z\",\"tags\":[\"listening\",\"info\"],\"pid\":9,\"message\":\"Server running at <a href=\"http://0:5601%22\">http://0:5601\"</a>}<br>\n{\"type\":\"log\",\"@timestamp\":\"2022-03-28T10:51:15Z\",\"tags\":[\"info\",\"http\",\"server\",\"Kibana\"],\"pid\":9,\"message\":\"http server running at <a href=\"http://0:5601%22\">http://0:5601\"</a>}</p>\n</blockquote>\n\n<h2>\n  \n  \n  Accessing the Kibana UI\n</h2>\n\n<p>Now that we have Kibana running and communicating with Elasticsearch, we need to access the web UI to allow us to configure and view logs. We have already seen that it is running on port 5601, but like with the Elasticsearch HTTP port, this is internal to the container running inside of the Pod. As such, we need to also expose this Deployment resource via a Service.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f kibana-svc.yaml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>service/kibana-service created<br>\nWe should now be able to view the web UI using the same Minikube IP as before and the newly mapped port. Look at the new service to get the mapped port.<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get services\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE<br>\nes-service NodePort 10.97.114.162  9200:32375/TCP 32m<br>\nkibana-logging NodePort 10.105.131.15  5601:32457/TCP 8s<br>\nkubernetes ClusterIP 10.96.0.1  443/TCP 87m<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;minikube service kibana-service\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>|-----------|----------------|-------------|-----------------------------|<br>\n| NAMESPACE | NAME | TARGET PORT | URL |<br>\n|-----------|----------------|-------------|-----------------------------|<br>\n| default | kibana-service | 5601 | <a href=\"http://192.168.59.102:32417\">http://192.168.59.102:32417</a> |<br>\n|-----------|----------------|-------------|-----------------------------|</p>\n\n<ul>\n<li>Opening service default/kibana-logging in default browser...\nNow navigate in the browser to the URL: “<a href=\"http://192.168.59.102:32417/status%E2%80%9D\">http://192.168.59.102:32417/status”</a> to check that the web UI is running and Elasticsearch is connected properly.</li>\n</ul>\n</blockquote>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--We-T4itb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzu29t8lrqucc7jadsbq.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--We-T4itb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qzu29t8lrqucc7jadsbq.png\" alt=\"Kibana-Server-UI\" width=\"880\" height=\"621\"></a></p>\n\n<h2>\n  \n  \n  Deploying Logstash\n</h2>\n\n<p>The next step is to get Logstash running within our setup. Logstash will operate as the tool that will collect logs from our application and send them through to Elasticsearch. It provides various benefits for filtering and re-formatting log messages, as well as collecting from various sources and outputting to various destinations. For this tutorial, we are only interested in using it as a pass-through log collector and forwarder.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AsugAasC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9hq4frrw6hyvljd3ec4.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--AsugAasC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i9hq4frrw6hyvljd3ec4.png\" alt=\"logstash-arch\" width=\"880\" height=\"466\"></a></p>\n\n<p>In the above diagram, you can see our desired setup. We are aiming to deploy a Logstash container into a new Pod. This container will be configured to listen on port 5044 for log entries being sent from a Filebeat application (more on this later). Those log messages will then be forwarded straight onto our Elasticsearch instance that we setup earlier, via the HTTP port that we have exposed.</p>\n\n<p>To achieve this setup, we are going to have to leverage the Kubernetes YAML files. This is a more verbose way of creating deployments and can be used to describe various resources (such as Deployments, Services, etc.) and create them through a single command. The reason we need to use this here is that we need to configure a volume for our Logstash container to access, which is not possible through the CLI commands. Similarly, we could have also used this approach to reduce the number of steps required for the earlier setup of Elasticsearch and Kibana; namely the configuration of environment variables and separate steps to create Service resources to expose the ports into the containers.</p>\n\n<p>Create a file called logstash.conf and enter the following:</p>\n\n<p><code>Note: Please update the minikube_ip:elasticsearch-nodeport</code><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>input {\nbeats {\nport =&gt; \"5044\"\n}\n}\noutput {\nelasticsearch {\nhosts =&gt; [\"http://192.168.99.102:30445\"]\nindex =&gt; \"%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}\"\n}\nstdout {\ncodec =&gt; rubydebug\n}\n}\n</code></pre>\n\n</div>\n\n\n\n<p>Next, we need to create a new file called deployment.yml. Enter the following Kubernetes Deployment resource YAML contents to describe our Logstash Deployment.</p>\n\n<p>we need to create this ConfigMap. This volume will contain the logstash.conf file we have created, which will be mapped to the pipeline configuration folder within the Logstash container. This will be used to configure our required pass-through pipeline. So, run the following command:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create configmap log-manual-pipeline --from-file ./logstash.conf\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>configmap/log-manual-pipeline created</p>\n</blockquote>\n\n<p>We can now create the Deployment resource from our logstash-deployment.yml file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f logstash-deployment.yml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>deployment.apps/logstash-logging created</p>\n</blockquote>\n\n<p>Note: You may notice errors stating there are “No Available Connections” to the Elasticsearch instance endpoint with the URL <a href=\"http://elasticsearch:9200/\">http://elasticsearch:9200/</a>. This comes from some default configuration within the Docker Image, but does not affect our pipeline, so can be ignored in this case.</p>\n\n<h2>\n  \n  \n  Expose the Logstash Filebeats port\n</h2>\n\n<p>Now that Logstash is running and listening on container port 5044 for Filebeats log message entries, we need to make sure this port is mapped through to the host so that we can configure a Filebeats instance in the next section. To achieve this, we need another Service resource to expose the port on the Minikube host. We could have done this inside the same deployment.yml file, but it’s worth using the same approach as before to show how the resource descriptor and CLI commands can be used in conjunction.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f logstash-svc.yml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>service/logstash-service created<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl get svc\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE<br>\nes-service NodePort 10.97.114.162  9200:32375/TCP 74m<br>\nkibana-service NodePort 10.105.131.15  5601:32457/TCP 15m<br>\nkubernetes ClusterIP 10.96.0.1  443/TCP 129m<br>\nlogstash-service NodePort 10.110.161.161  5044:31810/TCP 13s</p>\n</blockquote>\n\n<p>As you can see, the container port 5044 has been mapped to port 31810 on the host. Now we can move onto the final step: configuring our application and a Sidecar Filebeats container to pump out log messages to be routed through our Logstash instance into Elasticsearch.</p>\n\n<h2>\n  \n  \n  Application Deployment\n</h2>\n\n<p>There are several different ways we could structure this, but the approach I am going to walk through is by deploying both our application and the Filebeat instance as separate containers within the same Pod. We will then use a Kubernetes volume known as an Empty Directory to share access to the log file that the application will write to and Filebeats will read from. The reason for using this type of volume is that its lifecycle will be directly linked to the Pod. If you wish to persist the log data outside of the Pod, so that if the Pod is terminated and re-created the volume remains, then I would suggest looking at another volume type, such as the Local volume.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NT3KsUtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urxikqldgkpz4q11rm92.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--NT3KsUtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urxikqldgkpz4q11rm92.png\" alt=\"elk-app-deployment\" width=\"880\" height=\"745\"></a></p>\n\n<p>To begin with, we are going to create the configuration file for the Filebeats instance to use. Create a file named filebeat.yml and enter the following contents.</p>\n\n<p><code>Note: Please update the minikube_ip:logstash-nodeport</code><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>filebeat.inputs:\n- type: log\npaths:\n- /tmp/output.log\noutput:\nlogstash:\nhosts: [ \"192.168.99.102:31010\" ]\n</code></pre>\n\n</div>\n\n\n\n<p>This will tell Filebeat to monitor the file /tmp/output.log (which will be located within the shared volume) and then output all log messages to our Logstash instance (notice how we have used the IP address and port number for Minikube here).</p>\n\n<p>Now we need to create a ConfigMap volume from this file.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create configmap beat-manual-config --from-file ./filebeat.yml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>configmap/beat-manual-config created</p>\n</blockquote>\n\n<p>Next, we need to create our Pod with the double container setup. For this, like the last section, we are going to create a app-deployment.yml file.</p>\n\n<p>To create this Deployment resource, run the following command:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;kubectl create -f app-deployment.yml\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>deployment.apps/logging-app-manual created</p>\n</blockquote>\n\n<p>Both containers will share a folder mapped to the /tmp path, which is where the log file will be written to and read from. The Filebeat container will also use the ConfigMap volume that we have just created, which we have specified for the Filebeat instance to read the configuration file from; overwriting the default configuration.</p>\n\n<p>You will also notice that our application container is using the Docker Image sladesoftware/log-application:latest. This is a simple Docker Image that builds on an Alpine Linux image and runs an infinite loop command that appends a small JSON object to the output file every few seconds.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>C:\\Helm&gt;minikube service kibana-service\n</code></pre>\n\n</div>\n\n\n\n<p><code>[Output]</code></p>\n\n<blockquote>\n<p>|-----------|----------------|-------------|-----------------------------|<br>\n| NAMESPACE | NAME | TARGET PORT | URL |<br>\n|-----------|----------------|-------------|-----------------------------|<br>\n| default | kibana-service | 5601 | <a href=\"http://192.168.59.102:32457\">http://192.168.59.102:32457</a> |<br>\n|-----------|----------------|-------------|-----------------------------|</p>\n\n<ul>\n<li>Opening service default/kibana-service in default browser...\nYou should now be able to browse to the Kibana dashboard in your web browser to view the logs coming in. Make sure you first create an Index Pattern to read these logs – you should need a format like filebeat*.</li>\n</ul>\n</blockquote>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Rh8qU3xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hg4gtd0zlb9g92xxbnz.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--Rh8qU3xX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8hg4gtd0zlb9g92xxbnz.png\" alt=\"app-elk\" width=\"880\" height=\"404\"></a></p>\n\n<p>Once you have created this Index Pattern, you should be able to view the log messages as they come into Elasticsearch over on the Discover page of Kibana.</p>\n\n"
        ],
        "category": [
            "kubernetes",
            "minikube",
            "container",
            "elk"
        ],
        "plainDescription": "MINIKUBE INSTALLATION\n\nWhen starting Minikube, you’ll need to allocate some extra firepower as the plan\nis to deploy a multi-node Elasticsearch cluster.\n\n\nminikube start --cpus 4 --memory 8192\n\n\nYou s...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "The Best Figma Plugins: 50+ Workflow Superchargers"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss\"\n              title=\"The Best Figma Plugins: 50+ Workflow Superchargers\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design.jpg\"\n        alt=\"Designers at work - Best Figma Plugins\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-1024x539.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-768x404.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design-1536x808.jpg 1536w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design.jpg 1900w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Too many Figma plugins to choose from? Supercharge your design workflow with our picks for the best Figma plugins.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss\">The Best Figma Plugins: 50+ Workflow Superchargers</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256019",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Design",
            "Design & UX"
        ],
        "dc:creator": [
            "George George"
        ],
        "pubDate": [
            "Wed, 19 Jan 2022 19:17:43 GMT"
        ],
        "plainDescription": "Designers at work - Best Figma Plugins\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1642648108design.jpg]\n[https://www.sitepoint.com/figma-plugins-optimize-workflow/?utm_source=rss] Too\nm...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Ekene Eze"
        ],
        "title": [
            "Jamstack Rendering Patterns: The Evolution"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/jamstack-rendering-patterns-evolution/"
        ],
        "pubDate": [
            "Tue, 19 Apr 2022 09:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/jamstack-rendering-patterns-evolution/"
        ],
        "description": [
            "In this article, Ekene Eze shares his thoughts about the direction of the web in 2022, and what solutions we can expect to see come up in the ecosystem to significantly improve the Jamstack experience."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/jamstack-rendering-patterns-evolution/\" />\n              <title>Jamstack Rendering Patterns: The Evolution</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Jamstack Rendering Patterns: The Evolution</h1>\n                  \n                    \n                    <address>Ekene Eze</address>\n                  \n                  <time datetime=\"2022-04-19T09:00:00&#43;00:00\" class=\"op-published\">2022-04-19T09:00:00+00:00</time>\n                  <time datetime=\"2022-04-19T09:00:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>In the early days of the Jamstack, developers mostly used it for static sites and opt for a more verbose frontend framework like Vue and React when they need to perform more sophisticated operations like server-side rendering in web applications. The need for adding dynamic functionalities to web apps never went away, but it didn’t make us appreciate Jamstack any less. We loved what it proposed and the value it provided. Web pages are instantly available to users, and developers could build websites easily and deploy them faster. Users are happy, developers are happy; it’s a win-win.</p>\n\n<p>Then came static site generators which made things better by adding a build process to the previous flow of a static site which meant that all the site’s assets were all pre-generated by a build server (not on a local machine) and then deployed. This was a step forward in improving the developer experience of Jamstack developers and consequently the popularity of this model. Developers could build Jamstack sites with a static site generator like <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>, push the project to a version control system like <a href=\"https://www.github.com/\">Github</a>, and deploy to a hosting service like <a href=\"https://www.netlify.com/\">Netlify</a> which provides a workflow that will rebuild the site when there’s an update to the project.</p>\n\n<p>Everything seemed great, and we were all better for it.</p>\n\n<p>But like every other technology, Jamstack started evolving as the need for more sophisticated functionalities continued to grow. As a “static site”, a Jamstack site was limited in the things it could do, and people did not keep quiet about it. Suddenly, it seemed like Jamstack was an incomplete model that could not be used at scale. The concerns raised were mostly around the inability to perform server-side operations and the length of build times in larger Jamstack sites. This didn’t sit well within the Jamstack community, and we started to “extend” the Jamstack to solve this new challenge, which it was not originally meant to solve.</p>\n\n<h2 id=\"dynamic-functionalities-in-the-jamstack\">Dynamic Functionalities In The Jamstack</h2>\n\n<p>While Gatsby made a lot of advancements in how we build and update Jamstack sites with features like incremental builds, Next.js introduced server-side rendering with <code>getServerSideProps()</code>:</p>\n\n<pre><code class=\"language-javascript\">function Page({ data }) {\n  // Render data...\n}\n\n// This gets called on every request\nexport async function getServerSideProps() {\n  const res = await fetch(`https://.../data`)\n  const data = await res.json()\n\n  // Pass data to the page via props\n  return { props: { data } }\n}\n\nexport default Page</code></pre>\n\n<p>While also maintaining the good-old static generation with <code>getStaticProps()</code>:</p>\n\n<pre><code class=\"language-javascript\">// posts will be populated at build time by getStaticProps()\nfunction Blog({ posts }) {\n  return (\n    &lt;ul&gt;\n      {posts.map((post) =&gt; (\n        &lt;li&gt;{post.title}&lt;/li&gt;))}\n    &lt;/ul&gt;)\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://.../posts')\n  const posts = await res.json(\n  return {\n    props: {\n      posts,\n    },\n  }\n}\n\nexport default Blog</code></pre>\n\n<p>This gave developers the idea of a hybrid approach to building Jamstack sites. Suddenly, you could build Jamstack sites that could render different pages with different rendering patterns. For instance, your <code>/about</code> page could be statically generated while your <code>/cart</code> page is server-side rendered.  However, the issue of long build times remained. But not for long.</p>\n\n<p>With <a href=\"https://nextjs.org/docs/basic-features/data-fetching/incremental-static-regeneration\">Incremental Static Regeneration (ISR)</a>, Next.js also made it possible for pages to be generated on demand and cached for subsequent requests. This meant that developers could have a site with 10,000 pages and only generate 100 pages at build time. All other pages will be dynamically generated on-demand and cached for subsequent requests, effectively bringing the concern about long-running build times to bay.</p>\n\n<pre><code class=\"language-javascript\">function Blog({ posts }) {\n  return (\n    &lt;ul&gt;\n      {posts.map((post) =&gt; (\n        &lt;li key={post.id}&gt;{post.title}&lt;/li&gt;))}\n    &lt;/ul&gt;)\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://.../posts')\n  const posts = await res.json()\n\n  return {\n    props: {\n      posts,\n    },\n    revalidate: 10, // In seconds\n  }\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch('https://.../posts', {limit: 100})\n  const posts = await res.json()\n\n  // Get the paths we want to pre-render based on posts\n  const paths = posts.map((post) =&gt; ({\n    params: { id: post.id },\n  }))\n\n  return { paths, fallback: 'blocking' }\n}\n\nexport default Blog</code></pre>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/touch-design-for-mobile-interfaces/\">Touch Design for Mobile Interfaces</a></strong>, Steven Hoober’s brand-new guide on <strong>designing for mobile</strong> with proven, universal, human-centric guidelines. <strong>400 pages</strong>, jam-packed with in-depth user research and <strong>best practices</strong>.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/touch-design-for-mobile-interfaces/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/14bcab88-b622-47f6-a51d-76b0aa003597/touch-design-book-shop-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/b14658fc-bb2d-41a6-8d1a-70eaaf1b8ec8/touch-design-book-shop-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"distributed-persistent-rendering-dpr\">Distributed Persistent Rendering (DPR)</h2>\n\n<p>In April 2021, Netlify announced a new rendering pattern called <a href=\"https://www.netlify.com/blog/2021/04/14/distributed-persistent-rendering-a-new-jamstack-approach-for-faster-builds/\">Distributed Persistent Rendering</a>. The idea was to remove the revalidation bit of ISR and make any page that is rendered after the initial build a permanent part of that build. No revalidation. If you want to re-render that page in the future, you will need to trigger a new build. According to the <a href=\"https://www.netlify.com/blog/2021/04/14/distributed-persistent-rendering-a-new-jamstack-approach-for-faster-builds/\">announcement post</a>, this pattern will not compromise the Jamstack principle of immutable atomic deploys.</p>\n\n<p>Along with the DPR announcement, Netlify also launched <a href=\"https://docs.netlify.com/configure-builds/on-demand-builders/\">on-demand builders</a> &mdash; A special type of serverless function that generates content on-demand, caches it at the edge, and works across all frameworks. This brought ISR-like capabilities to every other static site generator and meta-framework.</p>\n\n<pre><code class=\"language-javascript\">const { builder } = require('@netlify/functions');\nasync function myfunction(event, context) {\n   // logic to generate the required content\n}\n\nexports.handler = builder(myfunction);</code></pre>\n\n<p>This opened up more opportunities for static site generators like Gatsby to get in on this pattern of delivering web pages with their own adaptation of the concept called Deferred Static Generation (DSG). Eleventy also released the <a href=\"https://www.11ty.dev/docs/plugins/serverless/\">Eleventy Serverless plugin</a> that builds off of the DPR concept to support this rendering pattern for developers.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"deferred-static-generation-dsg\">Deferred Static Generation (DSG)</h2>\n\n<p>As mentioned, Gatsby adapted the DPR concept to create a custom <a href=\"https://www.gatsbyjs.com/docs/how-to/rendering-options/using-deferred-static-generation/\">DSG rendering pattern</a> that allows developers to defer non-critical pages and only generate necessary content at build time. Like with ISR, the deferred pages are generated on demand and cached. All subsequent requests for those pages are then served from the cache.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">// The rest of your page, including imports, page component & page query etc.\n\nexport async function config() {\n  // Optionally use GraphQL here\n\n  return ({ params }) =&gt; {\n    return {\n      defer: true,\n    }\n  }\n}</code></pre>\n</div>\n\n<p>The goal of this post is to take a look at the evolution of the Jamstack rendering patterns, where we started, and where we are. At the moment, we’ve come very far from where we started, and for good reason. But personally, I’m thinking, should we have stuck with the initial idea of a Jamstack site? One where we didn’t need to worry about dynamic functionalities. It is 2022, and there’s a lot of nuance around the differences between a Jamstack site and a regular React app.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"in-summary\">In Summary</h2>\n\n<p>Jamstack has metamorphosed from simply generating and deploying static assets to handling highly dynamic functionalities with advanced rendering patterns and serverless functions.</p>\n\n<p>Yes, there have been advancements in the Jamstack rendering patterns, and it has continued to improve to date. But these improvements consequently added more complexity to an otherwise simple process. In continuing to extend the Jamstack to account for more uses cases, we run the risk of overcomplicating it.</p>\n\n<p>But like in every other space, we expect to see continued improvements. 2021 saw the emergence and dominance of meta frameworks like <a href=\"https://astro.build/\">Astro</a>, <a href=\"https://slinkity.dev/\">Slinkity</a>, and <a href=\"https://remix.run/\">Remix</a> &mdash; all trying to ship less JavaScript to the browser.</p>\n\n<p>This seems to be the direction the web is taking in 2022, and we expect to see more solutions come up in the ecosystem to significantly improve the Jamstack experience. The emergence of React Server Components in React, Vite as a faster alternative for Webpack and Babel, Edge computing used by the likes of Remix, HTML Streaming, and so on, are all promising solutions that are continuing to gain popularity and adoption. And we can only surmise that things will get better and more interesting, as these technologies penetrate the existing web infrastructure. Safe to say that the best days of the Jamstack are still ahead of us.</p>\n\n<p>The modern web trending practice for building highly optimized sites is shipping less JavaScript. This is where technologies like Remix claim dominance. It is interesting to watch how the Jamstack space continues to evolve, and I’m personally looking forward to what the next step will be.</p>\n\n<p>If you’re building a Jamstack site today, here are the rendering patterns currently available to you:</p>\n\n<ul>\n<li><strong>Static Generation</strong><br />\nPages are rendered once at build time.</li>\n<li><strong>Server-Side Rendering</strong><br />\nPages are generated on a per-request basis.</li>\n<li><strong>Deferred Rendering (ISR/DPR/DSG)</strong><br />\nCritical pages are generated first at build time, and non-critical pages are generated on demand and cached.</li>\n</ul>\n\n<h3 id=\"further-reading-on-smashing-magazine\">Further Reading on Smashing Magazine</h3>\n\n<ul>\n<li><a href=\"https://www.smashingmagazine.com/2021/04/incremental-static-regeneration-nextjs/\">A Complete Guide To ISR With Next.js</a>, Lee Robinson</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/08/history-future-jamstack-cms/\">Jamstack CMS: The Past, The Present and The Future</a>, Mike Neumegen</li>\n<li><a href=\"https://www.smashingmagazine.com/2021/09/interactive-learning-tools-front-end-developers/\">Interactive Learning Tools For Front-End Developers</a>, Louis Lazaris</li>\n<li><a href=\"https://www.smashingmagazine.com/2020/02/headless-wordpress-site-jamstack/\">How To Create A Headless WordPress Site On The JAMstack</a>, Sarah Drasner &amp; Geoff Graham</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il, yk)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "In this article, Ekene Eze shares his thoughts about the direction of the web in\n2022, and what solutions we can expect to see come up in the ecosystem to\nsignificantly improve the Jamstack experience...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "The Ultimate Guide to 3xx HTTP Status Codes"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss\"\n              title=\"The Ultimate Guide to 3xx HTTP Status Codes\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes.jpg\"\n        alt=\"The Ultimate Guide to 3xx HTTP Status Codes\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Need to redirect a URL temporarily or permanently? Learn how 3xx HTTP status codes work, how to pick the best one, and how each affects SEO.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss\">The Ultimate Guide to 3xx HTTP Status Codes</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/3xx-http-status-codes-ultimate-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207282",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Alina Tytarenko"
        ],
        "pubDate": [
            "Wed, 13 Oct 2021 02:00:57 GMT"
        ],
        "plainDescription": "The Ultimate Guide to 3xx HTTP Status Codes\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/16340054783xx-http-status-codes.jpg]\n[https://www.sitepoint.com/3xx-http-status-codes-ultimate-gui...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Write Good Code: 10 Beginner-friendly Techniques for Instant Results"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/how-to-write-good-code/?utm_source=rss\"\n              title=\"How to Write Good Code: 10 Beginner-friendly Techniques for Instant Results\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge.jpg\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            In order to write good code, you need to have a strong understanding of the basics. This guide provides ten helpful techniques that will get you started on the right foot.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/how-to-write-good-code/?utm_source=rss\">How to Write Good Code: 10 Beginner-friendly Techniques for Instant Results</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/how-to-write-good-code/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259888",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Wed, 13 Apr 2022 21:57:33 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1649912040knowledge.jpg]\n[https://www.sitepoint.com/how-to-write-good-code/?utm_source=rss] In order to\nwrite good code, you need to have a st...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Create Your Own Brag Document with Zapier and Google Sheets"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss\"\n              title=\"Create Your Own Brag Document with Zapier and Google Sheets\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document.jpg\"\n        alt=\"Create Your Own Brag Document with Zapier and Google Sheets\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to use Google Drive and Zapier to create a brag document that tracks your work and helps to optimize your workflow and working life.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss\">Create Your Own Brag Document with Zapier and Google Sheets</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-your-own-brag-document-with-zapier-and-google-sheets/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207676",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Low Code"
        ],
        "dc:creator": [
            "Craig Dennis"
        ],
        "pubDate": [
            "Tue, 02 Nov 2021 02:00:17 GMT"
        ],
        "plainDescription": "Create Your Own Brag Document with Zapier and Google Sheets\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1635817369brag-document.jpg]\n[https://www.sitepoint.com/create-your-own-brag-docum...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #502"
        ],
        "link": [
            "https://css-weekly.com/issue-502/"
        ],
        "pubDate": [
            "Thu, 28 Apr 2022 13:19:52 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-502/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to build a combined CSS aspect ratio grid, interesting hover effects using CSS background properties, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://9elements.com/blog/combined-aspect-ratio-grid/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building a Combined CSS-Aspect-Ratio-Grid</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://9elements.com/blog/combined-aspect-ratio-grid/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/combined-aspect-ratio-grid.jpg\" alt=\"Building a Combined CSS-Aspect-Ratio-Grid\" /></a>\n\t\t\t\t\t\t<p>Nils Binder shows how to build a layout that consists of several rows where each row has two images with a fixed aspect ratio.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://9elements.com/blog/combined-aspect-ratio-grid/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/cool-hover-effects-using-background-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Cool Hover Effects That Use Background Properties</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/cool-hover-effects-using-background-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/cool-hover-effects-using-background-properties.png\" alt=\"Cool Hover Effects That Use Background Properties\" /></a>\n\t\t\t\t\t\t<p>Temani Afif demonstrates how to create interesting hover effects using CSS background properties.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/cool-hover-effects-using-background-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/debuggingcss\">Master the Skill of Debugging CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/debuggingcss\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/debuggingcss.jpg\" alt=\"Master the Skill of Debugging CSS\" /></a>\n\t\t\t\t\t\t<p>A fantastic book by Ahmad Shadeed full of tips and techniques on how to debug CSS. It will help you significantly improve your CSS debugging skills.</p>\n<p>Use the coupon code “<strong>cssweekly</strong>” at checkout to get a 15% discount.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/debuggingcss\">Learn More</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://www.youtube.com/c/CSSWeekly\" target=\"_blank\">From Our YouTube Channel</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/tStiWGcnkWI?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A Practical Guide to Aspect Ratio in CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://youtu.be/tStiWGcnkWI?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/a-practical-guide-to-aspect-ratio-in-css2.jpg\" alt=\"A Practical Guide to Aspect Ratio in CSS\" /></a>\n\t\t\t\t\t\t<p>A practical, hands-on guide to using aspect ratio in CSS where I explain how to maintain the proportional dimensions of an element without resorting to a padding hack.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/tStiWGcnkWI?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/04/what-if-sliders-actually-slid-html-element-input-range/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">What If Our Sliders Actually Slid?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Jhey Tompkins explores putting an impractical whimsical spin on a well-known native element range input element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/04/what-if-sliders-actually-slid-html-element-input-range/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://webkit.org/blog/12578/non-interactive-elements-with-the-inert-attribute/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Non-Interactive Elements With the Inert Attribute</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Tim Nguyen explains how the inert attribute provides an efficient way to hide elements from assistive technology.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://webkit.org/blog/12578/non-interactive-elements-with-the-inert-attribute/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://medium.com/onfido-tech/evaluating-design-system-adoption-using-custom-css-a46026853308?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Evaluating Design System Adoption Using Custom CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Steve Dennis shares how the Castor design system team uses custom user CSS to easily audit component and design token usage in live products.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://medium.com/onfido-tech/evaluating-design-system-adoption-using-custom-css-a46026853308?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2022/04/22/progressive-enhancement-and-html-forms-use-formdata/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Progressive Enhancement and HTML Forms: use FormData</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bramus Van Damme shows how to apply progressive enhancement to forms using the <code>FormData</code> interface.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2022/04/22/progressive-enhancement-and-html-forms-use-formdata/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://daverupert.com/2022/04/my-weekly-engineering-report/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">My Weekly Engineering Report</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A fantastic advice by Dave Rupert: <em>“Proactively communicate as succinctly as possible what you’re working on, what problems you ran into, and what you’re working on next.”</em></p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://daverupert.com/2022/04/my-weekly-engineering-report/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/btconf\">beyond tellerrand in Düsseldorf 2022</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/btconf\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/btconf.jpg\" alt=\"beyond tellerrand in Düsseldorf 2022\" /></a>\n\t\t\t\t\t\t<p>Have you heard that #btconf is back in town? In Düsseldorf. Next week. Only 83 tickets left. Better late than not at all! Join us for a great line-up, two enjoyable, exciting and inspiring days with nice people and don’t miss the fun. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/btconf\">Grab a spot now!</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://uiball.com/loaders/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Loaders</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A collection of loaders and spinners for your next project built with HTML, CSS, and SVG.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://uiball.com/loaders/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.fluid-type-scale.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Fluid Type Scale Calculator</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>An online tool to generate font size variables for a fluid type scale with CSS clamp.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.fluid-type-scale.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/davidkpiano/pen/gOoNZNe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Linear-Style Cursor Glow</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/davidkpiano/pen/gOoNZNe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/linear-style-cursor-glow.jpg\" alt=\"Linear-Style Cursor Glow\" /></a>\n\t\t\t\t\t\t<p>David Khourshid created an impressive, interactive demo using CSS and a bit of JavaScript.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/davidkpiano/pen/gOoNZNe?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how to build a combined CSS aspect ratio grid, interesting hover effects\nusing CSS background properties, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Small tip to shrink your Docker images size"
        ],
        "dc:creator": [
            "Christian"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:59:12 +0000"
        ],
        "link": [
            "https://dev.to/a_chris/small-tip-to-shrink-your-docker-images-size-57i5"
        ],
        "guid": [
            "https://dev.to/a_chris/small-tip-to-shrink-your-docker-images-size-57i5"
        ],
        "description": [
            "<p>Hi everyone, first post on dev.to, I whish to be more active in the future!</p>\n\n<p>Today I want to explain a small tip I recently fond out to reduce the Docker images size, in my case I was able to shrink the size by half!</p>\n\n<p>Let's assume that you are working with a language like Ruby or Python, even if these languages are not compiled they often need some system libraries to work properly, in particular if you are working with databases (MySQL, SQLite, Postgres) you need to compile the gem or the library for the specific architecture of your machine.</p>\n\n<p>In my case I'm working with Ruby and I'm trying to install the SQLite gem that, unfortunately, requires the <code>build-base</code> system library.</p>\n\n<p>Here is the project I'm working on:<br>\n<a href=\"https://github.com/a-chris/faenz\">Faenz Analytics</a></p>\n\n<p>So I thought to install it, compile the SQLite gem and uninstall everything I do not need anymore, here is my Dockerfile:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>FROM ruby:3.0.4-alpine3.15\nWORKDIR /faenz-analytics\nRUN apk update &amp;&amp; \\\n    apk add make &amp;&amp; \\\n    apk add build-base &amp;&amp; \\ # this takes 200Mb of space!!\n    apk add sqlite-dev\n\n# ...some instructions\n\nRUN bundle install  # installing Ruby gems\nRUN apk del build-base\n\n# ...some other instructions\n</code></pre>\n\n</div>\n\n\n\n<p>easy, right? we installed <code>build-base</code>, compiled and installed the gems and removed <code>build-base</code> to reduce the image size. </p>\n\n<p><strong>The problem is that this does not work! The image size is the same as if we did not remove <code>build-base</code>. Let's discover why.</strong></p>\n\n<p>We wrote three <code>RUN</code> instructions, each one generates a layer and these layer are put togheter by Docker to create the final image:</p>\n\n<ol>\n<li>the first <code>RUN</code> installs the system libraries</li>\n<li>the second <code>RUN</code> install the gems/libraries by Ruby or whatever language you are using</li>\n<li>the third <code>RUN</code> removes the system libraries</li>\n</ol>\n\n<p>since we installed the system libraries in one of the layer they will take some space and will increase the image size, there's no way we can reduce the image size with the next layers.</p>\n\n<p>It's like a sum with no negative numbers. The size can only increase or stay the same from a layer to another.</p>\n\n<h2>\n  \n  \n  What? Don't give up, we got this 🚀\n</h2>\n\n<p><strong>Here is the solution: put these operations in the same layer!</strong><br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>FROM ruby:3.0.4-alpine3.15\nWORKDIR /faenz-analytics\nRUN apk update &amp;&amp; \\\n    apk add make &amp;&amp; \\\n    apk add sqlite-dev\n\n# ...some instructions\n\nRUN apk add build-base &amp;&amp; \\\n    bundle install &amp;&amp; \\\n    apk del build-base\n\n# ...some other instructions\n</code></pre>\n\n</div>\n\n\n\n<p>grouping the operations in just one <code>RUN</code> instruction avoids Docker to waste space to store the <code>build-base</code> in a layer. The layer is generated at the end of the instruction so we are going to install, use the <code>build-base</code> and prontly remove it so that the layer will not contain it at all.</p>\n\n<p>With this little tip my image size went from 400Mb to 170mb, less than half!</p>\n\n<p>If you want to exagerate with the micro optimizations, you can apply the same solution to <code>apk update</code> (or <code>apt-get update</code> for debian/ubuntu images) by deleting the cache created by this command:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>RUN apk update &amp;&amp; \\\n    add build-base &amp;&amp; \\\n    # install other dependencies here...\n    bundle install &amp;&amp; \\\n    apk del build-base &amp;&amp; \\\n    rm -rf /var/cache/apk &amp;&amp; \\\n    rm -rf tmp/cache\n</code></pre>\n\n</div>\n\n\n\n<p>I'm not a Docker expert, so, if you know a better solution or want to share similar tips to reduce the image size please leave a comment, I'm all ears 🙏</p>\n\n"
        ],
        "category": [
            "docker",
            "ruby",
            "python",
            "tutorial"
        ],
        "plainDescription": "Hi everyone, first post on dev.to, I whish to be more active in the future!\n\nToday I want to explain a small tip I recently fond out to reduce the Docker\nimages size, in my case I was able to shrink t...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "Use the Notion API to Create a Quiz with JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss\"\n              title=\"Use the Notion API to Create a Quiz with JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript.jpg\"\n        alt=\"Use the Notion API to create a Quiz with JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            You can extend Notion in all sorts of ways with the Notion API. Learn how to create an interactive quiz with a Notion table and JavaScript.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss\">Use the Notion API to Create a Quiz with JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/notion-api-javascript-quiz/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207562",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "JavaScript",
            "Low Code"
        ],
        "dc:creator": [
            "Rui Sousa"
        ],
        "pubDate": [
            "Tue, 26 Oct 2021 02:00:31 GMT"
        ],
        "plainDescription": "Use the Notion API to create a Quiz with JavaScript\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634971069notion-quiz-javascript.jpg]\n[https://www.sitepoint.com/notion-api-javascript-qui...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Notion Guide: All-in-One Workspace & Notes App"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss\"\n              title=\"Notion Guide: All-in-One Workspace & Notes App\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide.jpg\"\n        alt=\"A Beginner's Guide to Notion\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Maybe you've heard of Notion and are wondering how to get started with it? Learn how Notion works and how to use it for simple projects.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss\">Notion Guide: All-in-One Workspace & Notes App</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203026",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Low Code",
            "Web"
        ],
        "dc:creator": [
            "Kate Andlund"
        ],
        "pubDate": [
            "Mon, 30 Aug 2021 02:00:24 GMT"
        ],
        "plainDescription": "A Beginner's Guide to Notion\n[https://uploads.sitepoint.com/wp-content/uploads/2021/08/1630217043notion-beginner-guide.jpg]\n[https://www.sitepoint.com/notion-beginners-guide/?utm_source=rss] Maybe you...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "An Absolute Beginner’s Guide to Webflow"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss\"\n              title=\"An Absolute Beginner’s Guide to Webflow\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website.jpg\"\n        alt=\"An Absolute Beginner's Guide to Webflow\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            No-code tools for web design offer a lot of value. Learn how to get started with Webflow, whether you're new to web design or a seasoned pro.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss\">An Absolute Beginner’s Guide to Webflow</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/webflow-absolute-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=238156",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Amber Leigh Turner"
        ],
        "pubDate": [
            "Wed, 01 Dec 2021 02:00:12 GMT"
        ],
        "plainDescription": "An Absolute Beginner's Guide to Webflow\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638398712webflow-no-code-website.jpg]\n[https://www.sitepoint.com/webflow-absolute-beginners-guide/?ut...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #499"
        ],
        "link": [
            "https://css-weekly.com/issue-499/"
        ],
        "pubDate": [
            "Wed, 06 Apr 2022 21:08:41 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-499/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how variable fonts work, how to start creating CSS art, what features are coming to browsers, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://evilmartians.com/chronicles/variable-fonts-in-real-life-how-to-use-and-love-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Variable Fonts in Real Life: How To Use and Love Them</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://evilmartians.com/chronicles/variable-fonts-in-real-life-how-to-use-and-love-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/variable-fonts-in-real-life-how-to-use-and-love-them.jpg\" alt=\"Variable Fonts in Real Life: How To Use and Love Them\" /></a>\n\t\t\t\t\t\t<p>Roman Shamin and Travis Turner look at variable fonts with practical examples, file optimization, and accessibility benefits.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://evilmartians.com/chronicles/variable-fonts-in-real-life-how-to-use-and-love-them?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://bingehtheblogger.hashnode.dev/the-art-of-css-art?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">The Art of CSS Art</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://bingehtheblogger.hashnode.dev/the-art-of-css-art?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/the-art-of-css-art.jpg\" alt=\"The Art of CSS Art\" /></a>\n\t\t\t\t\t\t<p>Njong Emy shares some advice on starting to create CSS art.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://bingehtheblogger.hashnode.dev/the-art-of-css-art?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/retool-20220406\">Create a better interface for any business problem with Retool</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/retool-20220406\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/retool-build-internal-tools-remarkably-fast.jpg\" alt=\"Create a better interface for any business problem with Retool\" /></a>\n\t\t\t\t\t\t<p>You don&#8217;t have to be a frontend expert to build beautiful apps. Retool provides a powerful platform to build UI, connect to data, and publish your app 10x faster. Skip boilerplate code with 90+ pre-built components, and write code nearly anywhere to customize how your apps look and work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/retool-20220406\">Explore our component library here</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"https://www.youtube.com/c/CSSWeekly\" target=\"_blank\">From Our YouTube Channel</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/nTtUg8EuJ_8?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How To Create Animated Anchor Links Using CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://youtu.be/nTtUg8EuJ_8?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/how-to-create-animated-anchor-links-using-css.jpg\" alt=\"How To Create Animated Anchor Links Using CSS\" /></a>\n\t\t\t\t\t\t<p>In this quick tip, you&#8217;ll learn to create animated anchor links using CSS <code>scroll-behavior</code> property.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/nTtUg8EuJ_8?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/0AJyCm2-VZM?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A Simple Way to Create a Slideshow Using Pure CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Learn how to create a fully functional slideshow using CSS Scroll Snap. You basically need 3 CSS properties to make custom scrolling behavior work: <code>scroll-snap-type</code>, <code>scroll-snap-align</code>, and optionally <code>scroll-snap-stop</code>. In this video, you&#8217;ll learn how these properties work and the drawbacks of using this technique.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/0AJyCm2-VZM?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-irl.info/exciting-times-for-browsers-and-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Exciting Times for Browsers (and CSS)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Michelle Barker gives an overview of new things coming to browsers in the near future.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-irl.info/exciting-times-for-browsers-and-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/designing-better-infinite-scroll/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Designing a Better Infinite Scroll</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Vitaly Friedman outlines the problems with infinite scroll and offers some advice on designing a better infinite scroll experience.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/designing-better-infinite-scroll/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.stefanjudis.com/today-i-learned/how-to-match-html-elements-with-an-indeterminate-state/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How To Match HTML Elements With an Indeterminate State</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Stefan Judis explains how to use the :indeterminate CSS pseudo-class to match different elements with an indeterminate state.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.stefanjudis.com/today-i-learned/how-to-match-html-elements-with-an-indeterminate-state/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/tweaking-in-the-browser/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Tweaking In The Browser</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed shares his perspective on designing in the browser and explains why and how he uses both design tools and browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/tweaking-in-the-browser/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://kittygiraudel.com/2022/04/02/accessible-cards/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Accessible Cards</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kitty Giraudel explains how to create an accessible card component.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://kittygiraudel.com/2022/04/02/accessible-cards/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/aea-spring-summit-2022\">Design. Code, Content. 3 Days of Intense Learning.</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/aea-spring-summit-2022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/aea-online-together-spring-summit.png\" alt=\"Design. Code, Content. 3 Days of Intense Learning.\" /></a>\n\t\t\t\t\t\t<p>Looking to up your UX design game?</p>\n<p>Join us online April 18–20 for <a href=\"https://cssw.io/aea-spring-summit-2022\" target=\"_blank\"><em><nobr>An Event Apart</nobr> Spring Summit 2022</em></a> — a 3-day online conference with deep insights into advanced CSS, new design frontiers, container queries, web components, web platform features, SEO + UX, tackling organizational barriers, and more.</p>\n<p>Save $100 on any multi-day pass with promo code <strong>AEACSSW22</strong>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/aea-spring-summit-2022\">See the detailed 3-day schedule and register now.</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://avvvatars.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Avvvatars</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Avvvatars is a collection of beautifully crafted unique avatar placeholders, available as a React package and a Figma library.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://avvvatars.com/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://fakerjs.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Faker</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A tool that will help you generate massive amounts of fake (but realistic) data for testing and development.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://fakerjs.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/fariati/pen/oNpZRbd?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Minecraft 3D CSS Bee 🐝</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/fariati/pen/oNpZRbd?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/04/minecraft-3d-css-bee.jpg\" alt=\"Minecraft 3D CSS Bee 🐝\" /></a>\n\t\t\t\t\t\t<p>Ibrahim Fariat created a stunning, animated scene using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/fariati/pen/oNpZRbd?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how variable fonts work, how to start creating CSS art, what features are\ncoming to browsers, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Write HTML, the HTML Way (Not the XHTML Way)"
        ],
        "link": [
            "https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/"
        ],
        "comments": [
            "https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/#comments"
        ],
        "dc:creator": [
            "Jens Oliver Meiert"
        ],
        "pubDate": [
            "Mon, 21 Mar 2022 20:08:38 +0000"
        ],
        "category": [
            "Article",
            "HTML",
            "semantics"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=363745",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>You may not use XHTML (anymore), but when you write HTML, you may be more influenced by XHTML than you think. You are very likely writing HTML, the XHTML way.</p>\n<p>What is the XHTML way of writing HTML, and what &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/\">Write HTML, the HTML Way (Not the XHTML Way)</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>You may not use XHTML (anymore), but when you write HTML, you may be more influenced by XHTML than you think. You are very likely writing HTML, the XHTML way.</p>\n\n\n\n<p>What is the XHTML way of writing HTML, and what is the HTML way of writing HTML? Let’s have a look.</p>\n\n\n\n<span id=\"more-363745\"></span>\n\n\n<h3 id=\"html-xhtml-html\">HTML, XHTML, HTML</h3>\n\n\n<p>In the 1990s, there was HTML. In the 2000s, there was XHTML. Then, in the 2010s, we switched back to HTML. That’s the simple story.</p>\n\n\n\n<p>You can tell by the rough dates of the specifications, too: HTML “1” 1992, HTML 2.0 1995, HTML 3.2 1997, HTML 4.01 1999; XHTML 1.0 2000, XHTML 1.1 2001; “HTML5” <a href=\"https://en.wikipedia.org/wiki/HTML5#Timeline\" rel=\"noopener\">2007</a>.</p>\n\n\n\n<p>XHTML became popular when everyone believed XML and XML derivatives were the future. “XML all the things.” For HTML, this had a profound effect: The effect that we learned to write it the XHTML way.</p>\n\n\n<h3 id=\"the-xhtml-way-of-writing-html\">The XHTML way of writing HTML</h3>\n\n\n<p>The XHTML way is well-documented, because XHTML 1.0 describes in great detail in its section on <a href=\"https://www.w3.org/TR/xhtml1/#diffs\" rel=\"noopener\">“Differences with HTML 4”</a>:</p>\n\n\n\n<ul><li>Documents must be well-formed.</li><li>Element and attribute names must be in lower case.</li><li>For non-empty elements, end tags are required.</li><li>Attribute values must always be quoted.</li><li><a href=\"https://www.w3.org/TR/xhtml1/#h-4.5\" rel=\"noopener\">Attribute minimization</a> is not supported.</li><li>Empty elements need to be closed.</li><li>White space handling in attribute values is done according to XML.</li><li>Script and style elements need CDATA sections.</li><li>SGML exclusions are not possible.</li><li>The elements with <code>id</code> and <code>name</code> attributes, like <code>a</code>, <code>applet</code>, <code>form</code>, <code>frame</code>, <code>iframe</code>, <code>img</code>, and <code>map</code>, should only use <code>id</code>.</li><li>Attributes with pre-defined value sets are case-sensitive.</li><li>Entity references as hex values must be in lowercase.</li></ul>\n\n\n\n<p>Does this look familiar? With the exception of marking CDATA content, as well as dealing with SGML exclusions, you probably follow all of these rules. <strong>All of them.</strong></p>\n\n\n\n<p>Although XHTML is dead, many of these rules have never been questioned again. Some have even been elevated to “best practices” for HTML.</p>\n\n\n\n<p>That is the XHTML way of writing HTML, and its lasting impact on the field.</p>\n\n\n<h3 id=\"the-html-way-of-writing-html\">The HTML way of writing HTML</h3>\n\n\n<p>One way of walking us back is to negate the rules imposed by XHTML. Let’s actually do this (without the SGML part, because HTML <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#parsing\" rel=\"noopener\">isn’t based on SGML anymore</a>):</p>\n\n\n\n<ul><li>Documents may not be well-formed.</li><li>Element and attribute names may not be in lower case.</li><li>For non-empty elements, end tags are not always required.</li><li>Attribute values may not always be quoted.</li><li>Attribute minimization is supported.</li><li>Empty elements don’t need to be closed.</li><li>White space handling in attribute values isn’t done according to XML.</li><li>Script and style elements don’t need CDATA sections.</li><li>The elements with <code>id</code> and <code>name</code> attributes may not only use <code>id</code>.</li><li>Attributes with pre-defined value sets are not case-sensitive.</li><li>Entity references as hex values may not only be in lowercase.</li></ul>\n\n\n\n<p>Let’s remove the esoteric things; the things that don’t seem relevant. This includes XML whitespace handling, CDATA sections, doubling of <code>name</code> attribute values, the case of pre-defined value sets, and hexadecimal entity references:</p>\n\n\n\n<ul><li>Documents may not be well-formed.</li><li>Element and attribute names may not be in lowercase.</li><li>For non-empty elements, end tags are not always required.</li><li>Attribute values may not always be quoted.</li><li>Attribute minimization is supported.</li><li>Empty elements don’t need to be closed.</li></ul>\n\n\n\n<p>Peeling away from these rules, this looks a lot less like we’re working with XML, and more like working with HTML. But we’re not done yet.</p>\n\n\n\n<p>“Documents may not be well-formed” suggests that it was fine if HTML code was invalid. It was fine for XHTML to point to wellformedness because of XML’s strict error handling. But while HTML documents work even when they contain severe syntax and wellformedness issues, it’s neither useful for the professional — nor our field — to use and abuse this resilience. (I&#8217;ve argued this case before in my article, <a href=\"https://meiert.com/en/blog/critical-frontend-development/\" rel=\"noopener\">“In Critical Defense of Frontend Development.”</a>)</p>\n\n\n\n<p>The HTML way would therefore not suggest “documents may not be well-formed.” It would also be clear that not only end, but also start tags aren’t always required. Rephrasing and reordering, this is the essence:</p>\n\n\n\n<ul><li>Start and end tags are not always required.</li><li>Empty elements don’t need to be closed.</li><li>Element and attribute names may be lower or upper case.</li><li>Attribute values may not always be quoted.</li><li>Attribute minimization is supported.</li></ul>\n\n\n<h3 id=\"examples\">Examples</h3>\n\n\n<p>How does this look like in practice? For start and end tags, be aware that <a href=\"https://meiert.com/en/blog/optional-html/#toc-tags\" rel=\"noopener\">many tags</a> are optional. A paragraph and a list, for example, are written like this in XHTML:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.&lt;/p>\n&lt;ul>\n  &lt;li>Praesent augue nisl&lt;/li>\n  &lt;li>Lobortis nec bibendum ut&lt;/li>\n  &lt;li>Dictum ac quam&lt;/li>\n&lt;/ul></code></pre>\n\n\n\n<p>In HTML, however, you can write them using only this code (which is valid):</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n&lt;ul>\n  &lt;li>Praesent augue nisl\n  &lt;li>Lobortis nec bibendum ut\n  &lt;li>Dictum ac quam\n&lt;/ul></code></pre>\n\n\n\n<p>Developers also learned to write void elements, like so:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;br /></code></pre>\n\n\n\n<p>This is something XHTML brought to HTML, but as <a href=\"https://html.spec.whatwg.org/multipage/syntax.html#start-tags\" rel=\"noopener\">the slash has no effect on void elements</a>, you only need this:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;br></code></pre>\n\n\n\n<p>In HTML, you can also just write everything in all caps:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;A HREF=\"https://css-tricks.com/\">CSS-Tricks&lt;/A></code></pre>\n\n\n\n<p>It looks like you’re yelling and you may not like it, but it’s okay to write it like this.</p>\n\n\n\n<p>When you want to condense that link, HTML offers you the option to <a href=\"https://meiert.com/en/blog/optional-html/#toc-quotes\" rel=\"noopener\">leave out certain quotes</a>:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;A HREF=https://css-tricks.com/>CSS-Tricks&lt;/A></code></pre>\n\n\n\n<p class=\"is-style-explanation\">As a rule of thumb, when the attribute value doesn’t contain a space or an equal sign, it’s usually fine to drop the quotes.</p>\n\n\n\n<p>Finally, HTML–HTML — not XHTML–HTML — also allows to minimize attributes. That is, instead of marking an <code>input</code> element as required and read-only, like this:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;input type=\"text\" required=\"required\" readonly=\"readonly\"></code></pre>\n\n\n\n<p>You can minimize the attributes:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;input type=\"text\" required readonly></code></pre>\n\n\n\n<p>If you’re not only taking advantage of the fact that the quotes aren’t needed, but that <code>text</code> is the default for the <code>type</code> attribute here (there are more such <a href=\"https://meiert.com/en/blog/optional-html/#toc-attribute-values\" rel=\"noopener\">unneeded attribute–value combinations</a>), you get an example that shows HTML in all its minimal beauty:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;input required readonly></code></pre>\n\n\n<h3 id=\"write-html-the-html-way\">Write HTML, the HTML way</h3>\n\n\n<p>The above isn’t a representation of where HTML was in the 90s. HTML, back then, was loaded with <code>&lt;table&gt;</code> elements for layout, packed with presentational code, largely invalid (<a href=\"https://meiert.com/en/blog/valid-html-2021/\" rel=\"noopener\">as it’s still today</a>), with wildly varying user agent support. Yet it’s the <em>essence</em> of what we would have wanted to keep if XML and XHTML hadn’t come around.</p>\n\n\n\n<p>If you’re open to a suggestion of what a more comprehensive, contemporary way of writing HTML could look like, I have one. (HTML is my main focus area, so I’m augmenting this by links to some of my articles.)</p>\n\n\n\n<ol><li><strong>Respect syntax and semantics.</strong><ul><li><a href=\"https://meiert.com/en/blog/the-frontend-developer-test/\" rel=\"noopener\">Validate your HTML</a>, and ship only valid HTML.</li></ul></li><li><strong>Use the options HTML gives you, as long as you do so consistently.</strong><ul><li>Remember that element and attribute names may be lowercase or uppercase.</li></ul></li><li><strong>Keep use of HTML to the absolute minimum</strong><ul><li>Remember that presentational and behavioral markup is to be handled by CSS and JavaScript instead.</li><li>Remember that start and end tags are <a href=\"https://meiert.com/en/blog/optional-html/#toc-tags\" rel=\"noopener\">not always</a> required.</li><li>Remember that empty elements don’t need to be closed.</li><li>Remember that some attributes have defaults that allow <a href=\"https://meiert.com/en/blog/optional-html/#toc-attribute-values\" rel=\"noopener\">these attribute–value pairs to be omitted</a>.</li><li>Remember that attribute values may <a href=\"https://meiert.com/en/blog/optional-html/#toc-quotes\" rel=\"noopener\">not always</a> be quoted.</li><li>Remember that attribute minimization is supported.</li></ul></li></ol>\n\n\n\n<p>It’s not a coincidence that this resembles <a href=\"https://meiert.com/en/blog/rules-for-html/\" rel=\"noopener\">the three ground rules for HTML</a>, that it works with the premise of <a href=\"https://meiert.com/en/blog/html-performance/\" rel=\"noopener\">a smaller payload also leading to faster sites</a>, and that this follows <a href=\"https://meiert.com/en/blog/minimal-web-development/\" rel=\"noopener\">the school of minimal web development</a>. None of this is new — our field could merely decide to rediscover it. Tooling is available, too: <a href=\"https://github.com/kangax/html-minifier\" rel=\"noopener\">html-minifier</a> is probably the most established and able to handle all HTML optimizations.</p>\n\n\n\n<p>You’ve learned HTML the XHTML way. HTML isn’t XHTML. Rediscover HTML, and help shape a new, modern way of writing HTML — which acknowledges, but isn’t necessarily based on XML.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/\">Write HTML, the HTML Way (Not the XHTML Way)</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/write-html-the-html-way-not-the-xhtml-way/feed/"
        ],
        "slash:comments": [
            "40"
        ],
        "post-id": [
            {
                "_": "363745",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "You may not use XHTML (anymore), but when you write HTML, you may be more\ninfluenced by XHTML than you think. You are very likely writing HTML, the XHTML\nway.\n\nWhat is the XHTML way of writing HTML, a...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "author": [
            "Noam Rosenthal"
        ],
        "title": [
            "What Web Frameworks Solve And How To Do Without Them (Part 1)"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/01/web-frameworks-guide-part1/"
        ],
        "pubDate": [
            "Fri, 28 Jan 2022 14:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/01/web-frameworks-guide-part1/"
        ],
        "description": [
            "In this article, Noam Rosenthal dives deep into a few technical features that are common across frameworks, and explains how some of the different frameworks implement them and what they cost."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/01/web-frameworks-guide-part1/\" />\n              <title>What Web Frameworks Solve And How To Do Without Them (Part 1)</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>What Web Frameworks Solve And How To Do Without Them (Part 1)</h1>\n                  \n                    \n                    <address>Noam Rosenthal</address>\n                  \n                  <time datetime=\"2022-01-28T14:00:00&#43;00:00\" class=\"op-published\">2022-01-28T14:00:00+00:00</time>\n                  <time datetime=\"2022-01-28T14:00:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>I have recently become very interested in comparing frameworks to vanilla JavaScript. It started after some frustration I had using React in some of my freelance projects, and with my recent, more intimate acquaintance with web standards as a specification editor.</p>\n\n<p>I was interested to see what are the <strong>commonalities and differences between the frameworks</strong>, what the web platform has to offer as a leaner alternative, and whether it’s sufficient. My objective is not to bash frameworks, but rather to understand the costs and benefits, to determine whether an alternative exists, and to see whether we can learn from it, even if we do decide to use a framework.</p>\n\n<p>In this first part, I will deep dive into a few technical features common across frameworks, and how some of the different frameworks implement them. I will also look at the cost of using those frameworks.</p>\n\n<h2 id=\"the-frameworks\">The Frameworks</h2>\n\n<p>I chose four frameworks to look at: React, being the dominant one today, and three newer contenders that claim to do things differently from React.</p>\n\n<ul>\n<li><a href=\"https://reactjs.org/\">React</a><br />\n“React makes it painless to create interactive UIs. Declarative views make your code more predictable and easier to debug.”</li>\n<li><a href=\"https://www.solidjs.com/\">SolidJS</a><br />\n“Solid follows the same philosophy as React… It however has a completely different implementation that forgoes using a virtual DOM.”</li>\n<li><a href=\"https://svelte.dev/\">Svelte</a><br />\n“Svelte is a radical new approach to building user interfaces… a compile step that happens when you build your app. Instead of using techniques like virtual DOM diffing, Svelte writes code that surgically updates the DOM when the state of your app changes.”</li>\n<li><a href=\"https://lit.dev/\">Lit</a><br />\n“Building on top of the Web Components standards, Lit adds just … reactivity, declarative templates, and a handful of thoughtful features.”</li>\n</ul>\n\n<p>To summarize what the frameworks say about their differentiators:</p>\n\n<ul>\n<li>React makes building UIs easier with declarative views.</li>\n<li>SolidJS follows React’s philosophy but uses a different technique.</li>\n<li>Svelte uses a compile-time approach to UIs.</li>\n<li>Lit uses existing standards, with some added lightweight features.</li>\n</ul>\n\n<h2 id=\"what-frameworks-solve\">What Frameworks Solve</h2>\n\n<p>The frameworks themselves mention the words declarative, reactivity, and virtual DOM. Let’s dive into what those mean.</p>\n\n<h3 id=\"declarative-programming\">Declarative Programming</h3>\n\n<p>Declarative programming is a paradigm in which logic is defined without specifying the control flow. We describe what the result needs to be, rather than what steps would take us there.</p>\n\n<p>In the early days of declarative frameworks, circa 2010, DOM APIs were a lot more bare and verbose, and writing web applications with imperative JavaScript required a lot of boilerplate code. That’s when the concept of “<a href=\"https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel\">model-view-viewmodel</a>” (MVVM) became prevalent, with the then-groundbreaking Knockout and AngularJS frameworks, providing a JavaScript declarative layer that handled that complexity inside the library.</p>\n\n<p>MVVM is not a widely used term today, and it’s somewhat of a variation of the older term “data-binding”.</p>\n\n<h3 id=\"data-binding\">Data Binding</h3>\n\n<p>Data binding is a declarative way to express how data is synchronized between a model and a user interface.</p>\n\n<p>All of the popular UI frameworks provide some form of data-binding, and their tutorials start with a data-binding example.</p>\n\n<p>Here is data-binding in JSX (SolidJS and React):</p>\n\n<pre><code class=\"language-javascript\">function HelloWorld() {\n const name = \"Solid or React\";\n\n return (\n     &lt;div&gt;Hello {name}!&lt;/div&gt;\n )\n}\n</code></pre>\n\n<p>Data-binding in Lit:</p>\n\n<pre><code class=\"language-javascript\">class HelloWorld extends LitElement {\n @property()\n name = 'lit';\n\n render() {\n   return html`&lt;p&gt;Hello ${this.name}!&lt;/p&gt;`;\n }\n}\n</code></pre>\n\n<p>Data-binding in Svelte:</p>\n\n<pre><code class=\"language-javascript\">&lt;script&gt;\n  let name = 'world';\n&lt;/script&gt;\n\n&lt;h1&gt;Hello {name}!&lt;/h1&gt;\n</code></pre>\n\n<h3 id=\"reactivity\">Reactivity</h3>\n\n<p>Reactivity is a declarative way to express the propagation of change.</p>\n\n<p>When we have a way to declaratively express data-binding, we need an efficient way for the framework to propagate changes.</p>\n\n<p>The React engine compares the result of rendering with the previous result, and it applies the difference to the DOM itself. This way of handling change propagation is called the <a href=\"https://reactjs.org/docs/faq-internals.html#what-is-the-virtual-dom\">virtual DOM</a>.</p>\n\n<p>In SolidJS, this is done more explicitly, with its store and built-in elements. For example, the <code>Show</code> element would keep track of what has changed internally, instead of the virtual DOM.</p>\n\n<p>In Svelte, the “reactive” code is generated. Svelte knows which events can cause a change, and it generates straightforward code that draws the line between the event and the DOM change.</p>\n\n<p>In Lit, reactivity is accomplished using element properties, essentially relying on the built-in reactivity of HTML custom elements.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"https://www.smashingconf.com/online-workshops/\">Smashing Online Workshops</a></strong> on <strong>front-end &amp; UX</strong>, with practical takeaways, live sessions, <strong>video recordings</strong> and a friendly Q&amp;A. On design systems, UX, web performance and CSS/JS. With Brad Frost, Stephanie Troeth and <a href=\"https://smashingconf.com/online-workshops/workshops\">so many others</a>.</p>\n<a data-instant href=\"smashing-workshops\" class=\"btn btn--green btn--large\">Jump to online workshops&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"smashing-workshops\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\">\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"/images/smashing-cat/cat-scubadiving-panel.svg\"\n    alt=\"Feature Panel\"\n    width=\"257\"\n    height=\"355\"\n/>\n\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h3 id=\"logic\">Logic</h3>\n\n<p>When a framework provides a declarative interface for data-binding, with its implementation of reactivity, it also needs to provide some way to express some of the logic that is traditionally written imperatively. The basic building blocks of logic are “if” and “for”, and all of the major frameworks provide some expression of these building blocks.</p>\n\n<h4 id=\"conditionals\">Conditionals</h4>\n\n<p>Apart from binding basic data such as numbers and string, every framework supplies a “conditional” primitive. In React, it looks like this:</p>\n\n<pre><code class=\"language-javascript\">const [hasError, setHasError] = useState(false);  \nreturn hasError ? &lt;label&gt;Message&lt;/label&gt; : null;\n…\nsetHasError(true);\n</code></pre>\n\n<p>SolidJS provides a built-in conditional component, <a href=\"https://www.solidjs.com/docs/latest/api#%3Cshow%3E\"><code>Show</code></a>:</p>\n\n<pre><code class=\"language-javascript\">&lt;Show when={state.error}&gt;\n  &lt;label&gt;Message&lt;/label&gt;\n&lt;/Show&gt;\n</code></pre>\n\n<p>Svelte provides the <code>#if</code> directive:</p>\n\n<pre><code class=\"language-javascript\">{#if state.error}\n  &lt;label&gt;Message&lt;/label&gt;\n{/if}\n</code></pre>\n\n<p>In Lit, you’d use an explicit ternary operation in the <code>render</code> function:</p>\n\n<pre><code class=\"language-javascript\">render() {\n return this.error ? html`&lt;label&gt;Message&lt;/label&gt;`: null;\n}\n</code></pre>\n\n<h4 id=\"lists\">Lists</h4>\n\n<p>The other common framework primitive is list-handling. Lists are a key part of UIs &mdash; list of contacts, notifications, etc. &mdash; and to work efficiently, they need to be reactive, not updating the whole list when one data item changes.</p>\n\n<p>In React, list-handling looks like this:</p>\n\n<pre><code class=\"language-javascript\">contacts.map((contact, index) =>\n &lt;li key={index}&gt;\n   {contact.name}\n &lt;/li&gt;)\n</code></pre>\n\n<p>React uses the special <code>key</code> attribute to differentiate between list items, and it makes sure that the whole list doesn’t get replaced with every render.</p>\n\n<p>In SolidJS, the <code>for</code> and <code>index</code> built-in elements are used:</p>\n\n<pre><code class=\"language-javascript\">&lt;For each={state.contacts}&gt;\n  {contact => &lt;DIV&gt;{contact.name}&lt;/DIV&gt; }\n&lt;/For&gt;\n</code></pre>\n\n<p>Internally, SolidJS uses its own store in conjunction with <code>for</code> and <code>index</code> to decide which elements to update when items change. It’s more explicit than React, allowing us to avoid the complexity of the virtual DOM.</p>\n\n<p>Svelte uses the <code>each</code> directive, which gets transpiled based on its updaters:</p>\n\n<pre><code class=\"language-javascript\">{#each contacts as contact}\n  &lt;div&gt;{contact.name}&lt;/div&gt;\n{/each}\n</code></pre>\n\n<p>Lit supplies a <code>repeat</code> function, which works similarly to React’s <code>key</code>-based list mapping:</p>\n\n<pre><code class=\"language-javascript\">repeat(contacts, contact => contact.id,\n    (contact, index) => html`&lt;div&gt;${contact.name}&lt;/div&gt;`\n</code></pre>\n\n<h3 id=\"component-model\">Component Model</h3>\n\n<p>One thing that is out of the scope of this article is the component model in the different frameworks and how it can be dealt with using custom HTML elements.</p>\n\n<p><strong>Note</strong>: <em>This is a big subject, and I hope to cover it in a future article because this one would get too long. :)</em></p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"the-cost\">The Cost</h2>\n\n<p>Frameworks provide declarative data-binding, control flow primitives (conditionals and lists), and a reactive mechanism to propagate changes.</p>\n\n<p>They also provide other major things, such as a way to reuse components, but that’s a subject for a separate article.</p>\n\n<p>Are frameworks useful? Yes. They give us all of these convenient features. But is that the right question to ask? Using a framework comes at a cost. Let’s see what those costs are.</p>\n\n<h3 id=\"bundle-size\">Bundle Size</h3>\n\n<p>When looking at bundle size, I like looking at the minified non-Gzip’d size. That’s the size that is the most relevant to the CPU cost of JavaScript execution.</p>\n\n<ul>\n<li>ReactDOM is about 120 KB.</li>\n<li>SolidJS is about 18 KB.</li>\n<li>Lit is about 16 KB.</li>\n<li>Svelte is about 2 KB, but the size of the generated code varies.</li>\n</ul>\n\n<p>It seems that today’s frameworks are doing a better job than React of keeping the bundle size small. The virtual DOM requires a lot of JavaScript.</p>\n\n<h3 id=\"builds\">Builds</h3>\n\n<p>Somehow we got used to “building” our web apps. It’s impossible to start a front-end project without setting up Node.js and a bundler such as Webpack, dealing with some recent configuration changes in the Babel-TypeScript starter pack, and all that jazz.</p>\n\n<p>The more expressive and the smaller the bundle size of the framework, the bigger the burden of build tools and transpilation time.</p>\n\n<p>Svelte claims that the <a href=\"https://svelte.dev/blog/virtual-dom-is-pure-overhead\">virtual DOM is pure overhead</a>. I agree, but perhaps “building” (as with Svelte and SolidJS) and custom client-side template engines (as with Lit) are also pure overhead, of a different kind?</p>\n\n<h3 id=\"debugging\">Debugging</h3>\n\n<p>With building and transpilation come a different kind of cost.</p>\n\n<p>The code we see when we use or debug the web app is totally different from what we wrote. We now rely on special debugging tools of varying quality to reverse engineer what happens on the website and to connect it with bugs in our own code.</p>\n\n<p>In React, the call stack is never “yours” &mdash; React handles scheduling for you. This works great when there are no bugs. But try to identify the cause of infinite-loop re-renders and you’ll be in for a world of pain.</p>\n\n<p>In Svelte, the bundle size of the library itself is small, but you’re going to ship and debug a whole bunch of cryptic generated code that is Svelte’s implementation of reactivity, customized to your app’s needs.</p>\n\n<p>With Lit, it’s less about building, but to debug it effectively you have to understand its template engine. This might be the biggest reason why my sentiment towards frameworks is skeptical.</p>\n\n<p>When you look for custom declarative solutions, you end up with more painful imperative debugging. The examples in this document use Typescript for API specification, but the code itself doesn’t require transpilation.</p>\n\n<h3 id=\"upgrades\">Upgrades</h3>\n\n<p>In this document, I’ve looked at four frameworks, but there are more frameworks than I can count (AngularJS, Ember.js, and Vue.js, to name a <a href=\"https://en.wikipedia.org/wiki/Comparison_of_JavaScript-based_web_frameworks\">few</a>). Can you count on the framework, its developers, its mindshare, and its ecosystem to work for you as it evolves?</p>\n\n<p>One thing that is more frustrating than fixing your own bugs is having to find workarounds for framework bugs. And one thing that’s more frustrating than framework bugs are bugs that occur when you upgrade a framework to a new version without modifying your code.</p>\n\n<p>True, this problem also exists in browsers, but when it occurs, it happens to everyone, and in most cases a fix or a published workaround is imminent. Also, most of the patterns in this document are based on mature web platform APIs; there is not always a need to go with the bleeding edge.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"summary\">Summary</h2>\n\n<p>We dived a bit deeper into understanding the core problems frameworks try to solve and how they go about solving them, focusing on data-binding, reactivity, conditionals and lists. We also looked at the cost.</p>\n\n<p>In <a href=\"https://www.smashingmagazine.com/2022/02/web-frameworks-guide-part2\">Part 2</a>, we will see how these problems can be addressed without using a framework at all, and what we can learn from it. Stay tuned!</p>\n\n<p><em>Special thanks to the following individuals for technical reviews: Yehonatan Daniv, Tom Bigelajzen, Benjamin Greenbaum, Nick Ribal and Louis Lazaris.</em></p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "In this article, Noam Rosenthal dives deep into a few technical features that\nare common across frameworks, and explains how some of the different frameworks\nimplement them and what they cost....",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "42 Visual Studio Code Shortcuts for Boosting Your Productivity"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss\"\n              title=\"42 Visual Studio Code Shortcuts for Boosting Your Productivity\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts.jpg\"\n        alt=\"VS Code Keyboard Shortcuts for Boosting Your Productivity\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Keyboard shortcuts help you work faster. Learn some of the most useful Visual Studio Code shortcuts for Windows, Linux and macOS.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss\">42 Visual Studio Code Shortcuts for Boosting Your Productivity</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/visual-studio-code-keyboard-shortcuts/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206871",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Wed, 29 Sep 2021 02:00:14 GMT"
        ],
        "plainDescription": "VS Code Keyboard Shortcuts for Boosting Your Productivity\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632901525vs-code-keyboard-shortcuts.jpg]\n[https://www.sitepoint.com/visual-studio-c...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Eric Meyer shows off max-inline-size"
        ],
        "link": [
            "https://frontendfoc.us/issues/540"
        ],
        "description": [
            "\n\n  \n\n    \n    \n    \n    \n    \n  \n\n\n\n\n<table border=0 cellpadding=0 cellspacing=0 align=\"center\" border=\"0\">\n  <tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <div>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n      <table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0>\n        <tr>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <a href=\"https://frontendfoc.us/link/123019/rss\" style=\" color: #D94306; font-weight: 600;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png\" width=\"60\" style=\"margin-top: 7px;     line-height: 100%; \"></a>\n          </td>\n          <td align=\"left\" style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n            <div style=\"margin-left: 20px; color: #fff;\">\n<p>Frontend Focus</p>\n<p>🇺🇦 #​540 — May 4, 2022 | <a href=\"https://frontendfoc.us/link/123020/rss\" style=\"color: #fff;  font-weight: 600;\">Read on the web</a></p>\n</div>\n          </td>\n        </tr>\n      </table>\n     </td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/123021/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/oyl1smxkf1jvni8jphkv.jpg\" width=\"640\" style=\"    line-height: 100%;  \"></a>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123021/rss\" title=\"www.smashingmagazine.com\" style=\" color: #D94306; font-size: 1.15em; line-height: 1.25em; font-weight: 400;\">You Don’t <em>Need</em> a UI Framework</a></span> — You’ve got an app or a site to build so you reach for Bootstrap or Material UI and.. well, maybe you shouldn’t, says Josh, who argues they’re not needed for most projects and makes his case here.</p>\n  <p>Josh Comeau </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><span>🎂 </span> <a href=\"https://frontendfoc.us/link/123022/rss\" title=\"blog.mozilla.org\" style=\" color: #D94306;\">Celebrating Firefox 100: How Mozilla Got There</a></span> — Just a month behind Chrome 100 comes Firefox 100, and how far Firefox has come since its birth as <em>Phoenix</em>, a lightweight rethinking of the former Netscape browser suite. Firefox 100 is broadly <em>not</em> a developer oriented release but there are <a href=\"https://frontendfoc.us/link/123023/rss\" style=\" color: #D94306;\">release notes</a> nonetheless.</p>\n  <p>Mozilla </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  <a href=\"https://frontendfoc.us/link/123024/rss\" style=\" color: #D94306;\"><img src=\"https://copm.s3.amazonaws.com/0ad9921b.png\" width=\"160\" height=\"120\" style=\"padding-top: 12px; padding-left: 12px;     line-height: 100%; \"></a>\n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123024/rss\" title=\"chrome.google.com\" style=\" color: #D94306;\">Build a More Accessible Web App with axe DevTools</a></span> — Start accessibility testing in your browser in just minutes. Avoid wasted time with inaccurate results. Easily fix issues with in-product guidance. Install the free axe DevTools Chrome extension and start building a more accessible app today.</p>\n  <p>Deque <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123025/rss\" title=\"meyerweb.com\" style=\" color: #D94306;\">Flexibly Centering an Element with Side-Aligned Content</a></span> — I'm old enough to remember when folks like Eric had to come up with complicated solutions for Web layout issues, so it’s fantastic things have progressed that such solutions are now <em>simple</em>, yet still clever enough to involve CSS properties I've not used before such as <code>max-inline-size</code> here.</p>\n  <p>Eric Meyer </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123026/rss\" title=\"www.macrumors.com\" style=\" color: #D94306;\">Microsoft <em>Edge</em> Overtakes Safari as 2nd Most Popular Desktop Browser</a></span> — So now the #1 and #2 browser are, essentially, both Chromium under the hood for a total of 76.7% share between them. Safari is still <em>huge</em> in the mobile space, however, due to Apple’s rules around browser engines (or lack thereof) on iOS devices.</p>\n  <p>MacRumors </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>⚡️ Quick bits:</strong></p>                                \n  </td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<ul>\n<li>\n<p>The CSS Zen Garden project <a href=\"https://frontendfoc.us/link/123027/rss\" style=\" color: #D94306; font-weight: 600;\">has turned 19 years old.</a></p>\n</li>\n<li>\n<p>Rachel Andrew reflects on <a href=\"https://frontendfoc.us/link/123028/rss\" style=\" color: #D94306; font-weight: 600;\">what's was new to the web platform in April 2022.</a></p>\n</li>\n<li>\n<p>Dave Rupert considers the complexity of <a href=\"https://frontendfoc.us/link/123029/rss\" style=\" color: #D94306; font-weight: 600;\">server-side versus client-side analytics</a> and concludes <em>\"If your goal is not to grow your site… maybe ignorance is bliss.\"</em></p>\n</li>\n<li>\n<p>A neat list of <a href=\"https://frontendfoc.us/link/123030/rss\" style=\" color: #D94306; font-weight: 600;\">cool things people do with their blogs.</a> Seeing a lot more stuff on Twitter about blogging 'coming back' lately..</p>\n</li>\n</ul>\n</td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>📙 <strong>Tutorials, Articles &amp; Opinion</strong></p></td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/123031/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/fpri60wf3jsenowffnjk.jpg\" width=\"640\" style=\"        line-height: 100%;  \"></a>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123031/rss\" title=\"css-tricks.com\" style=\" color: #D94306;\">Creating Realistic Reflections with CSS</a></span> — The idea is you have a copy of something (like some text) then use CSS transforms to flip it vertically and apply some extra styling. It’s a neat effect.</p>\n  <p>Preethi (CSS Tricks) </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123032/rss\" title=\"alistairshepherd.uk\" style=\" color: #D94306;\">Generating SVG 'Mountain Ridge' Dividers</a></span> — I see this as being a bit more like a ‘torn paper’ effect, but whatever it’s called, it’s neat to see how to generate SVG on the fly to represent it.</p>\n  <p>Alistair Shepherd </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123033/rss\" title=\"learn.cypress.io\" style=\" color: #D94306;\">Level-Up Your Cypress Testing Knowledge for Free</a></span></p>\n  <p>Cypress.io <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123034/rss\" title=\"css-tricks.com\" style=\" color: #D94306;\">Creating the DigitalOcean Logo in 3D with CSS</a></span> — Finally DigitalOcean are taking full advantage of their acquisition of CSS Tricks(!) :-) Regardless of the commercial intent, this tutorial digs a <em>lot</em> further into using CSS to create and work with logos and symbols than I expected and should be a learning experience for all.</p>\n  <p>Jhey Tompkins </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123035/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Starting a Blank Jekyll Site with Tailwind CSS in 2022</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Giorgi Mezurnishvili</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123036/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Build a Lightweight Web Component with Lit.js</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Clara Ekekenta</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123037/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">My Browser Support Strategy</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Michelle Barker</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123038/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">The Appeal of Using Plain HTML Pages</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Chris Siebenmann</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\"><p>Jobs</p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123039/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Frontend Developer at X-Team (Remote)</a></span> — Join the most energizing community for developers and work on long-term projects for Riot Games, FOX, Sony, Coinbase, and more.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">X-Team</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123040/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Frontend Engineer</a></span> — We’ve built a product thousands of people love (see <a href=\"https://frontendfoc.us/link/123041/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Trustpilot</a> if you don’t believe us). We need your help with React &amp; TypeScript.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Feather</span> \n  </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123042/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Find Frontend Engineering Jobs with Hired</a></span> — Create a profile on Hired to connect with hiring managers at growing startups and Fortune 500 companies. It's free for job-seekers.\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">Hired</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0;\"><p>🔧 <strong> Code, Tools &amp; Resources</strong></p></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123043/rss\" title=\"pyscript.net\" style=\" color: #D94306;\">Pyscript: Run Python in Your HTML</a></span> — A framework for creating Python apps in the browser by way of HTML. You get bi-directional communication with JavaScript, too. Unsurprisingly, WebAssembly is what does the heavy lifting and makes this all possible. <a href=\"https://frontendfoc.us/link/123044/rss\" style=\" color: #D94306;\">More background here.</a></p>\n  <p>Anaconda Inc. </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123045/rss\" title=\"frappe.io\" style=\" color: #D94306;\">Frappe Gantt: A JavaScript Gantt Chart Control</a></span> — Gantt charts are commonly used in project management to show the progress and connection between activities spread over a timeline. There’s a live demo on this page, or you can head to the <a href=\"https://frontendfoc.us/link/123046/rss\" style=\" color: #D94306;\">GitHub repo.</a></p>\n  <p>Frappe </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123047/rss\" title=\"buildkite.com\" style=\" color: #D94306;\">Speed Up Your Builds with Buildkite’s New Plan</a></span> — Set up CI/CD pipelines, frontend builds, ML training, Ops automation, security scanning, or IOT testing 📦</p>\n  <p>Buildkite <span style=\"text-transform: uppercase; margin-left: 4px; font-size: 0.9em;   color: #997 !important; padding: 1px 4px; \">sponsor</span></p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123048/rss\" title=\"css-generators.com\" style=\" color: #D94306;\">CSS Generators: Custom Borders</a></span> — A CSS-only generator for zig-zag, rounded and wavy-style borders.</p>\n  <p>Temani Afif </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \">\n  <a href=\"https://frontendfoc.us/link/123049/rss\" style=\" color: #D94306;\"><img src=\"https://res.cloudinary.com/cpress/image/upload/w_1280,e_sharpen:60/l5p8rdml0q0uiksuqlov.jpg\" width=\"640\" style=\"        line-height: 100%;  \"></a>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123049/rss\" title=\"github.com\" style=\" color: #D94306;\">Emoji Mart 5.0: A Customizable Emoji Picker for the Web</a></span> — You can <a href=\"https://frontendfoc.us/link/123050/rss\" style=\" color: #D94306;\">test it out here.</a></p>\n  <p>Missive </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123051/rss\" title=\"plyr-react.js.org\" style=\" color: #D94306;\">Plyr React 4.0: A Responsive Media Player React Component</a></span> — Supports video, audio, YouTube and Vimeo. <a href=\"https://frontendfoc.us/link/123052/rss\" style=\" color: #D94306;\">GitHub repo.</a></p>\n  <p>Chintan Prajapati </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 18px;\">\n  \n  <p><span style=\"font-weight: 400 !important; font-size: 1.3em !important; color: #000;\"><a href=\"https://frontendfoc.us/link/123053/rss\" title=\"www.hyperui.dev\" style=\" color: #D94306;\">HyperUI: Open Source Tailwind CSS Components</a></span> — Popups, inputs, pagination, cards, and a lot more besides.</p>\n  <p>Mark Mead </p>\n</td></tr></table>\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n  <p><span style=\"font-weight: 600; font-size: 1.0em; color: #000;\"><a href=\"https://frontendfoc.us/link/123054/rss\" style=\" color: #D94306; font-size: 1.0em !important; font-weight: 500 !important;\">Peaks 2.0: UI Component for Interacting with Audio Waveforms</a></span>\n  <br><span style=\"color: #5a5a5a; margin-top: 4px; text-transform: uppercase; font-size: 12px; line-height: 1.6em !important;\">BBC</span> \n  </p>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px;\">\n\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\"font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;    padding: 0px 15px;\">\n<p><strong>🕰 ICYMI</strong> (<em>Some older stuff that's still worth checking out</em>)</p>\n                \n<ul>\n\n<li>\n<a href=\"https://frontendfoc.us/link/123055/rss\" style=\" color: #D94306; font-weight: 600;\">Here's a sizeable collection of handy little tools and time-saving apps</a> for web designers. You'll no doubt find something cool here.</li>\n\n<li>\n<a href=\"https://frontendfoc.us/link/123056/rss\" style=\" color: #D94306; font-weight: 600;\">This video from Hussein Nasser</a> digs into how Instagram goes about serving its content to the user (via GraphQL).</li>\n\n<li>Ready to speedrun your CSS knowledge? <a href=\"https://frontendfoc.us/link/123057/rss\" style=\" color: #D94306; font-weight: 600;\">This game quizzes you</a> on your CSS selector know-how.</li>\n\n<li>\n<a href=\"https://frontendfoc.us/link/123058/rss\" style=\" color: #D94306; font-weight: 600;\">This browser-based tool</a> checks to see if the third-party code on your site is 'green' (renewable-based hosting, carbon impact, effective caching, etc).</li>\n\n\n</ul>\n\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n</td></tr></table>\n<table border=0 cellpadding=0 cellspacing=0 border=0 cellpadding=0 cellspacing=0><tr><td style=\" font-family: -apple-system,BlinkMacSystemFont,Helvetica,sans-serif; font-size: 15px; line-height: 1.55em;   \"></td></tr></table>\n\n            \n    </div>\n  </td></tr>\n</table>\n\n\n\n\n<img src=\"https://frontendfoc.us/open/540/rss\" width=\"1\" height=\"1\" />"
        ],
        "pubDate": [
            "Wed, 4 May 2022 00:00:00 +0000"
        ],
        "guid": [
            "https://frontendfoc.us/issues/540"
        ],
        "plainDescription": "[https://res.cloudinary.com/cpress/image/upload/v1602675575/hhmdxfk96fnbq3effjk1.png]\n[https://frontendfoc.us/link/123019/rss]\n\nFrontend Focus\n\n🇺🇦 # 540 — May 4, 2022 | Read on the web\n[https://fron...",
        "providerTitle": "Frontend Focus",
        "providerURL": "https://frontendfoc.us/",
        "providerIdx": 5
    },
    {
        "title": [
            "When to Use a Function Expression vs. Function Declaration"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/when-to-use-a-function-expression-vs-function-declaration/?utm_source=rss\"\n              title=\"When to Use a Function Expression vs. Function Declaration\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions.jpg\"\n        alt=\"Function Expressions vs Function Declaration\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn when to use function expressions vs. function declarations in JavaScript, and how these methods for defining functions are different.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/when-to-use-a-function-expression-vs-function-declaration/?utm_source=rss\">When to Use a Function Expression vs. Function Declaration</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/when-to-use-a-function-expression-vs-function-declaration/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259037",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Vanilla JavaScript"
        ],
        "dc:creator": [
            "Paul Wilkins"
        ],
        "pubDate": [
            "Tue, 22 Mar 2022 00:16:15 GMT"
        ],
        "plainDescription": "Function Expressions vs Function Declaration\n[https://uploads.sitepoint.com/wp-content/uploads/2022/03/1647936777functions.jpg]\n[https://www.sitepoint.com/when-to-use-a-function-expression-vs-function...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Create Your Own VPN Server in 10 Minutes with Vultr & OpenVPN"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-your-own-vpn-server/?utm_source=rss\"\n              title=\"Create Your Own VPN Server in 10 Minutes with Vultr & OpenVPN\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a.jpg\"\n        alt=\"Setting up a cloud VPN server with Vultr\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a-300x158.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a-1024x538.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a-768x403.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Create your own VPN server with Vultr and OpenVPN. Learn to set up a new virtual machine, configure OpenVPN, and test your new setup.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-your-own-vpn-server/?utm_source=rss\">Create Your Own VPN Server in 10 Minutes with Vultr & OpenVPN</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-your-own-vpn-server/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=260098",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Computing",
            "Developer Tools",
            "Essential Tools",
            "Web",
            "Web Security"
        ],
        "dc:creator": [
            "SitePoint Sponsors"
        ],
        "pubDate": [
            "Wed, 27 Apr 2022 19:06:29 GMT"
        ],
        "plainDescription": "Setting up a cloud VPN server with Vultr\n[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1651111457vpn-a.jpg]\n[https://www.sitepoint.com/create-your-own-vpn-server/?utm_source=rss] Create\nyo...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Caleb Olojo"
        ],
        "title": [
            "Dynamic Data-Fetching In An Authenticated Next.js App"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/dynamic-data-fetching-authenticated-nextjs-app/"
        ],
        "pubDate": [
            "Fri, 08 Apr 2022 12:00:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/dynamic-data-fetching-authenticated-nextjs-app/"
        ],
        "description": [
            "Data is among the most important things that make up a web application or a conventional native app. We need data to be able to see and perhaps understand the purpose of an application. In this article, we’ll look at another approach to obtaining data in an application that requires authentication or authorization using Next.js."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/dynamic-data-fetching-authenticated-nextjs-app/\" />\n              <title>Dynamic Data-Fetching In An Authenticated Next.js App</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>Dynamic Data-Fetching In An Authenticated Next.js App</h1>\n                  \n                    \n                    <address>Caleb Olojo</address>\n                  \n                  <time datetime=\"2022-04-08T12:00:00&#43;00:00\" class=\"op-published\">2022-04-08T12:00:00+00:00</time>\n                  <time datetime=\"2022-04-08T12:00:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>Next.js has five types of data-fetching patterns for determining how you want content to be seen in your application: static-site generation (SSG), server-side rendering (SSR), client-side rendering (CSR), incremental static regeneration (ISR), and dynamic routing.</p>\n\n<p>You can choose whichever of these patterns that suits the structure of your application. To learn more about these patterns, read about them in the <a href=\"https://nextjs.org/docs/basic-features/data-fetching/overview\">official documentation</a>.</p>\n\n<p>This article focuses on static-site generation and dynamic routing. Using these patterns requires the use of the <code>getStaticProps</code> and <code>getStaticPaths</code> data-fetching methods. These methods play unique roles in obtaining data.</p>\n\n<p>We’ve been talking about dynamic data for a while now. Let’s understand what that truly means.</p>\n\n<p>Say we have a list of users in an application being rendered on a web page, and we want to get information unique to a user when we click on their name &mdash; the information we get would change according to the action we perform (clicking on the user’s name).</p>\n\n<p>We want a way to render that data on a unique page (or screen) in the application, and the <code>getStaticPaths</code> data-fetching method allows us to obtain data that is unique to a user. This is usually common in an array of user objects with a unique key (<code>id</code> or <code>_id</code>), depending on how the response object is structured.</p>\n\n<pre><code class=\"language-javascript\">export async function getStaticPaths() {\n  return {\n    paths: {\n      [{\n        params: {\n          uniqueId: id.toString()\n        }\n      }],\n      fallback: false\n    }\n  }\n}</code></pre>\n\n<p>The unique key obtained from the <code>getStaticPaths</code> method (commonly referred to as the parameter, or params for short) is passed as an argument through the <code>context</code> parameter in <code>getStaticProps</code>.</p>\n\n<p>This brings us back to the fact that <code>getStaticPaths</code> cannot work without <code>getStaticProps</code>. Both of them function together, because you’ll need to pass the unique <code>id</code> from the statically generated path as an argument to the <code>context</code> parameter in <code>getStaticProps</code>. The code snippet below illustrates this:</p>\n\n<pre><code class=\"language-javascript\">export async function getStaticProps(context) {\n  return {\n    props: {\n      userData: data,\n    },\n  }\n}</code></pre>\n\n<h2 id=\"the-cons-of-using-the-native-data-fetching-methods-of-next-js\">The Cons of Using the Native Data-Fetching Methods Of Next.js</h2>\n\n<p>Now that we understand a little about dynamic data-fetching in Next.js, let’s look at the cons of using the two aforementioned data-fetching methods.</p>\n\n<p>Getting data from a public API that requires no authorization with some sort of API key during data-fetching can be done with <code>getStaticProps</code> and <code>getStaticPaths</code>.</p>\n\n<p>Take a look at both of them below:</p>\n\n<pre><code class=\"language-javascript\">// getStaticPaths\nexport async function getStaticPaths() {\n  const response = fetch(\"https://jsonplaceholder.typicode.com/users\")\n  const userData = await response.json()\n\n // Getting the unique key of the user from the response\n // with the map method of JavaScript.\n  const uniqueId = userData.map((data) =&gt; {\n    return data.id\n  })\n\n  return {\n    paths: {\n      [{\n        params: {\n          uniqueId: uniqueId.toString()\n        }\n      }],\n      fallback: false\n    }\n  }\n}</code></pre>\n\n<p>You’ll notice that the unique <code>id</code> is gotten from the <code>map</code> method of JavaScript, and we’re going to assign it as a value through the <code>context</code> parameter of <code>getStaticProps</code>.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">export async function getStaticProps(context) {\n  // Obtain the user’s unique ID.\n  const userId = context.params.uniqueId\n\n  // Append the ID as a parameter to the API endpoint.\n  const response = fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)\n  const userData = await response.json()\n  return {\n    props: {\n      userData,\n    },\n  }\n}</code></pre>\n</div>\n\n<p>In the snippet above, you’ll see that a variable named <code>userId</code> was initialized, and its value was gotten from the <code>context</code> parameter.</p>\n\n<p>That value is then added as a parameter to the base URL of the API.</p>\n\n<p><strong>Note:</strong> The <code>getStaticProps</code> and <code>getStaticPaths</code> data-fetching methods may only be exported from a file in the <code>pages</code> folder of Next.js.</p>\n\n<p>That pretty much does it for a public API. But when you’re building an application that requires the user to log in, log out, and perhaps perform some data-fetching in the application when they log in with their account, the application flow is different.</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p>Meet <strong><a data-instant href=\"/printed-books/image-optimization/\">Image Optimization</a></strong>, Addy Osmani’s brand new practical guide to optimizing and delivering <strong>high-quality images</strong> on the web. From formats and compression to delivery and maintenance: everything in one single <strong>528-pages</strong> book.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/image-optimization/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/2c669cf1-c6ef-4c87-9901-018b04f7871f/image-optimization-shop-cover-opt.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/87fd0cfa-692e-459c-b2f3-15209a1f6aa7/image-optimization-shop-cover-opt.png\"\n    alt=\"Feature Panel\"\n    width=\"480\"\n    height=\"697\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"fetching-data-in-an-authenticated-system\">Fetching Data in an Authenticated System.</h2>\n\n<p>The flow of obtaining data in an authenticated system is quite different from the normal way we get data from a public API.</p>\n\n<p>Picture this scenario: A user logs into a web app and then visits their profile. On their profile page (once it is rendered), they’re able to see and alter the information that they provided when signing up.</p>\n\n<p>For this to happen, there has to be some sort of verification of the data that is being sent to the user by the developer who built the interface. Luckily, there’s a common pattern for authorizing a user when they log into a system: JSON Web Tokens (JWTs).</p>\n\n<p>When a user signs up to use your application for the first time, their details are stored in the database, and a unique JWT is assigned to that user’s schema (depending on how the back-end API has been designed).</p>\n\n<p>When the user tries to log into your app, and their credentials match what they originally signed up with, the next thing we front-end engineers have to do is provide an authentication state for the user, so that we can obtain the required details, one of which is the JWT.</p>\n\n<p>There are different schools of thought on how to preserve a user’s <code>auth-state</code>, including using Redux, Composition in React, and React’s Context API (I’d recommend the Context API). <a href=\"https://www.smashingmagazine.com/2021/08/state-management-nextjs/\">Átila Fassina’s article</a> goes over state-management paradigms in Next.js.</p>\n\n<p>The common approach is to store the JWT in <code>localStorage</code> &mdash; to get started at least, if we’re considering the issue of security in a strict manner. Storing your JWT in an <code>httpOnly</code> cookie is advisable, to prevent security attacks such as a cross-site request forgery (CSRF) and cross-site scripting (XSS).</p>\n\n<p>Once again, this approach can only be possible if the appropriate cookie middleware is provided in the API that the back-end engineers have built.</p>\n\n<p>If you don’t want to go through the hassle of figuring out how the back-end engineers have designed an API, an alternative route to authentication in Next.js is to make use of the open-source authentication project NextAuth.js.</p>\n\n<p>Once the token is in <code>localStorage</code> on the client side, the API calls that require the user token as a means of authorization can go through, without throwing a 501 (unauthorized) error.</p>\n\n<pre><code class=\"language-javascript\">headers: {\n  \"x-auth-token\": localStorage.getItem(\"token\")\n}</code></pre>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"data-fetching-with-the-userouter-hook\">Data-Fetching With the <code>useRouter</code> Hook</h2>\n\n<p>In the first section, we saw how the process of dynamic data-fetching works in Next.js for an application that doesn’t require authentication.</p>\n\n<p>In this section, we’ll look at how to bypass the issue of the <code>getStaticProps</code> and <code>getStaticPaths</code> data-fetching methods throwing a <code>referenceError</code> (“<code>localStorage</code> is undefined”) when we try to get the user’s token from <code>localStorage</code>.</p>\n\n<p>This error occurs because the two data-fetching methods are always running on the server in the background, which, in turn, makes the <code>localStorage</code> object unavailable to them, because it is on the client side (in the browser).</p>\n\n<p>The router API of Next.js creates a lot of possibilities when we we’re dealing with dynamic routes and data. With the <code>useRouter</code> hook, we should be able to get data that is unique to a user based on their unique ID.</p>\n\n<p>Let’s look at the snippet below to get started:</p>\n\n<pre><code class=\"language-javascript\">// pages/index.js\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { userEndpoints } from \"../../../routes/endpoints\";\nimport Link from \"next/link\";\n\nconst Users = () =&gt; {\n  const [data, setData] = React.useState([])\n  const [loading, setLoading] = React.useState(false)\n\n  const getAllUsers = async () =&gt; {\n    try {\n      setLoading(true);\n      const response = await axios({\n        method: \"GET\",\n        url: userEndpoints.getUsers,\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const { data } = response.data;\n      setData(data);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  return (\n    &lt;React.Fragment&gt;\n      &lt;p&gt;Users list&lt;/p&gt;\n      {data.map((user) =&gt; {\n          return (\n            &lt;Link href={`/${user._id}`} key={user._id}&gt;\n              &lt;div className=\"user\"&gt;\n                &lt;p className=\"fullname\"&gt;{user.name}&lt;/p&gt;\n                &lt;p className=\"position\"&gt;{user.role}&lt;/p&gt;\n              &lt;/div&gt;  \n            &lt;/Link&gt;\n          );\n        })}\n    &lt;/React.Fragment&gt;\n  );\n};\n\nexport default Users;</code></pre>\n\n<p>In the snippet above, we’ve used the <code>useEffect</code> hook to get the data once the page is rendered for the first time. You’ll also notice that the JWT is assigned to the <code>x-auth-token</code> key in the request header.</p>\n\n<p>When we click on a user, the <code>Link</code> component will route us to a new page based on the user’s unique ID. Once we’re on that page, we want to render the information that is specifically available for that user with the <code>id</code>.</p>\n\n<p>The <code>useRouter</code> hook gives us access to the <code>pathname</code> in the URL tab of the browser. With that in place, we can get the query parameter of that unique route, which is the <code>id</code>.</p>\n\n<p>The snippet below illustrates the whole process:</p>\n\n<pre><code class=\"language-javascript\">// [id].js\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport axios from \"axios\";\nimport { userEndpoints } from \"../../../routes/endpoints\";\nimport { useRouter } from \"next/router\";\n\nconst UniqueUser = () =&gt; {\n  const [user, setUser] = React.useState({\n    fullName: \"\",\n    email: \"\",\n    role: \"\",\n  });\n  const [loading, setLoading] = React.useState(false);\n  const { query } = useRouter();\n\n  // Obtaining the user’s unique ID with Next.js'\n  // useRouter hook.\n  const currentUserId = query.id;\n\n  const getUniqueUser = async () =&gt; {\n    try {\n      setLoading(true);\n      const response = await axios({\n        method: \"GET\",\n        url: `${userEndpoints.getUsers}/${currentUserId}`,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      });\n      const { data } = response.data;\n      setUser(data);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  React.useEffect(() =&gt; {\n    getUniqueUser();\n  }, []);\n\n  return (\n    &lt;React.Fragment&gt;\n      &lt;Head&gt;\n        &lt;title&gt;\n          {`${user.fullName}'s Profile | \"Profile\" `}\n        &lt;/title&gt;\n      &lt;/Head&gt;\n        &lt;div&gt;\n          &lt;div className=\"user-info\"&gt;\n            &lt;div className=\"user-details\"&gt;\n              &lt;p className=\"fullname\"&gt;{user.fullName}&lt;/p&gt;\n              &lt;p className=\"role\"&gt;{user.role}&lt;/p&gt;\n              &lt;p className=\"email\"&gt;{user.email}&lt;/p&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      )}\n    &lt;/React.Fragment&gt;\n  );\n};\nexport default UniqueUser;</code></pre>\n\n<p>In the snippet above, you’ll see that we’ve destructured the query object from the <code>useRouter</code> hook, which we’ll be using to get the user’s unique ID and pass it as an argument to the API endpoint.</p>\n\n<pre><code class=\"language-javascript\">const {query} = useRouter()\nconst userId = query.id</code></pre>\n\n<p>Once the unique ID is appended to the API endpoint, the data that is meant for that user will be rendered once the page is loaded.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>Data-fetching in Next.js can get complicated if you don’t fully understand the use case of your application.</p>\n\n<p>I hope this article has helped you understand how to use the router API of Next.js to get dynamic data in your applications.</p>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il, al)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Data is among the most important things that make up a web application or a\nconventional native app. We need data to be able to see and perhaps understand\nthe purpose of an application. In this articl...",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "I just graduated from college as a software developer but now i feel exhausted"
        ],
        "dc:creator": [
            "jimmy706"
        ],
        "pubDate": [
            "Thu, 05 May 2022 13:17:32 +0000"
        ],
        "link": [
            "https://dev.to/jimmy706/i-just-graduated-from-college-as-a-software-developer-but-now-i-feel-exhausted-2aai"
        ],
        "guid": [
            "https://dev.to/jimmy706/i-just-graduated-from-college-as-a-software-developer-but-now-i-feel-exhausted-2aai"
        ],
        "description": [
            "<p>Hello world! I am just graduated this April and have been working as a web developer since 2020, mostly working remote due to Covid-19. I just moved to office recently but feeling really exhausted. Day by day i just working common tasks like write some APIs or create some UIs and i feel like my boss and co-worker underestimate me by the way they mocking me every day at work. Also i worked in a small country that have really low salary (mine about 5000$/year). Recently i really tresses out because i don't feel that my effort on work got paid me enough and I want to find a better path like doing freelancing or working for global companies to having better experiences and better income. Where should i started?</p>\n\n"
        ],
        "category": [
            "career"
        ],
        "plainDescription": "Hello world! I am just graduated this April and have been working as a web\ndeveloper since 2020, mostly working remote due to Covid-19. I just moved to\noffice recently but feeling really exhausted. Da...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "Collective #710"
        ],
        "link": [
            "https://tympanus.net/codrops/collective/collective-710/"
        ],
        "dc:creator": [
            "Mary Lou"
        ],
        "pubDate": [
            "Thu, 05 May 2022 10:53:13 +0000"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?post_type=collective&p=63530",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>[Array Builder] * Scrollex * Grid Tile Patterns * RemixPress * Just Join IT</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-710/\">Collective #710</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://eringwesley.com/\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_WOTW.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63556\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://eringwesley.com/\">Inspirational Website of the Week: Erin Wesley</a></h2>\n<p class=\"ct-coll-p\">Elegance and sophisticated design elements, fine typography and lovely effects make this website a great web experience.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://eringwesley.com/\">Get inspired</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n        <script async=\"\" type=\"text/javascript\" src=\"//cdn.carbonads.com/carbon.js?serve=CKYIK53I&amp;placement=codrops\" id=\"_carbonads_js\"></script><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.arraybuilder.com/\"><img loading=\"lazy\" width=\"350\" height=\"233\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_array.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63533\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.arraybuilder.com/\">[Array Builder]</a></h2>\n<p class=\"ct-coll-p\">Array Builder is a free tool to visualize the returned values of array transformations and computations made from map/filter/reduce.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.arraybuilder.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://offscreencanvas.com/issues/005/\"><img loading=\"lazy\" width=\"350\" height=\"256\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_patterns.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63540\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://offscreencanvas.com/issues/005/\">Grid Tile Patterns</a></h2>\n<p class=\"ct-coll-p\">Daniel Velasquez is exploring infinite patterns made from grids.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://offscreencanvas.com/issues/005/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://9elements.com/blog/combined-aspect-ratio-grid/\"><img loading=\"lazy\" width=\"350\" height=\"226\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_aspectratio.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63553\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://9elements.com/blog/combined-aspect-ratio-grid/\">Building a combined CSS-aspect-ratio-grid</a></h2>\n<p class=\"ct-coll-p\">Nils Binder shares the solution to a tricky problem using CSS aspect-ratio.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://9elements.com/blog/combined-aspect-ratio-grid/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://scrollex-docs.vercel.app/\"><img loading=\"lazy\" width=\"350\" height=\"253\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_scrollex.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63542\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://scrollex-docs.vercel.app/\">Scrollex</a></h2>\n<p class=\"ct-coll-p\">Scrollex is a react library that lets you build beautiful scroll experiences using minimal code.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://scrollex-docs.vercel.app/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fundomo.com/\"><img loading=\"lazy\" width=\"350\" height=\"269\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_julian.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63554\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.fundomo.com/\">Fundomo</a></h2>\n<p class=\"ct-coll-p\">A fantastic project made by Julian Garnier made with Three.js and Anime.js. Read more about it <a href=\"Julian Garnier\">here</a>.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.fundomo.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://david-hckh.com/\"><img loading=\"lazy\" width=\"350\" height=\"297\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_david.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63535\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://david-hckh.com/\">David: Creative Developer</a></h2>\n<p class=\"ct-coll-p\">The amazing portfolio of David Heckhoff made with fantastic WebGL 3D animation.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://david-hckh.com/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.raymondcamden.com/2022/05/02/building-table-sorting-and-pagination-in-alpinejs\"><img loading=\"lazy\" width=\"350\" height=\"217\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_sorting.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63543\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.raymondcamden.com/2022/05/02/building-table-sorting-and-pagination-in-alpinejs\">Building Table Sorting and Pagination in Alpine.js</a></h2>\n<p class=\"ct-coll-p\">Learn how to build a sortable, paged, dynamic table in Alpine.js. By Raymond Camden.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.raymondcamden.com/2022/05/02/building-table-sorting-and-pagination-in-alpinejs\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://taniarascia.substack.com/p/using-the-web-audio-api-to-turn-my\"><img loading=\"lazy\" width=\"350\" height=\"288\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_accordion.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63552\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://taniarascia.substack.com/p/using-the-web-audio-api-to-turn-my\">Using the Web Audio API to Turn my Keyboard into an Instrument</a></h2>\n<p class=\"ct-coll-p\">Tania Rascia shows how she built <a href=\"https://www.keyboardaccordion.com/\">Keyboard Accordion</a> with Svelte to make a musical keyboard.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://taniarascia.substack.com/p/using-the-web-audio-api-to-turn-my\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.design/\"><img loading=\"lazy\" width=\"350\" height=\"210\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_stacks.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63545\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://stackoverflow.design/\">Stacks</a></h2>\n<p class=\"ct-coll-p\">Stacks provides everything you need to quickly design, build, and ship coherent experiences across all of Stack Overflow.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://stackoverflow.design/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://moderncss.dev/contextual-spacing-for-intrinsic-web-design/\"><img loading=\"lazy\" width=\"350\" height=\"241\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_stephanie.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63546\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://moderncss.dev/contextual-spacing-for-intrinsic-web-design/\">Contextual Spacing For Intrinsic Web Design</a></h2>\n<p class=\"ct-coll-p\">Stephanie Eckles shows how to use adaptive, contextual spacing techniques to deal with the unpredictability of browser environments.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://moderncss.dev/contextual-spacing-for-intrinsic-web-design/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://dark-side.webflow.io/\"><img loading=\"lazy\" width=\"350\" height=\"260\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_darkside.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63534\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://dark-side.webflow.io/\">Dark side</a></h2>\n<p class=\"ct-coll-p\">Learn how to code a dark mode toggle that persists in the browser. By Roy Quilor.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://dark-side.webflow.io/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/a-ahandani/remixpress\"><img loading=\"lazy\" width=\"350\" height=\"179\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_remix.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63555\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/a-ahandani/remixpress\">RemixPress</a></h2>\n<p class=\"ct-coll-p\">RemixPress is a presentation layer built with React, Remix, MUI and GraphQl that works with Wordress as a headless CMS.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/a-ahandani/remixpress\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://lists.sh/\"><img loading=\"lazy\" width=\"350\" height=\"228\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_lists.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63539\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://lists.sh/\">lists.sh</a></h2>\n<p class=\"ct-coll-p\">A simple microblog for lists.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://lists.sh/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://planby.netlify.app/\"><img loading=\"lazy\" width=\"350\" height=\"202\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_planby.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63541\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://planby.netlify.app/\">Planby</a></h2>\n<p class=\"ct-coll-p\">Planby is a React based component that lets you implement your own Timeline. Learn more about it in <a href=\"https://worldofreact.hashnode.dev/electronic-program-guide-react-planby\">this tutorial</a> by Karol Kozer.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://planby.netlify.app/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Kira272921/snipli\"><img loading=\"lazy\" width=\"350\" height=\"182\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_snipli.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63557\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://github.com/Kira272921/snipli\">Snipli</a></h2>\n<p class=\"ct-coll-p\">A command-line interface for quickly sharing code snippets of your local files.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Kira272921/snipli\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.mozilla.org/en/internet-culture/how-to-delete-instagram-facebook-online-accounts/\"><img loading=\"lazy\" width=\"350\" height=\"255\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_springcleaning.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63544\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://blog.mozilla.org/en/internet-culture/how-to-delete-instagram-facebook-online-accounts/\">Internet spring cleaning: How to delete Instagram, Facebook and other accounts</a></h2>\n<p class=\"ct-coll-p\">Some tips on how to remove online clutter and delete your accounts on some social media platforms, specifically, the ones who use and abuse your data.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://blog.mozilla.org/en/internet-culture/how-to-delete-instagram-facebook-online-accounts/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://justjoin.it/\"><img loading=\"lazy\" width=\"350\" height=\"278\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_jobs.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63538\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://justjoin.it/\">Just Join IT</a></h2>\n<p class=\"ct-coll-p\">A new job board for Europe&#8217;s tech industry.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://justjoin.it/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://merely.xyz/games/\"><img loading=\"lazy\" width=\"350\" height=\"264\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_games.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63536\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://merely.xyz/games/\">User friendly web games</a></h2>\n<p class=\"ct-coll-p\">A collection of user friendly web games that are not overly addictive.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://merely.xyz/games/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://cpojer.net/posts/building-a-javascript-bundler\"><img loading=\"lazy\" width=\"350\" height=\"219\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_tutorial.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63548\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://cpojer.net/posts/building-a-javascript-bundler\">Building a JavaScript Bundler</a></h2>\n<p class=\"ct-coll-p\">Learn the basics of building a JavaScript bundler in this tutorial by Christoph Nakazawa.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://cpojer.net/posts/building-a-javascript-bundler\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://codersblock.com/blog/deep-dive-into-text-wrapping-and-word-breaking/\"><img loading=\"lazy\" width=\"350\" height=\"231\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_wrap.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63551\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://codersblock.com/blog/deep-dive-into-text-wrapping-and-word-breaking/\">Deep Dive into Text Wrapping and Word Breaking</a></h2>\n<p class=\"ct-coll-p\">Learn about all the different ways to control how text wraps with CSS.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://codersblock.com/blog/deep-dive-into-text-wrapping-and-word-breaking/\">Read it</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://www.textualize.io/\"><img loading=\"lazy\" width=\"350\" height=\"260\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_textual.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63547\"></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://www.textualize.io/\">Textualize</a></h2>\n<p class=\"ct-coll-p\">Projects that help make the terminal more powerful and beautiful.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://www.textualize.io/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://ciechanow.ski/mechanical-watch/\"><img loading=\"lazy\" width=\"350\" height=\"342\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_watch.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63549\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_watch.jpg 350w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_watch-307x300.jpg 307w\" sizes=\"(max-width: 350px) 100vw, 350px\" /></a></p>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://ciechanow.ski/mechanical-watch/\">Mechanical Watch</a></h2>\n<p class=\"ct-coll-p\">A beautifully illustrated guide on how to build a mechanical watch by Bartosz Ciechanowski.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://ciechanow.ski/mechanical-watch/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_websitesroundup.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63550\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/\">Inspirational Websites Roundup #37</a></h2>\n<p class=\"ct-coll-p\">A special selection of the most creative websites with the finest designs from the past couple of weeks to keep you up-to-date on the current trends.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/05/04/inspirational-websites-roundup-37/\">Check it out</a><br />\n</article>\n</div>\n<div class=\"ct-coll-item\">\n<hr class=\"ct-coll-emailsep\" style=\"border: 0; margin: 40px auto;\">\n<article>\n <a class=\"ct-coll-thumb\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/\"><img loading=\"lazy\" width=\"350\" height=\"262\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/05/C710_intro.jpg\" alt=\"Collective 710 item image\" class=\"wp-image-63537\"></a></p>\n<div class=\"ct-coll-sponsorship\">From Our Blog</div>\n<h2><a target=\"_blank\" rel=\"noopener\" style=\"display: block; padding: 1rem 0 0; text-decoration: none;\" href=\"https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/\">Image Trail Animation for an Intro</a></h2>\n<p class=\"ct-coll-p\">An experimental concept with an initial loader, a trail effect and an intro screen that animates to a new layout using GSAP&#8217;s Flip plugin.</p>\n<p><a class=\"ct-coll-link\" target=\"_blank\" rel=\"noopener\" href=\"https://tympanus.net/codrops/2022/05/03/image-trail-animation-for-an-intro/\">Check it out</a><br />\n</article>\n</div>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/collective/collective-710/\">Collective #710</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "[Array Builder] * Scrollex * Grid Tile Patterns * RemixPress * Just Join IT\n\nThe post Collective #710\n[https://tympanus.net/codrops/collective/collective-710/] appeared first on\nCodrops [https://tympa...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "How to Quickly Start a Django Project and a Django App"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/start-django-project-app/?utm_source=rss\"\n              title=\"How to Quickly Start a Django Project and a Django App\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project.jpg\"\n        alt=\"How to Quickly Start a Django Project and a Django App\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn the difference between Django projects and apps, and how to start a Django project, run a Django server, create a Django app, and more.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/start-django-project-app/?utm_source=rss\">How to Quickly Start a Django Project and a Django App</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/start-django-project-app/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=241817",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Daniel Diaz"
        ],
        "pubDate": [
            "Thu, 02 Dec 2021 03:00:13 GMT"
        ],
        "plainDescription": "How to Quickly Start a Django Project and a Django App\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638432445django-project.jpg]\n[https://www.sitepoint.com/start-django-project-app/?utm_...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "What is PHP CS Fixer and how it can help you keep your code cleaner"
        ],
        "dc:creator": [
            "Andrew Savetchuk"
        ],
        "pubDate": [
            "Thu, 05 May 2022 12:38:09 +0000"
        ],
        "link": [
            "https://dev.to/andrewsavetchuk/what-is-php-cs-fixer-and-how-it-can-help-you-keep-your-code-cleaner-624"
        ],
        "guid": [
            "https://dev.to/andrewsavetchuk/what-is-php-cs-fixer-and-how-it-can-help-you-keep-your-code-cleaner-624"
        ],
        "description": [
            "<h2>\n  \n  \n  What is PHP CS Fixer​\n</h2>\n\n<p>PHP CS Fixer stands for <strong>PHP Coding Standards Fixer</strong>. This is a tool that fixes your code to follow standards. There are various PHP coding standards that you can follow, such as the popular <a href=\"https://www.php-fig.org/psr/psr-1/\">PSR-1,</a> and <a href=\"https://www.php-fig.org/psr/psr-12/\">PSR-12</a> published by the PHP Framework Interoperability Group (the full list of PSR standards can be found <a href=\"https://www.php-fig.org/psr/\">here</a>). </p>\n\n<p>There are also other community-driven standards like the <a href=\"https://symfony.com/doc/current/contributing/code/standards.html\">Symphony</a>.</p>\n\n<p>With PHP CS Fixer, you can follow multiple coding standards at once, or you can also define your own or your team's own coding standard through configuration. If you have ever worked with JavaScript and Eslint in particular, think of PHP CS Fixer as an alternative to Eslint for PHP.</p>\n\n<p>Manually fixing coding standards in your code is a very tedious process, so PHP CS Fixer is a great solution. It helps you and your team ensure that you all follow the same rules when writing code, thus keeping it cleaner.</p>\n\n<h2>\n  \n  \n  Installation​\n</h2>\n\n<p>The recommended way to install PHP CS Fixer is to use <a href=\"https://getcomposer.org/download/\">Composer</a> in a dedicated directory in your project, for example in the <code>tools/php-cs-fixer</code>.<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code><span class=\"nb\">mkdir</span> <span class=\"nt\">--parents</span> tools/php-cs-fixer\ncomposer require <span class=\"nt\">--working-dir</span><span class=\"o\">=</span>tools/php-cs-fixer friendsofphp/php-cs-fixer\n</code></pre>\n\n</div>\n\n\n\n<p>For more details and other installation methods, see <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/installation.rst\">installation instructions</a>.</p>\n\n<h2>\n  \n  \n  Usage\n</h2>\n\n<h3>\n  \n  \n  Usage: Option 1​\n</h3>\n\n<p>Assuming you installed PHP CS Fixer as instructed above, you can run the following command to fix the files PHP files in the <code>src</code> directory:<br>\n</p>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight shell\"><code>tools/php-cs-fixer/vendor/bin/php-cs-fixer fix src\n</code></pre>\n\n</div>\n\n\n\n<p>See <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/usage.rst\">usage</a>, list of <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/rules/index.rst\">built-in rules</a>, list of <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/ruleSets/index.rst\">rule sets</a>, and <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/config.rst\">configuration file</a> documentation for more details. If you need to apply code styles that are not supported by the tool, you can <a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/doc/custom_rules.rst\">create custom rules</a>.</p>\n\n<h3>\n  \n  \n  Usage: Option 2 (Editor Integration)​\n</h3>\n\n<p>However, executing a command manually does not seem to be a convenient approach. I personally prefer to run PHP CS Fixer by pressing a pre-configured keyboard shortcut in PHP Storm.</p>\n\n<p>You can configure PHP CS Fixer for various code editors as described below:</p>\n\n<ul>\n<li><a href=\"https://github.com/Glavin001/atom-beautify\">Atom</a></li>\n<li><a href=\"https://plugins.netbeans.apache.org/catalogue/?id=36\">NetBeans</a></li>\n<li><a href=\"https://www.jetbrains.com/help/phpstorm/using-php-cs-fixer.html\">PhpStorm</a></li>\n<li><a href=\"https://github.com/benmatselby/sublime-phpcs\">Sublime Text</a></li>\n<li><a href=\"https://github.com/stephpy/vim-php-cs-fixer\">Vim</a></li>\n<li><a href=\"https://github.com/junstyle/vscode-php-cs-fixer\">VS Code</a></li>\n</ul>\n\n<h3>\n  \n  \n  Usage: Option 3 (Run PHP CS Fixer on every commit)​\n</h3>\n\n<p>As an alternative option, you can fix your code on every commit using <a href=\"https://www.npmjs.com/package/husky\">Husky</a> and <a href=\"https://www.npmjs.com/package/lint-staged\">lint-staged</a>. Using these tools PHP CS Fixer will run on your staged files, in other words, on the files you want to commit. <a href=\"https://sebastiandedeyne.com/running-php-cs-fixer-on-every-commit-with-husky-and-lint-staged/\">Here is a great article</a> explaining how to set up these tools to work with PHP CS Fixer.</p>\n\n<h2>\n  \n  \n  Easy way of configuring PHP CS Fixer​\n</h2>\n\n<p>If you are new to PHP Coding Standards and want to quickly configure PHP CS Fixer, I highly recommend using <a href=\"https://mlocati.github.io/php-cs-fixer-configurator/\">PHP CS Fixer Configurator</a> by <a href=\"https://github.com/mlocati\">Michele Locati</a>. It has a pre-defined set of rules that you can select and create your own configuration.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3l1HU0Nk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8wo0hu8wciq6140et50.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--3l1HU0Nk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s8wo0hu8wciq6140et50.png\" alt=\"PHP CS Fixer Configurator\" width=\"880\" height=\"578\"></a></p>\n\n<p>Most rules, when clicked, will display general information about the rule, available configuration options, and usage examples. The PHP CS Fixer configuration file generated by this tool can be exported to use in your project and then imported again in case you want to do some modifications.</p>\n\n<p><a href=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_nnUAPrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7g7xrsl2o8sngb98i65.png\" class=\"article-body-image-wrapper\"><img src=\"https://res.cloudinary.com/practicaldev/image/fetch/s--_nnUAPrG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7g7xrsl2o8sngb98i65.png\" alt=\"PHP CS Fixer Configurator\" width=\"880\" height=\"578\"></a></p>\n\n<h2>\n  \n  \n  Source\n</h2>\n\n<ol>\n<li><a href=\"https://github.com/FriendsOfPHP/PHP-CS-Fixer\">FriendsOfPHP/PHP-CS-Fixer: A tool to automatically fix PHP Coding Standards issues</a></li>\n<li><a href=\"https://mlocati.github.io/php-cs-fixer-configurator/\">PHP-CS-Fixer Configurator</a></li>\n</ol>\n\n\n\n\n<p>The end. I hope you found this article helpful. Stay tuned for more content!</p>\n\n<p>If you want to support me, you can <a href=\"https://www.buymeacoffee.com/AndrewSavetchuk\">buy me a coffee</a> :)</p>\n\n"
        ],
        "category": [
            "php",
            "backend",
            "tools"
        ],
        "plainDescription": "WHAT IS PHP CS FIXER\n\nPHP CS Fixer stands for PHP Coding Standards Fixer. This is a tool that fixes\nyour code to follow standards. There are various PHP coding standards that you\ncan follow, such as t...",
        "providerTitle": "Dev.to",
        "providerURL": "https://dev.to",
        "providerIdx": 3
    },
    {
        "title": [
            "What to Know Before Using Social Media APIs on Your Website"
        ],
        "link": [
            "https://speckyboy.com/what-to-know-before-using-social-media-apis-on-your-website/"
        ],
        "comments": [
            "https://speckyboy.com/what-to-know-before-using-social-media-apis-on-your-website/#respond"
        ],
        "dc:creator": [
            "Eric Karkovack"
        ],
        "pubDate": [
            "Mon, 02 May 2022 17:30:00 +0000"
        ],
        "category": [
            "Web Design",
            "Learn Web Development",
            "Social Media"
        ],
        "guid": [
            {
                "_": "https://speckyboy.com/?p=139522",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Tapping into a social media API shouldn't be taken lightly. There are some risks involved and scenarios where it's overkill.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/what-to-know-before-using-social-media-apis-on-your-website/\">What to Know Before Using Social Media APIs on Your Website</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>APIs (Application Programming Interfaces) are among the most powerful features of social media networks. They allow us to add both content and functionality to a website while taking advantage of their vast data capabilities.</p>\n<p>And developers have found all sorts of creative uses. For example, enabling users to log into a website via their existing Facebook account. It&#8217;s an added layer of convenience and means one less password for people to remember.</p>\n<p>Then there&#8217;s the ability to tie in with eCommerce, share live streaming events, and display your latest posts. Each of these items can be a valuable addition to a website. And that&#8217;s just the tip of the iceberg in terms of what&#8217;s possible.</p>\n<p>Even so, the choice of tapping into a social media API shouldn&#8217;t be taken lightly. There are some risks involved and scenarios where it&#8217;s overkill.</p>\n<p>With that in mind, let&#8217;s take a look at some things to consider before you make social media a part of your site.</p>\n\n\n<h2>Determine the Value and Purpose</h2>\n<p>The <a href=\"https://speckyboy.com/real-value-social-media-web-designers/\" target=\"_blank\" rel=\"noopener\">value</a> of social media content and functionality is subjective. What some would consider a &#8220;must-have&#8221; feature may be the opposite for others.</p>\n<p>Thus, it&#8217;s worth taking some time to think about what social features you want to implement. How do they fit in with the overall goals for your website?</p>\n<p>Ideally, they&#8217;ll serve a specific purpose, such as:</p>\n<ul>\n<li>Gaining followers and creating community;</li>\n<li>Increasing sales;</li>\n<li>Powering your multimedia content;</li>\n<li>Improving the user experience (UX);</li>\n</ul>\n<p>The answer will be different for everyone. And it will likely depend somewhat on the ease and cost of implementation. For example, will a given feature require a <a href=\"https://speckyboy.com/social-media-plugins-wordpress/\" target=\"_blank\" rel=\"noopener\">WordPress plugin</a> or custom code? Sometimes the benefits don&#8217;t justify the costs.</p>\n<p>If you find that social media adds real value to your website, great! Otherwise, you may want to look elsewhere for a boost.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/social-media-apis-01.jpg\" alt=\"A video camera with a Facebook Live logo\" width=\"900\" height=\"400\" /></p>\n<h2>To Push or Pull Content?</h2>\n<p>If you&#8217;ve decided to implement a social media API, the next question is where that content should originate from. In other words, is it something that could be efficiently self-hosted on your website or should it come from your social feed instead?</p>\n<p>Some content, such as videos, could theoretically be hosted directly. However, storage and bandwidth costs may be high. Therefore, embedding that same content from a service such as YouTube might be the better option.</p>\n<p>In other cases, pulling content from a social media API could be overkill. If your website utilizes a content management system (CMS), you may be better off creating content there and then pushing it to your desired networks.</p>\n<p>Aside from bandwidth-intensive items, mission-critical content should originate from your website. This provides full control over the content. Plus, it protects you against any downtime from <a href=\"https://speckyboy.com/pros-cons-building-websites-third-party-products/\" target=\"_blank\" rel=\"noopener\">third-party</a> providers.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/social-media-apis-02.jpg\" alt=\"A person uses Instagram\" width=\"900\" height=\"400\" /></p>\n<h2>Understand the Risks</h2>\n<p>If you pay attention to world happenings, you may have noticed that some social media companies don&#8217;t have the greatest of reputations. While policies vary from provider to provider, there are some fairly universal concerns to be aware of.</p>\n<p>Utilizing an API means you&#8217;re accepting some level of risk. Among them:</p>\n<h3>Privacy</h3>\n<p>While most social media APIs are technically free of charge, there is a cost when it comes to privacy. These services will generally gather data on both your website and its visitors.</p>\n<p>The data can be used for serving relevant ads, discovering user preferences, and generating demographic profiles. And it may be accessed by more than just that particular company. It could potentially be sold to anyone else willing to pay for it.</p>\n<p>This is both an ethical and a legal issue. Depending on where you are in the world (and where your visitors reside), there may be <a href=\"https://speckyboy.com/free-wordpress-plugins-legal-compliance/\" target=\"_blank\" rel=\"noopener\">compliance</a> requirements to think about.</p>\n<p>It&#8217;s important to know where social media companies stand on privacy. At the same time, it&#8217;s challenging to gain a clear understanding of individual policies and keep up with changes. Still, it&#8217;s worth researching.</p>\n<h3>Degraded Performance</h3>\n<p>Keeping your website performing at its best is a constant battle. And the more third-party APIs you integrate, the more potential for something to slow down your site.</p>\n<p>Even seemingly simple features like a Facebook or Twitter timeline can hamper performance. It might be that their servers experience slowness or output code that generates errors in the browser console.</p>\n<p>Either way, your site suffers the consequences.</p>\n<h3>Downtime and Breaking API Changes</h3>\n<p>What happens when an API experiences downtime? For one, it could mean that whatever features you&#8217;re counting on are temporarily unavailable. This could be disastrous for sites that rely on these systems.</p>\n<p>In addition, the big social media companies have been known to make major changes to their APIs. That often means having to adjust your code (or hope that the plugin you&#8217;re using is updated). Otherwise, you risk losing functionality.</p>\n<p>Even if rare, these situations seem inevitable. As such, you&#8217;ll want to pay close attention to the latest developments for the APIs you implement.</p>\n<p>Having a plan in place for how your site handles an API issue is also worthwhile. For instance, caching might keep things running until problems are resolved.</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/social-media-apis-03.jpg\" alt=\"Social media logos\" width=\"900\" height=\"400\" /></p>\n<h2>Use Social Media APIs Thoughtfully</h2>\n<p>There are plenty of great use cases for connecting your website to a social media API. They can bring a wealth of valuable content and functionality.</p>\n<p>However, it&#8217;s not always the best solution. You may find alternatives that better respect user privacy and avoid the performance overhead that comes with the territory.</p>\n<p>So, before you implement an API, consider the factors above and make sure it&#8217;s the right fit for your needs.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/what-to-know-before-using-social-media-apis-on-your-website/\">What to Know Before Using Social Media APIs on Your Website</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/what-to-know-before-using-social-media-apis-on-your-website/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "plainDescription": "Tapping into a social media API shouldn't be taken lightly. There are some risks\ninvolved and scenarios where it's overkill.\n\nThe post What to Know Before Using Social Media APIs on Your Website\n[http...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "Build a Hacker News Clone using React and HarperDB"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss\"\n              title=\"Build a Hacker News Clone using React and HarperDB\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker.jpg\"\n        alt=\"Build a Hacker News Clone using React and HarperDB\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Read Build a Hacker News Clone using React and HarperDB and learn JavaScript with SitePoint. Our web development and design tutorials, courses, and books will teach you HTML, CSS, JavaScript, PHP, Python, and more.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss\">Build a Hacker News Clone using React and HarperDB</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-harperdb-build-hacker-news-clone/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207378",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "React"
        ],
        "dc:creator": [
            "Kingsley Ubah"
        ],
        "pubDate": [
            "Mon, 18 Oct 2021 10:00:42 GMT"
        ],
        "plainDescription": "Build a Hacker News Clone using React and HarperDB\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634252431react-hacker.jpg]\n[https://www.sitepoint.com/react-harperdb-build-hacker-news-clo...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "5 Reasons You Should Adopt a Micro Frontend Architecture"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss\"\n              title=\"5 Reasons You Should Adopt a Micro Frontend Architecture\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg\"\n        alt=\"5 Reasons You Should Adopt a Micro-frontend Architecture\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            A micro frontend approach lets us split a frontend app into small, independent pieces. Learn five key reasons why this approach is so useful.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss\">5 Reasons You Should Adopt a Micro Frontend Architecture</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/micro-frontend-architecture-benefits/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=254179",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript",
            "Web"
        ],
        "dc:creator": [
            "Antonello Zanini"
        ],
        "pubDate": [
            "Wed, 08 Dec 2021 02:00:50 GMT"
        ],
        "plainDescription": "5 Reasons You Should Adopt a Micro-frontend Architecture\n[https://uploads.sitepoint.com/wp-content/uploads/2021/12/1638919155micro-frontends.jpg]\n[https://www.sitepoint.com/micro-frontend-architecture...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Understanding and Working with Submodules in Git"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss\"\n              title=\"Understanding and Working with Submodules in Git\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule.jpg\"\n        alt=\"Understanding and Working with Submodules in Git\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Git has a lot of power under the hood. Learn about submodules in Git, including what they are, how they work, and why they're so useful.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss\">Understanding and Working with Submodules in Git</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/git-submodules-introduction/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206915",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Tobias Günther"
        ],
        "pubDate": [
            "Thu, 30 Sep 2021 12:00:42 GMT"
        ],
        "plainDescription": "Understanding and Working with Submodules in Git\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632981785git-submodule.jpg]\n[https://www.sitepoint.com/git-submodules-introduction/?utm_sour...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #490"
        ],
        "link": [
            "https://css-weekly.com/issue-490/"
        ],
        "pubDate": [
            "Tue, 25 Jan 2022 15:07:19 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-490/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how Cascade Layers work, how to track site visitors using CSS Fingerprinting, how to detect at-rule support in CSS, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/01/introduction-css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Getting Started With CSS Cascade Layers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2022/01/introduction-css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/introduction-css-cascade-layers.png\" alt=\"Getting Started With CSS Cascade Layers\" /></a>\n\t\t\t\t\t\t<p>Stephanie Eckles gives a fantastic introduction to Cascade Layers, a new method of cascade management in CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/01/introduction-css-cascade-layers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://csstracking.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Fingerprint</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://csstracking.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/css-fingerprint.png\" alt=\"CSS Fingerprint\" /></a>\n\t\t\t\t\t\t<p>Oliver Brotchie explains how it’s possible to track and gather information on site visitors using the CSS Fingerprinting technique.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://csstracking.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/power-play\">Power. Play.</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/power-play\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/thecom-where-website-creators-build-collaborate-and-remix-their-work.png\" alt=\"Power. Play.\" /></a>\n\t\t\t\t\t\t<p><a href=\"https://cssw.io/power-play\">The.com</a> is the first website builder with access to all of the custom code you love, organized into a grid-based framework specifically engineered to show CSS/HTML—not hide it. Build powerful sites, create “Block” components, assign them variables, and endlessly duplicate, reuse, and own your work.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/power-play\">Start Building 🌈</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://web.dev/building-a-theme-switch-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building a Theme Switch Component</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Adam Argyle gives a foundational overview of building an adaptive and accessible theme switch component.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://web.dev/building-a-theme-switch-component/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.bram.us/2022/01/20/detect-at-rule-support-with-the-at-rule-function/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">The Future of CSS: Detect at-rule support with @supports at-rule(@keyword)</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Bramus Van Damme explains how to detect at-rule support in CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.bram.us/2022/01/20/detect-at-rule-support-with-the-at-rule-function/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2021/12/create-custom-range-input-consistent-browsers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Creating A Custom Range Input That Looks Consistent Across All Browsers</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Alyssa Holland takes a look at the quirkiness of the HTML range input and demonstrates how to style the input to look consistent across all major browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2021/12/create-custom-range-input-consistent-browsers/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ishadeed.com/article/building-components-svg-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Building UI Components With SVG and CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Ahmad Shadeed shows different use cases where you can use SVG along with HTML and CSS to build specific UI components.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ishadeed.com/article/building-components-svg-css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.scottohara.me/blog/2022/01/20/divisive.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Div Divisiveness</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Scott O&#8217;Hara gives an in-depth look at the div element and its versatility.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.scottohara.me/blog/2022/01/20/divisive.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/improve-product-accessibility\">Tools for Improving Product Accessibility</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/improve-product-accessibility\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2021/12/tools-for-improving-product-accessibility.jpg\" alt=\"Tools for Improving Product Accessibility\" /></a>\n\t\t\t\t\t\t<p>Learn about accessibility by joining Christian Heilmann and putting yourself in the shoes of your users. You&#8217;ll learn to develop products that are not only compliant with accessibility regulations but flexible for a spectrum of uses.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/improve-product-accessibility\">Learn more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-speedrun.netlify.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS Speedrun</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>CSS Speedrun is a small, fun puzzle game to test your knowledge of CSS selectors.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-speedrun.netlify.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codeadrian.github.io/clay.css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Clay.css</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Clay.css is a micro CSS utility that lets you ad inflated fluffy 3d claymorphism styles to any HTML element.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codeadrian.github.io/clay.css/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/ShadowShahriar/pen/YzrbBXg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSS 3D Donut 🍩</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/ShadowShahriar/pen/YzrbBXg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/css-3d-donut.jpg\" alt=\"CSS 3D Donut 🍩\" /></a>\n\t\t\t\t\t\t<p>S. Shahriar created an impressive, interactive, responsive 3D Donut with CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/ShadowShahriar/pen/YzrbBXg?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how Cascade Layers work, how to track site visitors using CSS\nFingerprinting, how to detect at-rule support in CSS, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Case Study: Windland — An Immersive Three.js Experience"
        ],
        "link": [
            "https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/"
        ],
        "dc:creator": [
            "Anderson Mancini"
        ],
        "pubDate": [
            "Mon, 25 Apr 2022 12:51:24 +0000"
        ],
        "category": [
            "Tutorials",
            "case-study",
            "three.js",
            "webgl"
        ],
        "guid": [
            {
                "_": "https://tympanus.net/codrops/?p=63363",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>A look into the making of a mini-city full of post effects and micro-interactions using Three.js.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/\">Case Study: Windland — An Immersive Three.js Experience</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>In this article we&#8217;ll look at the creation of a mini-city full of post effects and micro-interactions using Three.js. </p>\n\n\n\n<p><a href=\"https://windland-neotix.vercel.app/\">Visit Windland</a></p>\n\n\n\n<p>See <strong>how you can create your own</strong> using <a href=\"https://github.com/ektogamat/threejs-andy-bolierplate\">this free boilerplate</a>.</p>\n\n\n\n<h2><strong>Introduction</strong></h2>\n\n\n\n<p>I am an unconditional game lover. I&#8217;ve always dreamed of creating an interactive mini-city, using saturated colors, similar to SimCity and alike. The challenge was that I had neither enough 3D knowledge nor a library.</p>\n\n\n\n<p>At the end of 2021, I finally decided to fulfill an old desire and I took Bruno Simon&#8217;s course &#8211; <a href=\"https://threejs-journey.com/\">Three.js Journey</a>. I&#8217;m a designer who likes to program. I ended up discovering myself as a creative developer because of this course, where I was able to use part of my dormant knowledge of ActionScript 2.0, from the late Macromedia Flash.</p>\n\n\n\n<p>The entire project was created in approximately 2 weeks, between shifts at my work at Neotix. It felt amazing and I loved doing it, so I decided to share some interesting information about it, so that I could help in some way those who are at the beginning of this journey.</p>\n\n\n\n<h2><strong>Creative challenge</strong></h2>\n\n\n\n<p>It was crucial to use various post-processing effects present in games to give this city a decent level of realism without affecting performance. The artistic path I chose to follow was to use a mix of realistic lights with low-poly models.</p>\n\n\n\n<figure class=\"wp-block-image is-resized\"><img src=\"https://lh3.googleusercontent.com/d_FtwvhBKrhNfRI4muv9fS0zbruFo4oXdrxBGTVrzErvYm5ijASiVXcrJ6c9_5yv7gFh3d-z7mcoPFjv10md40xfPsZ0QxuPuAJiVNL7ay5mHTMNXZWCAQ3mYYuk7zJkwgUAX6qv\" alt=\"image3.png\" width=\"800\"/><figcaption>Image showing a 3D model of the city and the Three.js experience next to it.</figcaption></figure>\n\n\n\n<h2><strong>Performance</strong></h2>\n\n\n\n<p>Part of what I wanted with this project was to apply techniques that would perform well on different devices, especially mobile. It needed to work on as many devices as possible, with an acceptable frame rate (at least 30 fps). I also wanted the experience to load as quickly as possible, with a file size smaller than 2MB.</p>\n\n\n\n<p>In order to accomplish this, I had to use a series of techniques that I will describe below.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/02.jpg\" alt=\"\" class=\"wp-image-63377\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/02.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/02-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/02-768x379.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the wireframe on the model within Blender of the model, where it all started.</figcaption></figure>\n\n\n\n<h2><strong>Creating the 3D model in Blender</strong></h2>\n\n\n\n<p>I used Blender to make the city model. I imported part of the buildings from free templates on the Internet. I modified a few of them to better match the setting. To make the terrain, I used Blender&#8217;s sculpt mode, creating valleys and peaks that look beautiful with light and shadow.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/03.jpg\" alt=\"\" class=\"wp-image-63378\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/03.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/03-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/03-768x379.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the 3D model in Blender in wireframe mode.</figcaption></figure>\n\n\n\n<p>Each model was optimized considering the number of triangles when exporting. I chose to use the GLB format because the compression with <a href=\"https://google.github.io/draco/\">Draco</a> does incredible compression &#8211; sometimes 7x smaller, in file size. In addition, all project resources are also compressed at runtime, on the server with gzip, for a more reduced transfer.</p>\n\n\n\n<h2><strong>Creating natural light</strong></h2>\n\n\n\n<p>Lighting in games is fascinating &#8211; the way shadow interacts with the terrain in order to create a scene that&#8217;s pleasing to the eye while not being held back by reality. I used Blender&#8217;s global lighting system, with a &#8220;world&#8221; node, using &#8220;Nishita&#8221; ambient lighting. This allows for very natural lighting, with ambient settings that quickly give a pleasing result.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/04.jpg\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/04.jpg\" alt=\"\" class=\"wp-image-63379\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/04.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/04-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/04-768x379.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a><figcaption>Image showing the lighting of the sun in different positions and superimposed on the blender&#8217;s nishita sun parameter.</figcaption></figure>\n\n\n\n<h2><strong>Distributing trees in Blender with geometry nodes</strong></h2>\n\n\n\n<p>Trees play an important role, as they help create a cast shadow that gives the terrain a touch of realism. I used Blender&#8217;s GeometryNodes to distribute the trees in the model and create a variation in size, shape, and rotation. I also used the material selector, to choose the regions that would have more or fewer trees, painting the density with the material selection.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05.jpg\"><img loading=\"lazy\" width=\"800\" height=\"500\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05-800x500.jpg\" alt=\"\" class=\"wp-image-63380\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05-800x500.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05-400x250.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05-768x480.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/05.jpg 1300w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a><figcaption>Image showing the blender interface with the geometry nodes created to distribute the trees in the scene.</figcaption></figure>\n\n\n\n<h2><strong>Bake lighting for export</strong></h2>\n\n\n\n<p>In order for the experience to function and perform well in Three.js, it&#8217;s important that the scene loads the lighting baked into the textures. I created a single texture for the floor of 2048&#215;2048, containing all of the shadows. The process of how to do the bake of shadows can be found in several tutorials on the internet. The end result is impressive and has no impact on performance.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06.jpg\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06-800x395.jpg\" alt=\"\" class=\"wp-image-63381\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/06.jpg 1300w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a><figcaption>Image showing the 3D model in blender with the baked lighting texture.</figcaption></figure>\n\n\n\n<h2><strong>Export to Three.js and the tree performance issue</strong></h2>\n\n\n\n<p>After finishing the bake and connecting the texture to the color node in the ground mesh, I exported all of the meshes to GLTF format. The entire model, using DRACO COMPRESSION, is 1.2MB. However, we have a problem with the trees: they cannot be exported all at once, as it would take too long for the GPU to finish the process.</p>\n\n\n\n<p>I created the trees using the MESH SURFACE SAMPLER from Three.js, which serves exactly this purpose. You can use a model and distribute it on a surface, creating variations of the same model, but making modifications to each of them. Thus, the performance is incredible, even with a very large number of variations.</p>\n\n\n\n<p>You can see <a href=\"https://threejs.org/docs/#examples/en/math/MeshSurfaceSampler\">an example</a> of this in the official Three.js documentation.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07.jpg\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07-800x395.jpg\" alt=\"\" class=\"wp-image-63382\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07-400x197.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/07.jpg 1400w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a><figcaption>Image showing the MeshSurfaceSampler code inside the VSCODE and the Three.js scene image with the projected trees.</figcaption></figure>\n\n\n\n<h2><strong>Loading everything in Three.js</strong></h2>\n\n\n\n<p>Using my boilerplate (see more about this at the end of the article), which I created to simplify things, I loaded the exported model. Afterwards, I spent a lot of time adjusting the light coloring, intensities, and other small details that make all the difference. The result of rendering in 3D is no always great for the experience in Three.js using the default parameters.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/08-800x395.jpg\" alt=\"\" class=\"wp-image-63383\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/08-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/08-400x197.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/08-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/08.jpg 1400w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the evolution of the model within the Three.js and the color changes as a before and after.</figcaption></figure>\n\n\n\n<p>It is essential to use the DAT.GUI to be able to visually adjust the parameters. It is impossible to get the colors and intensities right by guessing the numbers.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-800x395.png\" alt=\"\" class=\"wp-image-63397\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-800x395.png 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-400x198.png 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-768x379.png 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image-1536x758.png 1536w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/image.png 1600w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the Three.js DAT.GUI highlighted</figcaption></figure>\n\n\n\n<h2><strong>Using VertexShader for the animation of the trees</strong></h2>\n\n\n\n<p>One thing that brings reality to the scene is the smooth animation of the trees. Doing this is possible by exporting the animation directly from Blender, but performance would be greatly impacted &#8211; especially given the large number of trees.</p>\n\n\n\n<p>The best approach in these cases is to animate using VertexShader, using GPU processing directly on the positioning of vertices in the 3D world. With that, the performance is very good and the animations are beautiful.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><a href=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010.jpg\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010-800x395.jpg\" alt=\"\" class=\"wp-image-63385\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/010.jpg 1300w\" sizes=\"(max-width: 800px) 100vw, 800px\" /></a><figcaption>VSCODE screenshot showing part of the vertex shader responsible for animating the trees along with an image of the animated trees inside the Three.js</figcaption></figure>\n\n\n\n<h2><strong>Animating the birds and other elements of the experience</strong></h2>\n\n\n\n<p>The other animated elements of the experience, such as the helicopter, car, and wind turbines, were animated by changing the rotation of the model pieces directly in the render loop. It&#8217;s a very simple way to animate.</p>\n\n\n\n<p>The birds were animated differently. I wanted them to have wing movement and a sense of grouping. So, I animated the whole group inside blender and exported the animation along with the GLFT file. I used the Animation Mixer to animate the wings while changing the group&#8217;s position. The result is quite convincing and very lightweight (only 200kb).</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/011-800x395.jpg\" alt=\"\" class=\"wp-image-63386\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/011-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/011-400x197.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/011-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/011.jpg 1200w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the birds and their animation timeline inside blender and the same birds inside Three.js.</figcaption></figure>\n\n\n\n<h2><strong>Lights, shadows, and the night mode + apocalyptic</strong></h2>\n\n\n\n<p>As the shadows are baked inside the imported GLB file, I was able to gain some performance by not having to use a dynamically generated shadow map inside Three.js.</p>\n\n\n\n<p>I played around with the lighting effects, creating a night mode and an apocalyptic mode. It&#8217;s a lot of fun to have that kind of creative freedom without having to modify the template. The possibilities are endless.</p>\n\n\n\n<p>The apocalyptic mode is an easter egg, accessible to anyone who knows how to activate it :).</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/012-800x395.jpg\" alt=\"\" class=\"wp-image-63387\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/012-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/012-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/012-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/012.jpg 1000w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing night mode and apocalyptic mode.</figcaption></figure>\n\n\n\n<h2><strong>Post Processing with Effect Composer</strong></h2>\n\n\n\n<p>I&#8217;ve always loved the depth-of-field effect in games, but I thought it would be very difficult to use something like that in a Three.js experience. Thanks to the latest updates to the library, it&#8217;s much easier.</p>\n\n\n\n<p>Using EffectComposer, I was able to use the BokehPass effect in day mode, which generates a dynamic depth-of-field effect, based on the distance from the camera. For night mode, I use UnrealBlooomPass, which makes the lights super exposed, ideal for this type of situation.</p>\n\n\n\n<p>I change the effects between night and day mode for performance reasons &#8211; using the insertPass() and removePass() methods.</p>\n\n\n\n<h2><strong>Clicking and Selecting a Building</strong></h2>\n\n\n\n<p>A lot of people asked me how to make buildings clickable UI items. This was done using Three.js&#8217; RayCaster, which detects an intersection between an invisible ray, fired by the camera, and the mouse. With this, I can detect when a building has been selected and &#8211; based on its name &#8211; trigger an event.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" width=\"800\" height=\"395\" src=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/013-800x395.jpg\" alt=\"\" class=\"wp-image-63388\" srcset=\"https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/013-800x395.jpg 800w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/013-400x198.jpg 400w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/013-768x379.jpg 768w, https://i7x7p5b7.stackpathcdn.com/codrops/wp-content/uploads/2022/04/013.jpg 1300w\" sizes=\"(max-width: 800px) 100vw, 800px\" /><figcaption>Image showing the source code inside the VSCODE responsible for making the object selection raycaster and the camera animation.</figcaption></figure>\n\n\n\n<p>The animations that happen when clicking on a building were done using TWEEN.JS, by animating the initial camera position into the position of the clicked building. That way, I can place multiple buildings and have an animation generated automatically.</p>\n\n\n\n<h2><strong>Responsive tweaks: Also working on mobile</strong></h2>\n\n\n\n<p>Part of the work also involved tweaking the experience parameters to work well on mobile devices. Not just the responsive adjustments to the HTML and CSS, but also to the camera parameters, animation duration, and several other details.</p>\n\n\n\n<figure class=\"wp-block-image is-resized\"><img src=\"https://lh3.googleusercontent.com/1S4idnqXodQUxM6_yRgfR5gnlYwIT1iBg752CFWZa_anA2dxVGDzR1BpyRsIGjrad_-nirKvlyUdyuTxB2leoEUVigkuF5bimPD2m8FuUuyrjiyAh2nxfkjsBosgB3IEl-jjL6Wc\" alt=\"image16.jpg\" width=\"800\"/><figcaption>Image showing Windland running in mobile mode with responsiveness.</figcaption></figure>\n\n\n\n<h2><strong>Dynamic quality: Adjusting performance dynamically with the power of the user device</strong></h2>\n\n\n\n<p>Despite all the optimizations, some devices still cannot run all the effects, especially the post-processing ones. So I created a script that measures the FPS at the beginning of the experiment (during the loading process). That way, when the experiment starts, Three.js knows whether or not to activate certain effects to save on processing and ensure that the performance is within what is possible for that device.</p>\n\n\n\n<figure class=\"wp-block-image is-resized\"><a href=\"https://lh3.googleusercontent.com/aSntMfbWasHTNyHUcrVpQAHxbB_smec_9pVdbpC64Ddq9v-D_lanALjXVFKkFQjRPLx5L32SI9R4bcjz1WfKX1pMdILqNgOwVJgc7Ek7omBJvusdQe5BSDOIhXvf--2d3yKHYWDl\"><img src=\"https://lh3.googleusercontent.com/aSntMfbWasHTNyHUcrVpQAHxbB_smec_9pVdbpC64Ddq9v-D_lanALjXVFKkFQjRPLx5L32SI9R4bcjz1WfKX1pMdILqNgOwVJgc7Ek7omBJvusdQe5BSDOIhXvf--2d3yKHYWDl\" alt=\"image9.png\" width=\"1300\"/></a><figcaption>Image showing code inside the VSCODE responsible for detecting the FPS.</figcaption></figure>\n\n\n\n<h2><strong>Also working on smartwatches</strong></h2>\n\n\n\n<p>As a proof of concept, I wanted to demonstrate that experiments done in Three.js are not heavy to process and run even on a smartwatch. During this process, I found that the number of vertices in the model is what would most impact performance on these devices. So, I created an &#8220;ultra-low poly&#8221; mode of the model to be used on mobile devices. Ready! Nothing else in the code needed to be changed.</p>\n\n\n\n<figure class=\"wp-block-image is-resized\"><img src=\"https://lh3.googleusercontent.com/PAQyDO1359cMzY2DkKbL3g5cNaBJia8QZHecZXvihWiI-XYrLZkkjKfnTnsphWpuuKybIhsbQNZBsUZCGvb2w2h-1KuY2yinNzZTo8c9rhPVWeoF21TWQ4qpiAokLlEjEfT3o3wN\" alt=\"image8.png\" width=\"800\"/><figcaption>Image showing Windland running on a smartwatch</figcaption></figure>\n\n\n\n<h2><strong>Three.js Boilerplate: Create your own Windland</strong></h2>\n\n\n\n<p>To make it easier to create projects in Three.js, I&#8217;ve created an easy-to-use, well-documented, and <a href=\"https://github.com/ektogamat/threejs-andy-bolierplate\">free starter project</a>. So, using this boilerplate, you will be able to create a scene in Three.js in just a few lines and import a model. The boilerplate also has instructions on how to export the model and some other information that can help you create your city.</p>\n\n\n\n<p>Find the repository on GitHub: <a href=\"https://github.com/ektogamat/threejs-andy-bolierplate\">https://github.com/ektogamat/threejs-andy-bolierplate</a></p>\n\n\n\n<p>Watch the video on how to use it: <a href=\"https://www.youtube.com/watch?v=qM6Ih_cC6Gc\">https://www.youtube.com/watch?v=qM6Ih_cC6Gc</a></p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://github.com/ektogamat/threejs-andy-bolierplate\"><img src=\"https://lh4.googleusercontent.com/yuJHtwPYPuJwoq6H4udxxaSKpHEiqW94XCiNR2FkP3L5y1Mdubae06Rh04hBt52z91Zl-kbM0z3vrJKwJS6U67Ieuxlsno7gRAL0dNcel1u9gRCceKbMDUtb5FdTv-aylAwBheKn\" alt=\"image17.png\"/></a></figure>\n\n\n\n<h2><strong>Interesting facts</strong></h2>\n\n\n\n<p>Some people ask: What is the advantage of making a project using Three.js and not just use a rendered image for a website? Well, a rendered image of this scene at 1920&#215;1080 is approximately 2.8mb in size, with reasonable compression. This whole scene in Three.js, with all its interactivity, animations, interface and everything you see in the animations is only 1.8mb.</p>\n\n\n\n<p>Windland was awarded an <a href=\"https://www.awwwards.com/sites/windland-threejs-experiment\">Honorable Mention at Awwwards</a> on March 31, 2022. It transformed itself from a test project into a Three.js use case to complex scenes that mimic the look and feel of games.</p>\n\n\n\n<p>Three.js is increasingly my favorite library. You can find more videos on <a href=\"https://www.youtube.com/c/andersonmancini\">my YouTube channel</a> or on my official <a href=\"https://twitter.com/Andersonmancini\">Twitter</a>.</p>\n\n\n\n<p>Thanks for your time <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f642.png\" alt=\"🙂\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n<p>The post <a rel=\"nofollow\" href=\"https://tympanus.net/codrops/2022/04/25/case-study-windland-an-immersive-three-js-experience/\">Case Study: Windland — An Immersive Three.js Experience</a> appeared first on <a rel=\"nofollow\" href=\"https://tympanus.net/codrops\">Codrops</a>.</p>\n"
        ],
        "plainDescription": "A look into the making of a mini-city full of post effects and\nmicro-interactions using Three.js.\n\nThe post Case Study: Windland — An Immersive Three.js Experience\n[https://tympanus.net/codrops/2022/0...",
        "providerTitle": "Codrops",
        "providerURL": "https://tympanus.net/codrops",
        "providerIdx": 1
    },
    {
        "title": [
            "Writing Strong Front-end Test Element Locators"
        ],
        "link": [
            "https://css-tricks.com/front-end-test-element-locators/"
        ],
        "comments": [
            "https://css-tricks.com/front-end-test-element-locators/#respond"
        ],
        "dc:creator": [
            "Mark Noonan"
        ],
        "pubDate": [
            "Fri, 22 Apr 2022 18:45:38 +0000"
        ],
        "category": [
            "Article",
            "cypress",
            "testing"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364218",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>Automated front-end tests are awesome. We can write a test with code to visit a page — or <a href=\"https://css-tricks.com/testing-vue-components-with-cypress/\">load up just a single component</a> — and have that test code click on things or type text like a user would, &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/front-end-test-element-locators/\">Writing Strong Front-end Test Element Locators</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>Automated front-end tests are awesome. We can write a test with code to visit a page — or <a href=\"https://css-tricks.com/testing-vue-components-with-cypress/\">load up just a single component</a> — and have that test code click on things or type text like a user would, then make assertions about the state of the application after the interactions. This lets us confirm that everything described in the tests work as expected in the application.</p>\n\n\n\n<p>Since this post is about one of the building blocks of any automated UI tests, I don’t assume too much prior knowledge. Feel free to skip the first couple of sections if you&#8217;re already familiar with the basics.</p>\n\n\n\n<span id=\"more-364218\"></span>\n\n\n\n<h3>Structure of a front-end test</h3>\n\n\n\n<p>There’s a classic pattern that’s useful to know when writing tests: <strong>Arrange</strong>, <strong>Act</strong>, <strong>Assert</strong>. In front-end tests, this translates to a test file that does the following:</p>\n\n\n\n<ol><li><strong>Arrange: Get things ready for the test.</strong> Visit a certain page, or mount a certain component with the right props, mock some state, whatever.</li><li><strong>Act: Do something to the application.</strong> Click a button, fill out a form, etc. Or not, for simple state-checks, we can skip this.</li><li><strong>Assert: Check some stuff.</strong> Did submitting a form show a thank you message? Did it send the right data to the back end with a POST?</li></ol>\n\n\n\n<p>In specifying <em>what to interact with</em> and then later <em>what to check</em> <em>on</em> <em>the page</em>, we can use various <em>element locators</em> to target the parts of the DOM we need to use.</p>\n\n\n\n<p>A <dfn>locator</dfn> can be something like an element’s ID, the text content of an element, or a CSS selector, like <code>.blog-post</code> or even <code>article &gt; div.container &gt; div &gt; div &gt; p:nth-child(12)</code>. Anything about an element that can identify that element to your test runner can be a locator. As you can probably already tell from that last CSS selector, locators come in many varieties.</p>\n\n\n\n<p>We often evaluate locators in terms of being <em>brittle</em> or <em>stable.</em> In general, we want the most stable element locators possible so that our test can always find the element it needs, even if the code around the element is changing over time. That said, maximizing stability at all costs can lead to defensive test-writing that actually weakens the tests. We get the most value by having a combination of brittleness and stability that aligns with what we want our tests to care about.</p>\n\n\n\n<p>In this way, element locators are like duct tape. They should be really strong in one direction, and tear easily in the other direction. Our tests should hold together and keep passing when unimportant changes are made to the application, but they should readily fail when important changes happen that contradict what we&#8217;ve specified in the test.</p>\n\n\n\n<h3>Beginner’s guide to element locators in front-end testing</h3>\n\n\n\n<p>First, let’s pretend we are writing instructions for an actual person to do their job. A new gate inspector has just been hired at Gate Inspectors, Inc. You are their boss, and after everybody’s been introduced you are supposed to give them instructions for inspecting their first gate. If you want them to be successful, you probably would <em>not</em> write them a note like this:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Go past the yellow house, keep going ‘til you hit the field where Mike’s mother’s friend’s goat went missing that time, then turn left and tell me if the gate in front of the house across the street from you opens or not.</p></blockquote>\n\n\n\n<p>Those directions are kind of like using a long CSS selector or XPath as a locator. It’s brittle — and it’s the &#8220;bad kind of brittle&#8221;. If the yellow house gets repainted and you repeat the steps, you can’t find the gate anymore, and might decide to give up (or in this case, the test fails).</p>\n\n\n\n<p>Likewise, if you don’t know about Mike’s mother’s friend’s goat situation, you can’t stop at the right reference point to know what gate to check. This is exactly what makes the &#8220;bad kind of brittle&#8221; bad — the test can break for all kinds of reasons, and none of those reasons have anything to do with the usability of the gate.</p>\n\n\n\n<p>So let’s make a different front-end test, one that’s much more stable. After all, legally in this area, all gates on a given road are supposed to have unique serial numbers from the maker:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Go to the gate with serial number 1234 and check if it opens.</p></blockquote>\n\n\n\n<p>This is more like locating an element by its ID. It’s more stable and it’s only one step. All the points of failure from the last test have been removed. This test will only fail if the gate with that ID doesn’t open as expected.</p>\n\n\n\n<p>Now, as it turns out, though no two gates <em>should</em> have the same ID on the same road, that’s not actually enforced anywhere And one day, another gate on the road ends up with the same ID.</p>\n\n\n\n<p>So the next time the newly hired gate inspector goes to test “Gate 1234,” they find that other one first, and are now visiting the wrong house and checking the wrong thing. The test might fail, or worse: if that gate works as expected, the test still passes but it’s not testing the intended subject. It provides false confidence. It would keep passing even if our original target gate was stolen in the middle of the night, by gate thieves.</p>\n\n\n\n<p>After an incident like this, it’s clear that IDs are not as stable as we thought. So, we do some next-level thinking and decide that, on the inside of the gate, we’d like a special ID just for testing. We’ll send out a tech to put the special ID on just this one gate. The new test instructions look like this:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Go to the gate with Test ID “my-favorite-gate” and check if it opens.</p></blockquote>\n\n\n\n<p>This one is like using the popular <code>data-testid</code> attribute. Attributes like this are great because it is obvious in the code that they are intended for use by automated tests and shouldn’t be changed or removed. As long as the gate has that attribute, you will always find the gate. Just like IDs, uniqueness is still not enforced, but it’s a bit more likely.</p>\n\n\n\n<p>This is about as far away from brittle as you can get, and it confirms the functionality of the gate. We don’t depend on anything except the attribute we deliberately added for testing. But there’s a bit of problem hiding here…</p>\n\n\n\n<p><strong>This is a user interface test for the gate, but the locator is something that no user would ever use to find the gate.</strong></p>\n\n\n\n<p>It’s a missed opportunity because, in this imaginary county, it turns out gates are required to have the house number printed on them so that people can see the address. So, all gates should have an unique human-facing label, and if they don’t, it’s a problem in and of itself. </p>\n\n\n\n<p>When locating the gate with the test ID, if it turns out that the gate has been repainted and the house number covered up, our test would still pass. But the whole point of the gate is for people to access the house. In other words, a working gate <em>that a user can’t find</em> should still be a test failure, and we want a locator that is capable of revealing this problem.</p>\n\n\n\n<p>Here’s another pass at this test instruction for the gate inspector on their first day:</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>Go to the gate for house number 40 and check if it opens.</p></blockquote>\n\n\n\n<p>This one uses a locator that <em>adds value</em> to the test: it depends on something users also depend on, which is the label for the gate. It adds back a potential reason for the test to fail before it reaches the interaction we want to actually test, which might seem bad at first glance. But in this case, because the locator is meaningful from a user’s perspective, we shouldn’t shrug this off as “brittle.” If the gate can’t be found by its label, it doesn’t matter if it opens or not — this is is the &#8220;good kind of brittle&#8221;.</p>\n\n\n\n<h3>The DOM matters</h3>\n\n\n\n<p>A lot of front-end testing advice tells us to avoid writing locators that depend on DOM structure. This means that developers can refactor components and pages over time and let the tests confirm that user-facing workflows haven’t broken, without having to update tests to catch up to the new structure. This principle is useful, but I would tweak it a bit to say we ought to avoid writing locators that depend on <em>irrelevant</em> DOM structure in our front-end testing.</p>\n\n\n\n<p>For an application to function correctly, the DOM should reflect the nature and structure of the content that&#8217;s on the screen at any given time. One reason for this is accessibility. A DOM that’s correct in this sense is much easier for assistive technology to parse properly and describe to users who aren’t seeing the contents rendered by the browser. DOM structure and plain old HTML make a huge difference to the independence of users who rely on assistive technology.</p>\n\n\n\n<p>Let’s spin up a front-end test to submit something to the contact form of our app. We’ll use <a href=\"https://www.cypress.io\" rel=\"noopener\">Cypress</a> for this, but the principles of choosing locators strategically apply to all front-end testing frameworks that use the DOM for locating elements. Here we find elements, enter some test, submit the form, and verify the “thank you” state is reached:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// &#x1f44e; Not recommended\ncy.get('#name').type('Mark')\ncy.get('#comment').type('test comment')\ncy.get('.submit-btn').click()\ncy.get('.thank-you').should('be.visible')</code></pre>\n\n\n\n<p>There are all kinds of implicit assertions happening in these four lines. <code>cy.get()</code> is checking that the element exists in the DOM. The test will fail if the element doesn’t exist after a certain time, while actions like <code>type</code> and <code>click</code> verify that the elements are visible, enabled, and unobstructed by something else before taking an action.</p>\n\n\n\n<p>So, we get a lot “for free” even in a simple test like this, but we’ve also introduced some dependencies upon things we (and our users) don’t really care about. The specific ID and classes that we are checking seem stable enough, especially compared to selectors like <code>div.main &gt; p:nth-child(3) &gt; span.is-a-button</code> or whatever. Those long selectors are so specific that a minor change to the DOM could cause a test to fail because <em>it can’t find the element</em>, not because the functionality is broken.</p>\n\n\n\n<p>But even our short selectors, like <code>#name</code>, come with three problems:</p>\n\n\n\n<ol><li>The ID could be changed or removed in the code, causing the element to go overlooked, especially if the form might appear more than once on a page. A unique ID might need to be generated for each instance, and that’s not something we can easily pre-fill into a test.</li><li>If there is more than one instance of a form on the page and they have the same ID, we need to decide which form to fill out.</li><li>We don’t actually care what the ID is from a user perspective, so all the built-in assertions are kind of… not fully leveraged?</li></ol>\n\n\n\n<p>For problems one and two, the recommended solution is often to use dedicated data attributes in our HTML that are added exclusively for testing. This is better because our tests no longer depend on the DOM structure, and as a developer modifies the code around a component, the tests will continue to pass without needing an update, as long as they keep the <code>data-test=\"name-field\"</code> attached to the right <code>input</code> element.</p>\n\n\n\n<p>This doesn’t address problem three though — we still have a front-end interaction test that depends on something that is meaningless to the user.</p>\n\n\n\n<h3>Meaningful locators for interactive elements</h3>\n\n\n\n<p>Element locators are meaningful when they depend on something we actually <em>want</em> to depend on because something about the locator is important to the user experience. In the case of interactive elements, I would argue that the best selector to use is the element’s <a href=\"https://a11y-guidelines.orange.com/en/articles/accessible-name/\" rel=\"noopener\">accessible name</a>. Something like this is ideal:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// &#x1f44d; Recommended\ncy.getByLabelText('Name').type('Mark')</code></pre>\n\n\n\n<p>This example uses the <a href=\"https://testing-library.com/docs/queries/bylabeltext/\" rel=\"noopener\">byLabelText helper</a> from <a href=\"https://testing-library.com/docs/cypress-testing-library/intro/\" rel=\"noopener\">Cypress Testing Library</a>. (In fact, if you are using Testing Library in any form, it is probably already helping you write accessible locators like this.)<br><br>This is useful because now the built-in checks (that we get for free through the <code>cy.type()</code> command) include the accessibility of the form field. All interactive elements should have an accessible name that is exposed to assistive technology. This is how, for example, a screenreader user would know what the form field they are typing into is called in order to enter the needed information.</p>\n\n\n\n<p>The way to provide this accessible name for a form field is usually through a <code>label</code> element associated with the field by an ID. The <code>getByLabelText</code> command from Cypress Testing Library verifies that the field is labeled appropriately, but also that the field itself is an element that’s allowed to have a label. So, for example, the following HTML would correctly fail before the <code>type()</code> command is attempted, because even though a <code>label</code> is present, labeling a <code>div</code> is invalid HTML:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- &#x1f44e; Not recommended  -->\n&lt;label for=\"my-custom-input\">Editable DIV element:&lt;/label>\n&lt;div id=\"my-custom-input\" contenteditable=\"true\" /></code></pre>\n\n\n\n<p>Because this is invalid HTML, screenreader software could never associate this label with this field correctly. To fix this, we would update the markup to use a real <code>input</code> element:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;!-- &#x1f44d; Recommended -->\n&lt;label for=\"my-real-input\">Real input:&lt;/label>\n&lt;input id=\"my-real-input\" type=\"text\" /></code></pre>\n\n\n\n<p>This is awesome. Now if the test fails at this point after edits made to the DOM, it’s not because of an irrelevant structure changes to how elements are arranged, but because <em>our edits did something to break</em> a part of DOM that our front-end tests explicitly care about, that would actually matter to users.</p>\n\n\n\n<h3>Meaningful locators for non-interactive elements</h3>\n\n\n\n<p>For non-interactive elements, we should put on our thinking caps. Let’s use a little bit of judgement before falling back on the <code>data-cy</code> or <code>data-test</code> attributes that will always be there for us if the DOM doesn’t matter at all.</p>\n\n\n\n<p>Before we dip into the generic locators, let&#8217;s remember: the state of the DOM is our Whole Thing&#x2122; as web developers (at least, I think it is). And the DOM drives the UX for everybody who is not experiencing the page visually. So a lot of the time, there might be some meaningful element that we could or should be using in the code that we can include in a test locator.</p>\n\n\n\n<p>And if there&#8217;s not, because. say, the application code is all generic containers like <code>div</code> and <code>span</code>, we should consider fixing up the application code first, while adding the test. Otherwise there is a risk of having our tests actually <em>specify</em> that the generic containers are expected and desired, making it a little harder for somebody to modify that component to be more accessible.</p>\n\n\n\n<div class=\"wp-container-10 wp-block-group ticss-abc4306a\"><div class=\"wp-block-group__inner-container\">\n<p>This topic opens up a can of worms about how accessibility works in an organization. Often, if nobody is talking about it and it&#8217;s not a part of the practice at our companies, we <a href=\"https://css-tricks.com/why-dont-developers-take-accessibility-seriously/\">don&#8217;t take accessibility seriously</a> as front-end developers. But at the end of the day, we are supposed to be the experts in what is the &#8220;right markup&#8221; for design, and what to consider in deciding that. I discuss this side of things a lot more in my talk from Connect.Tech 2021, called <a href=\"https://youtu.be/_KHbEjSZXPY\" rel=\"noopener\">&#8220;Researching and Writing Accessible Vue&#8230; Thingies&#8221;</a>.</p>\n</div></div>\n\n\n\n<p>As we saw above, with the elements we traditionally think of as <em>interactive,</em> there is a pretty good rule of thumb that’s easy to build into our front-end tests: <strong>interactive elements should have perceivable labels correctly associated to the element.</strong> So anything interactive, when we test it, should be selected from the DOM using that required label.</p>\n\n\n\n<p>For elements that we don’t think of as interactive — like most content-rendering elements that display pieces of text of whatever, aside from some basic landmarks like <code>main</code> — we wouldn’t trigger any Lighthouse audit failures if we put the bulk of our non-interactive content into generic <code>div</code> or <code>span</code> containers. But the markup won’t be very informative or helpful to assistive technology because it’s not describing the <em>nature</em> and <em>structure</em> of the content to somebody who can’t see it. (To see this taken to an extreme, check out Manuel Matuzovic&#8217;s excellent blog post, <a href=\"https://www.matuzo.at/blog/building-the-most-inaccessible-site-possible-with-a-perfect-lighthouse-score/\" data-type=\"URL\" data-id=\"https://www.matuzo.at/blog/building-the-most-inaccessible-site-possible-with-a-perfect-lighthouse-score/\" rel=\"noopener\">&#8220;Building the most inaccessible site possible with a perfect Lighthouse score.&#8221;</a>)</p>\n\n\n\n<p>The HTML we render is where we communicate important contextual information to anybody who is not perceiving the content visually. The HTML is used to build the DOM, the DOM is used to create the browser’s <a href=\"https://developers.google.com/web/fundamentals/accessibility/semantics-builtin/the-accessibility-tree\" rel=\"noopener\">accessibility tree</a>, and the accessibility tree is the API that assistive technologies of all kinds can use to express the content and the actions that can be taken to a disabled person using our software. A screenreader is often the first example we think of, but the accessibility tree can also be used by other technology, like displays that turn webpages into Braille, among others.</p>\n\n\n\n<p>Automated accessibility checks won’t tell us if we’ve really created the right HTML for the content. The &#8220;rightness&#8221; of the HTML a judgement call we are making developers about what information we think needs to be communicated in the accessibility tree.</p>\n\n\n\n<p>Once we’ve made that call, we can decide how much of that is suitable to bake into the automated front-end testing.</p>\n\n\n\n<p>Let’s say that we have decided that a container with the <code>status</code> ARIA <code>role</code> will hold the “thank you” and error messaging for a contact form. This might be nice so that the feedback for the form’s success or failure can be announced by a screenreader. CSS classes of <code>.thank-you</code> and <code>.error</code> could be applied to control the visual state.</p>\n\n\n\n<p>If we add this element and want to write a UI test for it, we might write an assertion like this after the test fills out the form and submits it:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// &#x1f44e; Not recommended\ncy.get('.thank-you').should('be.visible')</code></pre>\n\n\n\n<p>Or even a test that uses a non-brittle but still meaningless selector like this:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// &#x1f44e; Not recommended\ncy.get('[data-testid=\"thank-you-message\"]').should('be.visible')</code></pre>\n\n\n\n<p>Both could be rewritten using <code>cy.contains()</code>:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">// &#x1f44d; Recommended\ncy.contains('[role=\"status\"]', 'Thank you, we have received your message')\n  .should('be.visible')</code></pre>\n\n\n\n<p>This would confirm that the expected text appeared and was inside the right kind of container. Compared to the previous test, this has much more value in terms of verifying actual functionality. If any part of this test fails, we’d want to know, because both the message and the element selector are important to us and shouldn’t be changed trivially.</p>\n\n\n\n<p>We have definitely gained some coverage here without a lot of extra code, but we’ve also introduced a different kind of brittleness. We have plain English strings in our tests, and that means if the “thank you” message changes to something like “Thank you for reaching out!” this test suddenly fails. Same with all the other tests. A small change to how a label is written would require updating any test that targets elements using that label.</p>\n\n\n\n<p>We can improve this by using the same source of truth for these strings in front-end tests as we do in our code. And if we currently have human-readable sentences embedded right there in the HTML of our components… well now we have a reason to pull that stuff out of there.</p>\n\n\n\n<h3>Human-readable strings might be the magic numbers of UI code</h3>\n\n\n\n<p>A <dfn><a href=\"https://en.wikipedia.org/wiki/Magic_number_(programming)\" rel=\"noopener\">magic number</a></dfn> (or less-excitingly, an “unnamed numerical constant”) is that super-specific value you sometimes see in code that is important to the end result of a calculation, like a good old <code>1.023033</code> or something. But since that number is not unlabeled, its significance is unclear, and so it&#8217;s unclear what it’s doing. Maybe it applies a tax. Maybe it compensates for some bug that we don’t know about. Who knows?</p>\n\n\n\n<p>Either way, the same is true for front-end testing and the general advice is to <a href=\"https://css-tricks.com/magic-numbers-in-css/\">avoid magic numbers</a> because of their lack of clarity. Code reviews will often catch them and ask what the number is for. Can we move it into a constant? We also do the same thing if a value is to be reused multiple places. Rather than repeat the value everywhere, we can store it in a variable and use the variable as needed.</p>\n\n\n\n<p>Writing user interfaces over the years, I’ve come to see text content in HTML or template files as very similar to magic numbers in other contexts. We’re putting absolute values all through our code, but in reality it might be more useful to store those values elsewhere and bring them in at build time (or even through an API depending on the situation).</p>\n\n\n\n<p>There are a few reasons for this:</p>\n\n\n\n<ol><li>I used to work with clients who wanted to drive everything from a content management system. Content, even form labels and status messages, that didn’t live in the CMS were to be avoided. Clients wanted full control so that content changes didn’t require editing code and re-deploying the site. That makes sense; code and content are different concepts. </li><li>I’ve worked in many multilingual codebases where all the text needs to be pulled in through some internationalization framework, like this:</li></ol>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">&lt;label for=\"name\">\n  &lt;!-- prints \"Name\" in English but something else in a different language -->\n  {{content[currentLanguage].contactForm.name}}\n&lt;/label></code></pre>\n\n\n\n<ol start=\"3\"><li>As far as front-end testing goes, our UI tests are much more robust if, instead of checking for a specific “thank you” message we hardcode into the test, we do something like this:</li></ol>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">const text = content.en.contactFrom // we would do this once and all tests in the file can read from it\n\ncy.contains(text.nameLabel, '[role=\"status\"]').should('be.visible')</code></pre>\n\n\n\n<p>Every situation is different, but having some system of constants for strings is a huge asset when writing robust UI tests, and I would recommend it. Then, if and when translation or dynamic content does become necessary for our situation, we are a lot better prepared for it.</p>\n\n\n\n<p>I’ve heard good arguments <em>against</em> importing text strings in tests, too. For example, some find tests are more readable and generally better if the test itself specifies the expected content independently from the content source.</p>\n\n\n\n<p>It&#8217;s a fair point. I’m less persuaded by this because I think content should be controlled through more of an editorial review/publishing model, and I want the test to check if the <em>expected content from the source</em> got rendered, not some specific strings that were correct when the test was written. But plenty of people disagree with me on this, and I say as long as within a team the tradeoff is understood, either choice is acceptable.</p>\n\n\n\n<p>That said, it’s still a good idea to isolate code from content in the front end more generally. And sometimes it might even be valid to mix and match — like importing strings in our component tests and not importing them in our end-to-end tests. This way, we save <em>some</em> duplication and gain confidence that our components display correct content, while still having front-end tests that independently assert the expected text, in the editorial, user-facing sense.</p>\n\n\n\n<h3>When to use <code>data-test</code> locators</h3>\n\n\n\n<p>CSS selectors like <code>[data-test=\"success-message\"]</code> are still useful and can be very helpful when used in an intentional way, instead of used all the time. If our judgement is that there’s no meaningful, accessible way to target an element, <code>data-test</code> attributes are still the best option. They are much better than, say, depending on a coincidence like whatever the DOM structure happens to be on the day you are writing the test, and falling back to the &#8220;second list item in the third <code>div</code> with a class of <code>card</code>&#8221; style of test.</p>\n\n\n\n<p>There are also times when content is expected to be dynamic and there’s no way to easily grab strings from some common source of truth to use in our tests. In those situations, a <code>data-test</code> attribute helps us reach the specific element we care about. It can still be combined with an accessibility-friendly assertion, for example:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">cy.get('h2[data-test=\"intro-subheading\"]')</code></pre>\n\n\n\n<p>Here we want to find what has the <code>data-test</code> attribute of <code>intro-subheading</code>, but still allow our test to assert that it should be a <code>h2</code> element if that’s what we expect it to be. The <code>data-test</code> attribute is used to make sure we get the specific <code>h2</code> we are interested in, not some other <code>h2</code> that might be on the page, if for some reason the <em>content</em> of that <code>h2</code> can’t be known at the time of the test.</p>\n\n\n\n<p>Even in cases where we do know the content, we might still use data attributes to make sure the application renders that content in the right spot:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">cy.contains('h2[data-test=\"intro-subheading\"]', 'Welcome to Testing!')</code></pre>\n\n\n\n<p><code>data-test</code> selectors can also be a convenience to get down to a certain part of the page and then make assertions within that. This could look like the following:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">cy.get('article[data-test=\"ablum-card-blur-great-escape\"]').within(() => {\n  cy.contains('h2', 'The Great Escape').should('be.visible')\n  cy.contains('p', '1995 Album by Blur').should('be.visible')\n  cy.get('[data-test=\"stars\"]').should('have.length', 5)\n})</code></pre>\n\n\n\n<p>At that point we get into some nuance because there may very well be other good ways to target this content, it&#8217;s just an example. But at the end of the day, it’s a good if worrying about details like that is where we are because at least we have some understanding of the accessibility features embedded in the HTML we are testing, and that we want to include those in our tests.</p>\n\n\n\n<h3>When the DOM matters, test it</h3>\n\n\n\n<p>Front-end tests bring a lot more value to us if we are thoughtful about how we tell the tests what elements to interact with, and what to contents to expect. We should prefer accessible names to target interactive components, and we should include specific elements names, ARIA roles, etc., for non-interactive content — if those things are relevant to the functionality. These locators, when practical, create the right combination of strength and brittleness.</p>\n\n\n\n<p>And of course, for everything else, there’s <code>data-test</code>.</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/front-end-test-element-locators/\">Writing Strong Front-end Test Element Locators</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/front-end-test-element-locators/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "364218",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "Automated front-end tests are awesome. We can write a test with code to visit a\npage — or load up just a single component\n[https://css-tricks.com/testing-vue-components-with-cypress/] — and have that\n...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "Flexible API Design: Create Hooks for Your PHP API Pipeline"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss\"\n              title=\"Flexible API Design: Create Hooks for Your PHP API Pipeline\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline.jpg\"\n        alt=\"Flexible API Design: Create Hooks for Your PHP API Pipeline\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            APIs can easily become overcomplicated and slow. Learn how to develop a pipeline that's easy to expand later without obscuring the main flow.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss\">Flexible API Design: Create Hooks for Your PHP API Pipeline</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/flexible-api-design-create-hooks-for-php-api-pipeline/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203463",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "APIs",
            "PHP",
            "Programming",
            "Web"
        ],
        "dc:creator": [
            "Tim Hurd"
        ],
        "pubDate": [
            "Wed, 08 Sep 2021 02:00:55 GMT"
        ],
        "plainDescription": "Flexible API Design: Create Hooks for Your PHP API Pipeline\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1630893572api-pipeline.jpg]\n[https://www.sitepoint.com/flexible-api-design-create-...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Creating a Portfolio to Showcase Your Engineering Abilities"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss\"\n              title=\"Creating a Portfolio to Showcase Your Engineering Abilities\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio.jpg\"\n        alt=\"Creating a Portfolio to Showcase Your Engineering Abilities\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-1024x579.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Need an online portfolio to showcase your engineering skills? Learn why it's important to have one, and how to plan, build, design & host it.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss\">Creating a Portfolio to Showcase Your Engineering Abilities</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/portfolio-showcase-engineering-abilities/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203504",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Career Advancement",
            "Entrepreneur",
            "Web"
        ],
        "dc:creator": [
            "Merilyn Chesler"
        ],
        "pubDate": [
            "Thu, 09 Sep 2021 02:00:36 GMT"
        ],
        "plainDescription": "Creating a Portfolio to Showcase Your Engineering Abilities\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631074460engineer-portfolio.jpg]\n[https://www.sitepoint.com/portfolio-showcase-en...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Create a Linear Gauge Chart in JavaScript"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss\"\n              title=\"How to Create a Linear Gauge Chart in JavaScript\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart.jpg\"\n        alt=\"How to Create a Linear Gauge Chart in JavaScript\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Charts help us to understand data. Learn how to quickly create an interactive linear gauge chart that highlights Covid-19 vaccination data.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss\">How to Create a Linear Gauge Chart in JavaScript</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-linear-gauge-chart-javascript/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207398",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Shachee Swadia"
        ],
        "pubDate": [
            "Tue, 19 Oct 2021 02:00:02 GMT"
        ],
        "plainDescription": "How to Create a Linear Gauge Chart in JavaScript\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1634340565linear-gauge-chart.jpg]\n[https://www.sitepoint.com/create-linear-gauge-chart-javasc...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Introducing PHP: A Beginner’s Guide"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/php-beginners-guide/?utm_source=rss\"\n              title=\"Introducing PHP: A Beginner’s Guide\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction.jpg\"\n        alt=\"Introducing PHP: A Beginner's Guide\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn the basics of how PHP works, including statements, variables, operators, comments, and control structures.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/php-beginners-guide/?utm_source=rss\">Introducing PHP: A Beginner’s Guide</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/php-beginners-guide/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256944",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "PHP",
            "Programming"
        ],
        "dc:creator": [
            "Tom Butler"
        ],
        "pubDate": [
            "Fri, 11 Feb 2022 06:43:05 GMT"
        ],
        "plainDescription": "Introducing PHP: A Beginner's Guide\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604276php-introduction.jpg]\n[https://www.sitepoint.com/php-beginners-guide/?utm_source=rss] Learn the ...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "The 10 Best Plugins for Adding eCommerce to WordPress"
        ],
        "link": [
            "https://speckyboy.com/wordpress-plugins-ecommerce/"
        ],
        "comments": [
            "https://speckyboy.com/wordpress-plugins-ecommerce/#comments"
        ],
        "dc:creator": [
            "Eric Karkovack"
        ],
        "pubDate": [
            "Tue, 03 May 2022 19:39:50 +0000"
        ],
        "category": [
            "WordPress",
            "eCommerce Design",
            "WooCommerce",
            "WordPress eCommerce",
            "WordPress Plugins"
        ],
        "guid": [
            {
                "_": "http://speckyboy.com/?p=57095",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>We share the best eCommerce WordPress plugins on the market and provide you with background info on what types of shops they are suited for.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/wordpress-plugins-ecommerce/\">The 10 Best Plugins for Adding eCommerce to WordPress</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "content:encoded": [
            "<p>Whatever you&#8217;re looking to sell online, it&#8217;s possible with WordPress. That flexibility is a big reason why the content management system (CMS) is a <a href=\"https://speckyboy.com/wordpress-achieving-40-market-share/\">market leader</a>.</p>\n<p>eCommerce stores that sell physical products, subscription services, and downloads – they&#8217;re all within reach. The WordPress plugin ecosystem provides plenty of options. Want to list your products on a third-party retailer such as Amazon? That&#8217;s fair game as well. And there&#8217;s an opportunity to enhance things even further through custom code.</p>\n<p>However, the sheer number of WordPress eCommerce plugins can make your head spin. Some serve a very niche purpose, while others allow you to pick and choose functionality. We&#8217;re here to help provide some clarity.</p>\n<p>Today, we&#8217;ll introduce you to ten of the best eCommerce plugins on the market. Along the way, we&#8217;ll provide some background info on what types of shops they&#8217;re best suited for. Let&#8217;s get started!</p>\n<p><em>Please note that some product types may require additional add-ons.</em></p>\n<div class=\"table-of-contents\"><input type=\"checkbox\" id=\"display-content\"><strong class=\"toc-title\"><label for=\"display-content\">Essential Free WordPress Plugins</label></strong></p>\n<div class=\"toc-content\">\n<ul>\n<li><a href=\"https://speckyboy.com/free-wordpress-maintenance-coming-soon-plugins/\">Coming Soon WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/wordpress-plugins-comments/\">Comment Management WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/improve-wordpress-content-creation/\">Content Creation WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-wordpress-map-plugins/\">Google Map WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/gdpr-compliance/\">GDPR Compliance WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-wordpress-plugins-legal-compliance/\">Legal Compliance WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-plugins-wordpress-media-library/\">Media Library WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/wordpress-speed/\">Optimize &#038; Speed WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/related-post-plugins-wordpress/\">Related Post WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/10-free-plugins-secure-wordpress-website/\">Security WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/niche-wordpress-seo-plugins/\">SEO WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-wordpress-plugin-display-edit-code/\">Syntax Highlighter WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/social-media-plugins-wordpress/\">Social Media Integration WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/wordpress-website-translation-plugins/\">Translation WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/wordpress-plugins-website-accessibility/\">Website Accessibility WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-wordpress-backup-solutions/\">Website Backup WordPress Plugins</a></li>\n<li><a href=\"https://speckyboy.com/free-wordpress-widget-plugins/\">Widget WordPress Plugins</a></li>\n</ul>\n</div>\n</div>\n\n\n<h2><a href=\"https://woocommerce.com/\" target=\"_blank\" rel=\"noopener\">WooCommerce <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>How could we not start with the most popular eCommerce plugin for WordPress? Millions of stores are powered by WooCommerce – and it&#8217;s easy to see why. Woo has an ecosystem of its own, with an <a href=\"https://woocommerce.com/products/\" target=\"_blank\" rel=\"noopener\">extension library</a> that adds virtually any type of functionality you could dream of. Some are commercial, while others are <a href=\"https://speckyboy.com/wordpress-free-plugin-woocommerce/\" target=\"_blank\" rel=\"noopener\">free to use</a>.</p>\n<p>A default installation of the free WooCommerce plugin is all you need to run a very basic store selling either physical or digital goods. To do something more complex, it&#8217;s likely you&#8217;ll need a combination of extensions. This is both a blessing and a curse, as it can take a lot of research to find exactly the right solutions for your needs. Still, the number of possibilities is staggering.</p>\n<p><strong>Best for selling:</strong> Physical products, digital products, subscriptions, event registrations</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-01.jpg\" alt=\"WooCommerce WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://easydigitaldownloads.com/\" target=\"_blank\" rel=\"noopener\">Easy Digital Downloads <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>As its name suggests, Easy Digital Downloads is built with digital products in mind. Like WooCommerce, it features an impressive variety of <a href=\"https://easydigitaldownloads.com/downloads/\" target=\"_blank\" rel=\"noopener\">extensions</a>. They&#8217;ll help you connect to various payment gateways, and mailing list services, and even enable you to sell licensed software. Selling physical products is also possible through the <a href=\"https://easydigitaldownloads.com/downloads/simple-shipping/\" target=\"_blank\" rel=\"noopener\">Simple Shipping</a> extension.</p>\n<p>EDD is both niche and extensible. That makes it an excellent choice for creative professionals who want to sell their work online.</p>\n<p><strong>Best for selling:</strong> Digital products, subscriptions, licensed software</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-02.jpg\" alt=\"Easy Digital Downloads WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/bigcommerce/\" target=\"_blank\" rel=\"noopener\">BigCommerce For WordPress <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>BigCommerce For WordPress is different from your typical eCommerce plugin. Instead of relying on your webserver to power everything, it ties in with the <a href=\"https://www.bigcommerce.com/\" target=\"_blank\" rel=\"noopener\">BigCommerce SaaS product</a>. This allows you to integrate your store into your WordPress website without taxing web hosting resources.</p>\n<p>Another big difference is that you&#8217;ll find a bit more functionality out of the box. Since this is a commercial service, plenty of features are included with your package, although additional extensions (called &#8220;apps&#8221;) are also available.</p>\n<p><strong>Best for selling:</strong> Physical products, digital products</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-03.jpg\" alt=\"BigCommerce For WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/ecwid-shopping-cart/\" target=\"_blank\" rel=\"noopener\">Ecwid Ecommerce Shopping Cart <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Ecwid not only lets you create a store using WordPress but also facilitates sales on social media. Your products can be integrated into both Facebook and Instagram, with a chance to significantly expand your audience. Selling on Amazon, eBay, and Google Shopping is also possible.</p>\n<p>It&#8217;s also a SaaS product, meaning your <a href=\"https://speckyboy.com/signs-wordpress-outgrown-hosting/\" target=\"_blank\" rel=\"noopener\">web hosting</a> requirements won&#8217;t be too hefty. There&#8217;s a free plan with limited functionality. But to take advantage of social media integration and larger product quantities, you&#8217;ll need a <a href=\"https://www.ecwid.com/pricing\" target=\"_blank\" rel=\"noopener\">paid plan</a>.</p>\n<p><strong>Best for selling:</strong> Physical products, digital products</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-04.jpg\" alt=\"Ecwid Ecommerce Shopping Cart WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://eventespresso.com/\" target=\"_blank\" rel=\"noopener\">Event Espresso <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>eCommerce covers a wide range of use cases and event registrations are a popular niche. And that&#8217;s exactly what Event Espresso specializes in. This commercial plugin makes it easy to sell access to in-person or online events, with support for multiple ticket types and pricing levels.</p>\n<p>While it&#8217;s great for conferences and other one-off events, you can also create recurring events as well. Calendar integration is possible via an <a href=\"https://eventespresso.com/add-ons/\" target=\"_blank\" rel=\"noopener\">add-on</a>.</p>\n<p><strong>Best for selling:</strong> Event registrations</p>\n<h2><a href=\"https://www.wpeasycart.com/\" target=\"_blank\" rel=\"noopener\">WP EasyCart <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>WordPress eCommerce plugins tend to require a piecemeal approach. You start with a basic cart and add the functionality you need through extension plugins. WP EasyCart eschews that approach and instead focuses on multiple service levels. Depending on which level you choose (Free, Pro, Premium), you&#8217;ll gain access to specific features.</p>\n<p>The free level offers the basics while adding an additional charge in the form of &#8220;application fees&#8221; for the use of the built-in payment gateways. Upgrade, and you&#8217;ll waive those fees – plus have the ability to sell downloads, subscriptions, and offer role-based product pricing.</p>\n<p><strong>Best for selling:</strong> Physical products, digital products, subscriptions</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-06.jpg\" alt=\"WP EasyCart WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/ecommerce-product-catalog/\" target=\"_blank\" rel=\"noopener\">eCommerce Product Catalog Plugin for WordPress <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>eCommerce Product Catalog offers the unique premise of building an online catalog with the ability to add store functionality later on. When you&#8217;re ready, install some commercially-available <a href=\"https://implecode.com/wordpress/plugins/\" target=\"_blank\" rel=\"noopener\">extensions</a> to start selling.</p>\n<p>This could be a solid solution for budget-minded clients. A catalog can be built over time without the pressure of investing in yearly extension licenses right away. You also have the choice of buying extensions a la carte or via a bundle.</p>\n<p><strong>Best for selling:</strong> Physical products</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-07.jpg\" alt=\"eCommerce Product Catalog Plugin for WordPress eCommerce Solution Plugin\" width=\"900\" height=\"400\" /></p>\n<h2><a href=\"https://wordpress.org/plugins/download-manager/\" target=\"_blank\" rel=\"noopener\">Download Manager <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>Download Manager provides a simple way to sell digital goods with WordPress. By default, the plugin is a means to control access to files and documents. But an <a href=\"https://www.wpdownloadmanager.com/download/premium-package-wordpress-digital-store-solution/\" target=\"_blank\" rel=\"noopener\">add-on</a> will integrate plenty of eCommerce bells and whistles.</p>\n<p>Capabilities include software licensing, subscriptions, and role-based discounts. Product variations allow for selling different versions, while expiration dates ensure that files can&#8217;t be downloaded past a predetermined amount of time.</p>\n<p><strong>Best for selling:</strong> Digital products, subscriptions, licensed software</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-08.jpg\" alt=\"Download Manager WordPress eCommerce Solution Plugin\" width=\"900\" height=\"304\" /></p>\n<h2><a href=\"https://www.tipsandtricks-hq.com/wordpress-estore-plugin-complete-solution-to-sell-digital-products-from-your-wordpress-blog-securely-1059\" target=\"_blank\" rel=\"noopener\">WP eStore <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>WP eStore is a simple and flexible plugin that has been on the market for several years. It works in conjunction with PayPal and allows for both one-time and subscription purchases. The plugin supports multiple product types and integrates with NextGEN Gallery to sell digital images. A collection of free <a href=\"https://www.tipsandtricks-hq.com/ecommerce/wp-estore-addons-list\" target=\"_blank\" rel=\"noopener\">add-ons</a> is also available.</p>\n<p>An interesting plot twist is that WP eStore is a one-time purchase. That provides you with lifetime access and usage on unlimited websites. No yearly subscriptions – a rarity in today&#8217;s world.</p>\n<p><strong>Best for selling:</strong> Physical products, digital products, licensed software</p>\n<h2><a href=\"https://tribulant.com/plugins/view/10/wordpress-shopping-cart-plugin\" target=\"_blank\" rel=\"noopener\">WordPress Shopping Cart Plugin <i class=\"fas fa-external-link-alt external\"></i></a></h2>\n<p>With the WordPress Shopping Cart plugin, you can build a full-featured eCommerce website for relatively little investment. Single and unlimited site licenses are available on either a yearly or lifetime basis. And there is a solid selection of commercial <a href=\"https://tribulant.com/plugins/extensions/10/wordpress-shopping-cart-plugin\" target=\"_blank\" rel=\"noopener\">extensions</a> that come with lifetime licenses. Multiple payment gateways and shipping providers are supported.</p>\n<p>The lower cost doesn&#8217;t mean a lack of features. You can still sell digital products and subscriptions (provided you use a compatible gateway).</p>\n<p><strong>Best for selling:</strong> Physical products, digital products, subscriptions</p>\n<p><img loading=\"lazy\" src=\"https://speckyboy.com/wp-content/uploads/2022/04/wordpress-ecommerce-plugins-09.jpg\" alt=\"Shopping Cart Plugin WordPress eCommerce Solution\" width=\"900\" height=\"400\" /></p>\n<h2>Sell Anything with WordPress</h2>\n<p>One of the keys to building a great eCommerce website is to start with a solid foundation. Both WordPress and its ecosystem of plugins will get you moving in the right direction.</p>\n<p>And while WooCommerce is the elephant (er, ninja) in the room, it&#8217;s not the only option. Its massive market share tends to overshadow the category. But, as great as Woo is, you may find everything you need with one of the other entries on this list.</p>\n<p>Regardless of your choice, it&#8217;s nice to know that WordPress can power virtually any type of store. If you can dream it, the right eCommerce plugin can help you do it.</p>\n<p>The post <a rel=\"nofollow\" href=\"https://speckyboy.com/wordpress-plugins-ecommerce/\">The 10 Best Plugins for Adding eCommerce to WordPress</a> appeared first on <a rel=\"nofollow\" href=\"https://speckyboy.com\">Speckyboy Design Magazine</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://speckyboy.com/wordpress-plugins-ecommerce/feed/"
        ],
        "slash:comments": [
            "9"
        ],
        "plainDescription": "We share the best eCommerce WordPress plugins on the market and provide you with\nbackground info on what types of shops they are suited for.\n\nThe post The 10 Best Plugins for Adding eCommerce to WordP...",
        "providerTitle": "Speckboy",
        "providerURL": "https://speckyboy.com/",
        "providerIdx": 6
    },
    {
        "title": [
            "Issue #498"
        ],
        "link": [
            "https://css-weekly.com/issue-498/"
        ],
        "pubDate": [
            "Wed, 30 Mar 2022 21:55:52 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-498/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn the mental model that makes CSS more intuitive, how to adapt your sites to the different scenarios of a device pointer, how to optimize LCP, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Headlines</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.joshwcomeau.com/css/understanding-layout-algorithms/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Understanding Layout Algorithms</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.joshwcomeau.com/css/understanding-layout-algorithms/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/understanding-layout-algorithms.png\" alt=\"Understanding Layout Algorithms\" /></a>\n\t\t\t\t\t\t<p>Joshua Comeau outlines the mental model that makes CSS more intuitive and easier to learn. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.joshwcomeau.com/css/understanding-layout-algorithms/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/03/guide-hover-pointer-media-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">A Guide To Hover And Pointer Media Queries</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://www.smashingmagazine.com/2022/03/guide-hover-pointer-media-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/a-guide-to-hover-and-pointer-media-queries.jpg\" alt=\"A Guide To Hover And Pointer Media Queries\" /></a>\n\t\t\t\t\t\t<p>Cristian Díaz explains how to adapt your sites to the different scenarios of a device pointer by using media queries <code>hover</code>, <code>pointer</code>, <code>any-hover</code> and <code>any-pointer</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/03/guide-hover-pointer-media-queries/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/an-event-apart-spring-summit-2022\">Looking to up your UX design game?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/an-event-apart-spring-summit-2022\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/see-the-full-agenda-and-sign-up-today.png\" alt=\"Looking to up your UX design game?\" /></a>\n\t\t\t\t\t\t<p>Join us online April 18–20 for <em><a href=\"https://cssw.io/an-event-apart-spring-summit-2022\" rel=\"noopener\" target=\"_blank\">An Event Apart Spring Summit 2022</a></em> — a 3-day, online web design conference with deep insights into advanced CSS, new design frontiers, container queries, web components, web platform features, SEO + UX, and more.</p>\n<p>With 15 sessions presented by experts, you’ll leave inspired and re-energized with new ideas and techniques you can put into practice right away.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/an-event-apart-spring-summit-2022\">See the full agenda and sign up today.</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">From Our YouTube Channel</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/nQzRTsjBXfQ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Start Using color-scheme CSS Property</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://youtu.be/nQzRTsjBXfQ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/start-using-color-scheme-css-property.png\" alt=\"Start Using color-scheme CSS Property\" /></a>\n\t\t\t\t\t\t<p>An introduction to <code>color-scheme</code> CSS property (and meta tag) which can change how native browser elements are rendered—in light or dark mode. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/nQzRTsjBXfQ?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/mPZ64m9QpQY?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Create Gradient CSS Text Strokes</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Learn how to create linear &#038; radial gradient text strokes using <code>-webkit-text-stroke</code> and <code>background-clip</code> CSS properties. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/mPZ64m9QpQY?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://youtu.be/5SUeAJn5xbU?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Create a Stunning Glassmorphism Effect in CSS</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>A step-by-step guide to creating immersive background effects and beautiful gradient headlines using <code>backdrop-filter</code> and <code>background-clip</code> CSS properties. </p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://youtu.be/5SUeAJn5xbU?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Watch video</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://csswizardry.com/2022/03/optimising-largest-contentful-paint/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Optimising Largest Contentful Paint</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Harry Roberts looks at some more technical and non-obvious aspects of optimizing the Largest Contentful Paint.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://csswizardry.com/2022/03/optimising-largest-contentful-paint/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://stackdiary.com/css-math-functions/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How to Use CSS Math Functions</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Alex Ivanovs shows how to use the CSS logical functions <code>calc()</code>, <code>clamp()</code>, <code>min()</code> and <code>max()</code>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://stackdiary.com/css-math-functions/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cloudfour.com/thinks/resetting-inherited-css-with-revert/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Resetting Inherited CSS with “Revert”</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Scott Vandehey demonstrates how the <code>revert</code> keyword works in CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cloudfour.com/thinks/resetting-inherited-css-with-revert/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Tricks to Cut Corners Using CSS Mask and Clip-Path Properties</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Temani Afif shows how to create the cut-corners effect using CSS Mask and <code>clip-path</code> properties.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/cut-corners-using-css-mask-and-clip-path-properties/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://gomakethings.com/html-semantics/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">HTML Semantics</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Chris Ferdinandi outlines the importance of the HTML elements that you use often—they convey information to people who use screen readers and provide critical functionality to people who navigate the web with a keyboard.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://gomakethings.com/html-semantics/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/cssday-2022\">Also prefer fundamental CSS knowledge over hypes?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/cssday-2022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/cssday.png\" alt=\"Also prefer fundamental CSS knowledge over hypes?\" /></a>\n\t\t\t\t\t\t<p>You’re not alone, and we’ve got just the conference for you. CSS Day is a deep-diving, content-focused CSS conference in Amsterdam, NL. We ask our speakers to treat CSS &#038; design topics that they themselves, as well as our attendees, can geek out on. On June 9th &#038; 10th, after a two-year silence, we’ll host our 8th edition.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/cssday-2022\">See our line-up</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.cssui.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">CSSUI</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>CSSUI is a library of interactive components realized in pure HTML and CSS. It includes frequently used components such as Accordion, Modal, Tabs, and more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.cssui.dev/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://uicolors.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">UI Colors</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>UI Colors is an online generator to create, edit and save Tailwind CSS color shades based on a given color.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://uicolors.app/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://codepen.io/Adir-SL/pen/PoEqGYK?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Toggle 3D</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://codepen.io/Adir-SL/pen/PoEqGYK?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/03/css-3d-toggle.png\" alt=\"Toggle 3D\" /></a>\n\t\t\t\t\t\t<p>Adir Slutzki created a stunning, animated toggle using CSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://codepen.io/Adir-SL/pen/PoEqGYK?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn the mental model that makes CSS more intuitive, how to adapt your sites to\nthe different scenarios of a device pointer, how to optimize LCP, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "Setting Up Your PHP Development Environment with Docker"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/php-development-environment/?utm_source=rss\"\n              title=\"Setting Up Your PHP Development Environment with Docker\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install.jpg\"\n        alt=\"PHP & MySQL: Installation\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to set up a development environment by installing PHP 8 and MySQL using Docker, in this excerpt from our book PHP & MySQL: Novice to Ninja.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/php-development-environment/?utm_source=rss\">Setting Up Your PHP Development Environment with Docker</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/php-development-environment/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=256770",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "PHP",
            "Programming"
        ],
        "dc:creator": [
            "Tom Butler"
        ],
        "pubDate": [
            "Fri, 11 Feb 2022 06:39:09 GMT"
        ],
        "plainDescription": "PHP & MySQL: Installation\n[https://uploads.sitepoint.com/wp-content/uploads/2022/01/1643604106php-mysql-install.jpg]\n[https://www.sitepoint.com/php-development-environment/?utm_source=rss] Learn\nhow t...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss\"\n              title=\"SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm.png\"\n        alt=\"SitePoint NFT drop #2\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-300x170.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-1024x580.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm-768x435.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            After our first SitePoint NFT release sold out in 4 days, our second drop landed on OpenSea on Monday. What have we learned so far?\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss\">SitePoint Origami Rhino NFT Drop #2 – Electric Boogaloo</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=208429",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Blockchain",
            "Ethereum",
            "Web"
        ],
        "dc:creator": [
            "Alex Walker"
        ],
        "pubDate": [
            "Mon, 08 Nov 2021 22:00:44 GMT"
        ],
        "plainDescription": "SitePoint NFT drop #2\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636440162drop-2sm.png]\n[https://www.sitepoint.com/update-sitepoint-nft-drop-2/?utm_source=rss] After\nour first SitePoin...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Issue #491"
        ],
        "link": [
            "https://css-weekly.com/issue-491/"
        ],
        "pubDate": [
            "Tue, 01 Feb 2022 22:55:13 +0000"
        ],
        "dc:creator": [
            "Zoran Jambor"
        ],
        "category": [
            "Issue"
        ],
        "guid": [
            {
                "_": "https://css-weekly.com/issue-491/",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "Learn how to create fancy borders using CSS masking, how exactly Flexbox works, what’s new in DevTools, and more."
        ],
        "content:encoded": [
            "\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://css-tricks.com/css-borders-using-masks/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Fancy CSS Borders Using Masks</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://css-tricks.com/css-borders-using-masks/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/css-borders-using-masks.png\" alt=\"Fancy CSS Borders Using Masks\" /></a>\n\t\t\t\t\t\t<p>Temani Afif looks at some modern CSS masking techniques that will help you create fancy borders.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://css-tricks.com/css-borders-using-masks/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://tiffanybbrown.com/2022/01/how-does-flexbox-work/index.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">How Flexbox Works</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://tiffanybbrown.com/2022/01/how-does-flexbox-work/index.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/how-does-flexbox-work.png\" alt=\"How Flexbox Works\" /></a>\n\t\t\t\t\t\t<p>Tiffany B. Brown untangles Flexbox mysteries giving you an overview of the most important things to keep in mind while working with Flexbox.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://tiffanybbrown.com/2022/01/how-does-flexbox-work/index.html?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise\" target=\"_blank\">From Our Sponsor</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://cssw.io/the-next-big-thing\">The next big thing is a lot of small things.</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://cssw.io/the-next-big-thing\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/the-next-big-thing-is-a-lot-of-small-things.png\" alt=\"The next big thing is a lot of small things.\" /></a>\n\t\t\t\t\t\t<p><a href=\"https://cssw.io/the-next-big-thing\" rel=\"noopener\" target=\"_blank\">The.com</a> is not your traditional site builder. The grid-based framework is deliberately engineered to expose CSS/HTML, so you can build insanely powerful sites and then endlessly duplicate, share, and own your work. Sign up now to start building sites and components for free at <a href=\"https://cssw.io/the-com-join\" rel=\"noopener\" target=\"_blank\">app.the.com/join</a>.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://cssw.io/the-next-big-thing\">Start Building ⚡</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Articles & Tutorials</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.smashingmagazine.com/2022/01/devtools-updates-2022/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">What’s New In DevTools?</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Patrick Brosset breaks down the latest features in DevTools across browsers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.smashingmagazine.com/2022/01/devtools-updates-2022/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://kilianvalkhof.com/2022/css-html/comparing-css-specificity-values/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Comparing CSS Specificity Values</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Kilian Valkhof explains how to compare two selectors to decide which has the highest specificity.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://kilianvalkhof.com/2022/css-html/comparing-css-specificity-values/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://blog.logrocket.com/using-postcss-media-queries-level4/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Using PostCSS with Media Queries Level 4</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Amarachi Amaechi reviews several features available in Media Queries Level 4 and demonstrates the implementation of each feature using PostCSS.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://blog.logrocket.com/using-postcss-media-queries-level4/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://www.matuzo.at/blog/2022/heres-what-i-didnt-know-about-where/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Here’s What I Didn’t Know About :where()</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Manuel Matuzovic explains how you can lower the specificity of a selector using :where() pseudo-class.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://www.matuzo.at/blog/2022/heres-what-i-didnt-know-about-where/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://ukhomeoffice.github.io/accessibility-posters/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Designing Accessible Services</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>General guidance on how to design more accessible services that covers best design practices for users from the following areas: low vision, D/deaf and hard of hearing, dyslexia, motor disabilities, users on the autistic spectrum, and users of screen readers.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://ukhomeoffice.github.io/accessibility-posters/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Read more</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\"><a href=\"http://css-weekly.com/advertise/#job-ad\">Promoted Link</a></h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://porkbun.com?utm_source=CSS_Weekly&amp;utm_medium=Newsletter_Ad&amp;utm_campaign=Q1_2022\">The Best Home for Your Next Online Project</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://porkbun.com?utm_source=CSS_Weekly&amp;utm_medium=Newsletter_Ad&amp;utm_campaign=Q1_2022\"><img width=\"130\" height=\"130\" src=\"https://css-weekly.com/wp-content/uploads/2022/01/porkbun-bring-your-project-to-life-today1.png\" alt=\"The Best Home for Your Next Online Project\" /></a>\n\t\t\t\t\t\t<p>Porkbun is the most affordable home for all your domain and hosting needs. We have some of the lowest registration and renewal rates on over 500 domain names. Start with a free hosting trial and know that you and your work are protected with a free SSL certificate and free WHOIS privacy.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://porkbun.com?utm_source=CSS_Weekly&amp;utm_medium=Newsletter_Ad&amp;utm_campaign=Q1_2022\">Bring Your Project to Life Today</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Tools</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://pika.rishimohan.me/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Pika</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Pika is an online open-source app that lets you quickly beautify screenshots by adding rounded corners, background colors, shadows, and more.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://pika.rishimohan.me/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article floated\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://shottr.cc/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Shottr</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<p>Shottr is a macOS screenshot app with scrolling screenshots, OCR, annotation, and measurement instruments.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://shottr.cc/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Check it out</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Inspiration</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<article class=\"newsletter-article\">\n\t\t\t\t\t\t<header class=\"newsletter-header\">\n\t\t\t\t\t\t\t<h2 class=\"article-title\"><a href=\"https://bradfrost.com/blog/post/creative-process-lessons-from-get-back/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Creative Process Lessons From ‘Get Back’</a></h2>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</header>\n\t\t\t\t\t\t<a href=\"https://bradfrost.com/blog/post/creative-process-lessons-from-get-back/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\"><img width=\"400\" height=\"178\" src=\"https://css-weekly.com/wp-content/uploads/2022/02/creative-process-lessons-from-get-back.jpg\" alt=\"Creative Process Lessons From ‘Get Back’\" /></a>\n\t\t\t\t\t\t<p>Brad Frost shares insightful lessons on the creative process learned from the documentary about The Beatles.</p>\n\t\t\t\t\t\t<p><a class=\"article-call-to-action\" href=\"https://bradfrost.com/blog/post/creative-process-lessons-from-get-back/?utm_source=CSS-Weekly&amp;utm_campaign=Issue-502&amp;utm_medium=RSS\">Get inspired</a></p>\n\t\t\t\t\t</article>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t</section>\n\n\t\t\t\t\t<section class=\"newsletter-section\">\n\n\t\t\t\t\t\t\t\t\t<hr />\n\t\t\t\t\t<br />\n\t\t\t\t\t<h1 class=\"section-title\">Until Next Week</h1>\n\t\t\t\t\t<br />\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div class=\"newsletter-section-intro\">\n\t\t\t\t\t<p>Thanks for reading! If you find the content valuable, please consider <a href=\"http://bit.ly/cssweekly-patreon\" target=\"_blank\" rel=\"noopener noreferrer\">supporting the newsletter on Patreon</a>.</p>\n<p>Happy coding,<br />\n<a href=\"http://twitter.com/ZoranJambor\" target=\"_blank\" rel=\"noopener noreferrer\">Zoran Jambor</a></p>\n\t\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</section>\n\n\t\t"
        ],
        "plainDescription": "Learn how to create fancy borders using CSS masking, how exactly Flexbox works,\nwhat’s new in DevTools, and more....",
        "providerTitle": "CSS Weekly",
        "providerURL": "https://css-weekly.com/",
        "providerIdx": 7
    },
    {
        "title": [
            "5 Reasons Managers Refuse to Give Developers the Rewards They Deserve"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss\"\n              title=\"5 Reasons Managers Refuse to Give Developers the Rewards They Deserve\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve.jpg\"\n        alt=\"5 Reasons Managers Refuse to Give Developers the Rewards They Deserve\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Even if you work really hard, chances are you don't get paid what you deserve. Learn five reasons for this, and what you can do about it.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss\">5 Reasons Managers Refuse to Give Developers the Rewards They Deserve</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/managers-developers-rewards/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=204776",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Andrew McDermott"
        ],
        "pubDate": [
            "Wed, 15 Sep 2021 02:00:08 GMT"
        ],
        "plainDescription": "5 Reasons Managers Refuse to Give Developers the Rewards They Deserve\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631602795developer-reward-deserve.jpg]\n[https://www.sitepoint.com/manag...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "author": [
            "Steve Sewell"
        ],
        "title": [
            "How Partytown Eliminates Website Bloat From Third-Party Scripts"
        ],
        "link": [
            "https://www.smashingmagazine.com/2022/04/partytown-eliminates-website-bloat-third-party-apps/"
        ],
        "pubDate": [
            "Fri, 29 Apr 2022 10:30:00 +0000"
        ],
        "guid": [
            "https://www.smashingmagazine.com/2022/04/partytown-eliminates-website-bloat-third-party-apps/"
        ],
        "description": [
            "Introducing Partytown, a lightweight open-source solution that reduces execution delays due to third-party JavaScript by offloading third-party scripts to web workers, which run in background threads."
        ],
        "content:encoded": [
            "\n          <html>\n            <head>\n              <meta charset=\"utf-8\">\n              <link rel=\"canonical\" href=\"https://www.smashingmagazine.com/2022/04/partytown-eliminates-website-bloat-third-party-apps/\" />\n              <title>How Partytown Eliminates Website Bloat From Third-Party Scripts</title>\n            </head>\n            <body>\n              <article>\n                <header>\n                  <h1>How Partytown Eliminates Website Bloat From Third-Party Scripts</h1>\n                  \n                    \n                    <address>Steve Sewell</address>\n                  \n                  <time datetime=\"2022-04-29T10:30:00&#43;00:00\" class=\"op-published\">2022-04-29T10:30:00+00:00</time>\n                  <time datetime=\"2022-04-29T10:30:00&#43;00:00\" class=\"op-modified\">2022-05-05T13:13:55+00:00</time>\n                </header>\n                \n\n<p>Great user experience starts with a page that loads instantly. The average user doesn’t spend much time waiting for a web page to load or to interact with the page: According to Google, if a page’s load time goes up from 1 second to 3 seconds, the <a href=\"https://www.thinkwithgoogle.com/marketing-strategies/app-and-mobile/page-load-time-statistics/\">probability of the user bouncing increases by 32%</a>. However, it’s not always easy to maintain high performance in websites. And slow websites are, in a way, discrimination: The <a href=\"https://www.gsma.com/mobileeconomy/wp-content/uploads/2022/02/280222-The-Mobile-Economy-2022.pdf\">majority of the world’s population</a> don’t have access to high-speed Internet or fast CPUs. Even if your website is designed with usability in mind, these factors impede users from fully benefiting from the website’s features.</p>\n\n<p>This is why performance is crucial when building websites. Performance needs to be built in starting at the code level, and user-centric metrics like time to interactive (TTI), total blocking time (TBT), and first input delay (FID) help you gauge how fast a website is. But modern web pages are heavy and ever-growing in size (known fondly as “website bloat”): The <a href=\"https://httparchive.org/reports/state-of-the-web\">average web page is over 2 megabytes large with over 200 requests</a>. Large, unwieldy websites, with several third-party scripts embedded, are usually behind a frustrating user experience. When you need these third-party scripts on your website to run your business, as most websites do, you have a massive challenge on your hands:</p>\n\n<blockquote>How can you improve your key performance metrics and keep your users happy without compromising on important capabilities?</blockquote>\n\n<h2 id=\"the-javascript-tax\">The JavaScript Tax</h2>\n\n<p>It’s a known fact that <a href=\"https://hackernoon.com/web-bloat-isnt-a-knowledge-problem-46e561031663\">JavaScript is one of the main culprits</a> behind website bloat. Providing rich, interactive website experiences needs added assets that consume your users’ resources, from CPU and GPU to memory and network. Large images and videos aside, third-party scripts like pixel trackers, A/B testing, ads, widgets, CDNs, etc., are usually the biggest pieces of the performance puzzle. Third-party scripts, which are code that is embedded within your site and not directly under your developers’ control, compete with a website’s own code for the browser’s main thread, which delays content rendering and makes websites feel sluggish.</p>\n\n<p>It’s also important to remember that your end user’s mobile devices are way less sophisticated than the ones your website was built on: All the JavaScript on your website is the reason the average web page takes <a href=\"https://httparchive.org/reports/loading-speed#ttci\">more than 14 seconds</a> to load and get interactive on mobile. This leads to a negative effect on <a href=\"https://developers.google.com/web/tools/lighthouse\">Lighthouse scores</a>, <a href=\"https://web.dev/vitals/\">Core Web Vitals</a>, and <a href=\"https://developers.google.com/search/docs/advanced/experience/page-experience\">search rankings</a> and reduced user engagement.</p>\n\n<p>According to <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript\">Google Web Fundamentals</a>, third-party scripts can cause several issues including:</p>\n\n<ul>\n<li>Too many network requests to multiple servers;</li>\n<li>Sending <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/javascript-startup-optimization\">too much JavaScript</a>;</li>\n<li>Resource-intensive script parsing and execution;</li>\n<li>Insufficient <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching\">HTTP caching</a>;</li>\n<li>Lack of sufficient <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer\">server compression</a> of resources;</li>\n<li>Blocking content display until they complete processing;</li>\n<li>Use of legacy APIs (e.g <a href=\"https://developers.google.com/web/updates/2016/08/removing-document-write\">document.write()</a>) known to be <a href=\"https://developers.google.com/web/tools/lighthouse/audits/document-write\">harmful</a> to the user experience;</li>\n<li>Excessive DOM elements or expensive CSS selectors.</li>\n</ul>\n\n<p>When you have lots of third-party scripts on your web page, they will block your own JavaScript. This becomes especially critical for eCommerce sites and online marketplaces that need these third-party scripts to run their business and where time really is money.</p>\n\n<p>Offloading third-party scripts to <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\">web workers</a> running in background threads is a potential solution that allows users to keep their scripts while improving performance. Web workers execute synchronously but can only communicate with the main thread asynchronously. Web workers also don’t have direct access to the DOM &mdash; only the main thread does. So, the key challenges are providing JavaScript code running inside the web worker with some kind of access to the DOM and making that access synchronous (even though communication with the main thread has to remain asynchronous).</p>\n\n<div data-audience=\"non-subscriber\" data-remove=\"true\" class=\"feature-panel-container\"><span class=\"feature-panel__desc\">More after jump! Continue reading below&nbsp;&darr;</span>\n<aside class=\"feature-panel\">\n<div class=\"feature-panel-left-col\">\n<div class=\"feature-panel-description\"><p><strong>Web forms</strong> are at the center of every meaningful interaction, so they’re worth getting a firm handle on. Meet Adam Silver&rsquo;s <strong><a href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\">Form Design Patterns</a></strong>, a practical guide to designing and building forms for the web.</p>\n<a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"btn btn--green btn--large\">Jump to table of contents&nbsp;↬</a></div>\n</div>\n<div class=\"feature-panel-right-col\"><a data-instant href=\"https://www.smashingmagazine.com/printed-books/form-design-patterns/\" class=\"feature-panel-image-link\">\n<div class=\"feature-panel-image\"><picture><source type=\"image/avif\" srcSet=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/64e57b41-b7f1-4ae3-886a-806cce580ef9/form-design-patterns-shop-image-1-1.avif\" />\n<img\n    loading=\"lazy\"\n    decoding=\"async\"\n    class=\"feature-panel-image-img\"\n    src=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/51e0f837-d85d-4b28-bfab-1c9a47f0ce33/form-design-patterns-shop-image.png\"\n    alt=\"Feature Panel\"\n    width=\"481\"\n    height=\"698\"\n/>\n</picture>\n</div>\n</a>\n</div>\n</aside>\n</div>\n\n<h2 id=\"introducing-partytown\">Introducing Partytown</h2>\n\n<p>Partytown is a lightweight open-source solution that reduces execution delays due to third-party JavaScript by offloading third-party scripts to web workers, which run in background threads. This frees up the browser’s main thread to run your own code. It’s maintained by <a href=\"https://www.builder.io/\">Builder.io</a> and is currently in beta.</p>\n\n<p>Builder.io is also home to <a href=\"https://github.com/builderio/qwik\">Qwik</a>, an open-source HTML-first, resumable web app framework which makes interactive sites load fast with only HTML and CSS, pulling JavaScript only when needed.</p>\n\n<p>While Partytown does not address all the bottlenecks caused by third-party scripts (listed in the section above), it does address the biggest challenges to building high-performance websites by:</p>\n\n<ul>\n<li>Freeing up main thread resources to be used only for the primary web app execution;</li>\n<li>Sandboxing third-party scripts and allowing or denying their access to main-thread APIs;</li>\n<li>Isolating long-running tasks within the web worker thread;</li>\n<li>Reducing layout thrashing coming from third-party scripts by batching DOM setters/getters into group updates;</li>\n<li>Throttling third-party scripts’ access to the main thread;</li>\n<li>Allowing third-party scripts to run exactly how they’re coded and without any alterations;</li>\n<li>Reading and writing main-thread DOM operations synchronously from within a web worker, allowing scripts running from the web worker to execute as expected.</li>\n</ul>\n\n<h3 id=\"the-architecture-behind-partytown\">The Architecture Behind Partytown</h3>\n\n<p>Despite innovations that speed up how we deliver JavaScript to the browser (minifying, compression, distributing, code-splitting, async, defer), executing the code once it’s in the browser is constrained by the fact that JavaScript is a single-threaded language &mdash; only one script can run at a time.</p>\n\n<p>Partytown is a lazy-loaded JavaScript library to help redirect resource-intensive scripts to a web worker. To ensure apps of all sizes can continue to use third-party scripts without running into performance snags, Partytown offloads these third-party scripts into a web worker, and lets you either allow or deny their access to main-thread APIs. In other words, third-party scripts that are not required to be in the critical rendering path are executed in a background thread. This frees up the browser’s main thread to execute first-party JavaScript, which is often responsible for handling user input or painting the screen.</p>\n\n<p>Consider Google Analytics, which collects and sends tracking data using <code>navigator.sendBeacon()</code>. On the one hand, it’s a background task that can run asynchronously. On the other hand, Google Analytics still requires synchronous DOM API access when reading values from <code>document</code>and <code>window</code>. Partytown allows executing scripts like Google Analytics from the background while accessing the DOM as if it were in the main thread.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<figure class=\"\n  \n    break-out article__image\n  \n  \n  \">\n  \n    <a href=\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7d7a864a-d5d7-44a4-871f-edf69bf6108e/1-partytown-eliminates-website-bloat-third-party-apps.png\">\n    \n    <img\n      loading=\"lazy\"\n      decoding=\"async\"\n      fetchpriority=\"low\"\n\t\t\twidth=\"800\"\n\t\t\theight=\"459\"\n\t\t\t\n\t\t\tsrcset=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg 400w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_800/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg 800w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1200/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg 1200w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_1600/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg 1600w,\n\t\t\t        https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_2000/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg 2000w\"\n\t\t\tsrc=\"https://res.cloudinary.com/indysigner/image/fetch/f_auto,q_80/w_400/https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/5ae2f1b6-6c71-488a-94f8-ddb8708d242e/partytown-visual.jpg\"\n\t\t\t\n\t\t\tsizes=\"100vw\"\n\t\t\talt=\"A picture showing how the code works with Partytown and without Partytown\"\n\t\t/>\n    \n    </a>\n  \n\n  \n    <figcaption class=\"op-vertical-bottom\">\n      (<a href='https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/7d7a864a-d5d7-44a4-871f-edf69bf6108e/1-partytown-eliminates-website-bloat-third-party-apps.png'>Large preview</a>)\n    </figcaption>\n  \n</figure>\n\n<h3 id=\"how-partytown-works\">How Partytown Works</h3>\n\n<p>The main challenge with a web worker is that it doesn’t have direct access to DOM APIs accessible from the main thread, such as <code>window, document,</code>or <code>localStorage</code>. While a messaging system can be created between the two threads to proxy DOM operations, the <code>postMessage</code> API used for web worker/main thread communication is asynchronous. This means third-party scripts relying on synchronous DOM operations will simply fail.</p>\n\n<p>Partytown provides synchronous access to the DOM API from within web workers using JavaScript proxies, service workers and synchronous XHR requests. Access to the DOM API within the web worker is proxied, creating synchronous XHR requests with the methods and values being accessed (for example, <code>document.title</code> or <code>window.screen.width</code>).</p>\n\n<p>These requests are intercepted by a service worker, which uses <code>postMessage</code> to relay the API request to the main thread asynchronously. By mapping each DOM API request to a synchronous XHR, however, the web worker pauses execution until the service worker responds. The end result is that, from the perspective of the third-party script in the web worker, it’s all synchronous.</p>\n\n<p>The benefit of this approach is that you don’t need to rewrite or refactor your third-party scripts to make them work within web workers. They’re executed exactly as coded; they just work from the background thread.</p>\n\n<p>Furthermore, by proxying all DOM API access, Partytown can log every read and write and even restrict access to certain DOM APIs.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"setting-up-partytown\">Setting Up Partytown</h2>\n\n<p>Partytown does not automatically move all third-party scripts to a web worker. To get started, developers need to “opt in” &mdash; that is, they must choose which scripts are loaded and executed through Partytown. Use <code>npm</code>at the command line to install Partytown.</p>\n\n<pre><code class=\"language-bash\">npm install @builder.io/partytown</code></pre>\n\n<p>Next, add the <code>type=&quot;text/partytown&quot;</code> attribute to each third-party script that you want to run from a web worker.</p>\n\n<pre><code class=\"language-javascript\">- &lt;script&gt;...&lt;/script&gt;\n+ &lt;script type=\"text/partytown\"&gt;...&lt;/script&gt;</code></pre>\n\n<p>Partytown is only enabled for specific scripts when they have the <code>type=&quot;text/partytown&quot;</code> attribute. This does two things:</p>\n\n<ol>\n<li>Prevents the main thread from executing the script;</li>\n<li>Provides a selector for Partytown to query, such as <code>document.querySelectorAll('script[type=&quot;text/partytown&quot;]')</code>.</li>\n</ol>\n\n<p>The next step is inlining the Partytown snippet in the <code>&lt;head&gt;</code>. If you&rsquo;re using React, we recommend using the <code>&lt;Partytown/&gt; React</code> component.</p>\n\n<p>The following is an example of including the <code>&lt;Partytown/&gt;</code> component in a Next.js page.</p>\n\n<div class=\"break-out\">\n<pre><code class=\"language-javascript\">import Head from \"next/head\";\nimport { Partytown } from \"@builder.io/partytown/react\";\n\nconst Home = () =&gt; {\n  return (\n    &lt;&gt;\n      &lt;Head&gt;\n        &lt;title&gt;My App&lt;/title&gt;\n        &lt;script type=\"text/partytown\" src=\"https://example.com/analytics.js\"&gt;&lt;/script&gt;\n        &lt;Partytown /&gt;\n      &lt;/Head&gt;\n      &lt;main&gt;...&lt;/main&gt;\n    &lt;/&gt;\n  );\n};\n\nexport default Home;</code></pre>\n</div>\n\n<p>For special cases, a minor amount of configuration might be required. Partytown works with any HTML page and doesn’t require a specific framework, but there are a few <a href=\"https://partytown.builder.io/integrations\">integrations (plugins/wrappers)</a> available, including for Next.js, Nuxt.js, React, and Shopify Hydrogen. Partytown also provides documentation and <a href=\"https://partytown.builder.io/common-services\">walkthroughs</a> for some third-party services like Facebook Pixel, Adobe Launch, and Google Tag Manager.</p>\n\n<p>While setting Partytown up, it’s important to try it first on a few pages and measure improvements using Google PageSpeed Insights. Once you confirm that all your scripts are working, you can turn it on for all the pages on the site.</p>\n\n<h2 id=\"partytown-in-action\">Partytown In Action</h2>\n\n<p>The <a href=\"https://www.builder.io/\">Builder.io</a> website managed to <a href=\"https://www.builder.io/blog/how-we-cut-99-percent-js-with-qwik-and-partytown\">cut 99% of its JavaScript</a> using a combination of Partytown and Qwik. This dramatically improved performance, with a <sup>100</sup>&frasl;<sub>100</sub> Google Lighthouse score on PageSpeed Insights even on mobile. There was also a huge decrease in total blocking time (TBT) and time to interactive (TTI), metrics that measure how long third-party scripts delay the execution of first-party JavaScript.</p>\n\n<p><a href=\"https://www.atoms.com/\">Atoms</a>, the online footwear store, currently uses Partytown on their marketing pages (specifically on <a href=\"https://www.atoms.com/why-atoms/\">Why Atoms</a>, <a href=\"https://www.atoms.com/about\">About</a>, <a href=\"https://www.atoms.com/press\">Press</a>, and <a href=\"https://www.atoms.com/products/gift-card\">Gift Cards</a>). They’re currently working to enable Partytown sitewide.</p>\n\n<div class=\"sponsors__lead-place\"></div>\n\n<h2 id=\"come-party-with-builder\">Come Party With Builder</h2>\n\n<p>Partytown is still in beta, so <a href=\"https://partytown.builder.io/trade-offs\">not every script works</a>. Builder.io actively invites people to test out Partytown and share their thoughts with the team. Users can report issues, request integrations and walkthroughs, or contribute code at <a href=\"https://github.com/builderio/partytown\">Partytown’s GitHub</a>. Partytown also has a lively <a href=\"https://discord.gg/tw5qMfgQ\">Discord community</a>, where you can help us test Partytown and join the conversation.</p>\n\n<p>Builder.io aims to make high performance the default for websites. A fast website with the best performance should be possible without any configuration. Builder has taken the first step toward this ideal with their open-source solutions, Partytown and Qwik, which are both pivotal in making near-zero-JavaScript websites attainable for anyone.</p>\n\n<h3 id=\"further-resources\">Further Resources</h3>\n\n<ul>\n<li><a href=\"https://partytown.builder.io/\">Partytown</a> by Builder.io</li>\n<li><a href=\"https://github.com/BuilderIO/partytown\">Partytown&rsquo;s GitHub repo</a></li>\n<li><a href=\"https://discord.com/invite/hbuEtxdEZ3\">Partytown Discord community</a></li>\n<li><a href=\"https://github.com/builderio/qwik\">Qwik’s GitHub repo</a></li>\n<li>“<a href=\"https://dev.to/adamdbradley/introducing-partytown-run-third-party-scripts-from-a-web-worker-2cnp\">Introducing Partytown 🎉: Run Third-Party Scripts From a Web Worker</a>”, Adam Bradley’s two-part series on Partytown</li>\n</ul>\n\n<div class=\"signature\">\n  <img src=\"https://www.smashingmagazine.com/images/logo/logo--red.png\" alt=\"Smashing Editorial\" width=\"35\" height=\"46\" loading=\"lazy\" decoding=\"async\" />\n  <span>(vf, yk, il)</span>\n</div>\n\n\n              </article>\n            </body>\n          </html>\n        "
        ],
        "plainDescription": "Introducing Partytown, a lightweight open-source solution that reduces execution\ndelays due to third-party JavaScript by offloading third-party scripts to web\nworkers, which run in background threads....",
        "providerTitle": "Smashing Magazine",
        "providerURL": "https://www.smashingmagazine.com",
        "providerIdx": 0
    },
    {
        "title": [
            "The 4 Best Linux Distros for Helping You Stay Anonymous"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss\"\n              title=\"The 4 Best Linux Distros for Helping You Stay Anonymous\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous.jpg\"\n        alt=\"The 4 Best Linux Distros for Helping You Stay Anonymous\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Looking for more privacy and anonymity online? Learn about the Linux distros that are best optimized for keeping you anonymous online.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss\">The 4 Best Linux Distros for Helping You Stay Anonymous</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/anonymous-linux-distros/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206938",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Web"
        ],
        "dc:creator": [
            "Daniel Diaz"
        ],
        "pubDate": [
            "Tue, 05 Oct 2021 02:00:26 GMT"
        ],
        "plainDescription": "The 4 Best Linux Distros for Helping You Stay Anonymous\n[https://uploads.sitepoint.com/wp-content/uploads/2021/10/1633313854linux-anonymous.jpg]\n[https://www.sitepoint.com/anonymous-linux-distros/?utm...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Why Learn to Code? 17 Benefits of Learning to Code"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/why-learn-to-code/?utm_source=rss\"\n              title=\"Why Learn to Code? 17 Benefits of Learning to Code\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc.png\"\n        alt=\"\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc-300x158.png 300w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc-1024x538.png 1024w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc-768x403.png 768w, https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc.png 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Why learn to code? Find out how coding can help you and your career, and learn what you need to know to decide if it's a fit for you.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/why-learn-to-code/?utm_source=rss\">Why Learn to Code? 17 Benefits of Learning to Code</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/why-learn-to-code/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=259920",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Programming",
            "Software Development",
            "Web"
        ],
        "dc:creator": [
            "Joel Falconer"
        ],
        "pubDate": [
            "Wed, 20 Apr 2022 11:54:00 GMT"
        ],
        "plainDescription": "[https://uploads.sitepoint.com/wp-content/uploads/2022/04/1650516069wltc.png]\n[https://www.sitepoint.com/why-learn-to-code/?utm_source=rss] Why learn to code?\nFind out how coding can help you and your...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "Adding Custom GitHub Badges to Your Repo"
        ],
        "link": [
            "https://css-tricks.com/adding-custom-github-badges-to-your-repo/"
        ],
        "comments": [
            "https://css-tricks.com/adding-custom-github-badges-to-your-repo/#respond"
        ],
        "dc:creator": [
            "Nick Sypteras"
        ],
        "pubDate": [
            "Tue, 03 May 2022 14:28:00 +0000"
        ],
        "category": [
            "Article",
            "github"
        ],
        "guid": [
            {
                "_": "https://css-tricks.com/?p=364932",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "description": [
            "<p>If you’ve spent time looking at open-source repos on&#160;GitHub, you’ve probably noticed that most of them use badges in their README files.&#160;Take the official React repository,&#160;for instance.&#160;There are GitHub badges all over the&#160;README&#160;file that&#160;communicate important dynamic info,&#160;like the latest released &#8230;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-custom-github-badges-to-your-repo/\">Adding Custom GitHub Badges to Your Repo</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "content:encoded": [
            "\n<p>If you’ve spent time looking at open-source repos on&nbsp;GitHub, you’ve probably noticed that most of them use badges in their README files.&nbsp;Take the official React repository,&nbsp;for instance.&nbsp;There are GitHub badges all over the&nbsp;README&nbsp;file that&nbsp;communicate important dynamic info,&nbsp;like the latest released version and whether the current build is passing.</p>\n\n\n\n<span id=\"more-364932\"></span>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1134\" height=\"346\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076757188_image.png?resize=1134%2C346&#038;ssl=1\" alt=\"Showing the header of React's repo displaying GitHub badges.\" class=\"wp-image-364934\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076757188_image.png?w=1134&amp;ssl=1 1134w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076757188_image.png?resize=300%2C92&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076757188_image.png?resize=1024%2C312&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076757188_image.png?resize=768%2C234&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Badges like these provide a nice way to highlight key information about a repository. You can even use your own custom assets as badges, like Next.js does in its repo.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1600\" height=\"593\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?resize=1600%2C593&#038;ssl=1\" alt=\"Showing the Next.js repo header with GitHub badges.\" class=\"wp-image-364935\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?w=1600&amp;ssl=1 1600w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?resize=300%2C111&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?resize=1024%2C380&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?resize=768%2C285&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/next_readme.png?resize=1536%2C569&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>But the most useful thing about GitHub badges by far is that they update <em>by themselves</em>. Instead of hardcoding values into your README, badges in GitHub can automatically pick up changes from a remote server.</p>\n\n\n\n<p>Let’s discuss how to add dynamic GitHub badges to the README file of your own project. We’ll start by using an online generator called <a href=\"http://badgen.net/\" rel=\"noopener\">badgen.net</a> to create some basic badges. Then we’ll make our badges dynamic by hooking them up to our own serverless function via <a href=\"http://napkin.io/\" rel=\"noopener\">Napkin</a>. Finally, we’ll take things one step further by using our own custom SVG files.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1434\" height=\"464\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076814684_image.png?resize=1434%2C464&#038;ssl=1\" alt=\"Showing three examples of custom GitHub badges including Apprentice, Intermediate, and wizard skill levels.\" class=\"wp-image-364936\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076814684_image.png?w=1434&amp;ssl=1 1434w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076814684_image.png?resize=300%2C97&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076814684_image.png?resize=1024%2C331&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/03/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076814684_image.png?resize=768%2C249&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<h3>First off: How do badges work?</h3>\n\n\n\n<p>Before we start building some badges in GitHub, let’s quickly go over how they are implemented. It’s actually very simple: <strong>badges are just images</strong>. README files are written in Markdown, and Markdown supports images like so:</p>\n\n\n\n<pre rel=\"Markdown\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">!\\[alt text\\](path or URL to image)</code></pre>\n\n\n\n<p>The fact that we can include a URL to an image means that a Markdown page will request the image data from a server when the page is rendered. So, <strong>if we control the server that has the image, we can change what image is sent back using whatever logic we want!</strong></p>\n\n\n\n<p>Thankfully, we have a couple options to deploy our own server logic without the whole “setting up the server” part. For basic use cases, we can create our GitHub badge images with <a href=\"http://badgen.net\" rel=\"noopener\">badgen.net</a> using its predefined templates. And again, <a href=\"http://Napkin.io\" rel=\"noopener\">Napkin</a> will let us quickly code a serverless function in our browser and then deploy it as an endpoint that our GitHub badges can talk to.</p>\n\n\n\n<h3>Making badges with Badgen</h3>\n\n\n\n<p>Let’s start off with the simplest badge solution: a static badge via <a href=\"http://badgen.net\" rel=\"noopener\">badgen.net</a>. The Badgen API uses URL patterns to create templated badges on the fly. The URL pattern is as follows:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/badge/:subject/:status/:color?icon=github</code></pre>\n\n\n\n<p>There’s a full list of the options you have for colors, icons, and more on <a href=\"http://badgen.net\" rel=\"noopener\">badgen.net</a>. For this example, let’s use these values:</p>\n\n\n\n<ul><li><code>:subject</code> : Hello</li><li><code>:status:</code> : World</li><li><code>:color:</code> : red</li><li><code>:icon:</code> : twitter</li></ul>\n\n\n\n<p>Our final URL winds up looking like this:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/badge/hello/world/red?icon=twitter</code></pre>\n\n\n\n<div class=\"wp-container-5 wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://badgen.net/badge/hello/world/red?icon=twitter\" rel=\"noopener\">View the image</a></div>\n</div>\n\n\n\n<h3>Adding a GitHub badge to the README file</h3>\n\n\n\n<p>Now we need to embed this badge in the README file of our GitHub repo. We can do that in Markdown using the syntax we looked at earlier:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">!\\[my badge\\](https://badgen.net/badge/hello/world/red?icon=twitter)</code></pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://paper-attachments.dropbox.com/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646076912276_image.png\" alt=\"\"/></figure>\n\n\n\n<p>Badgen provides a ton of different options, so I encourage you to check out their site and play around! For instance, one of the templates lets you show the number of times a given GitHub repo has been starred. <a href=\"https://badgen.net/github/stars/vercel/next.js\" rel=\"noopener\">Here’s a star GitHub badge for the Next.js repo</a> as an example:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/github/stars/vercel/next.js</code></pre>\n\n\n\n<div class=\"wp-container-6 wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://badgen.net/github/stars/vercel/next.js\" rel=\"noopener\">View the image</a></div>\n</div>\n\n\n\n<p>Pretty cool! But what if you want your badge to show some information that Badgen doesn’t natively support? Luckily, Badgen has a URL template for using your own HTTPS endpoints to get data:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/https/url/to/your/endpoint</code></pre>\n\n\n\n<p>For example, let’s say we want our badge to show the current price of Bitcoin in USD. All we need is a custom endpoint that returns this data as JSON like this:</p>\n\n\n\n<pre rel=\"JSON\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">{\n  \"color\": \"blue\",\n  \"status\": \"$39,333.7\",\n  \"subject\": \"Bitcoin Price USD\"\n}</code></pre>\n\n\n\n<p>Assuming our endpoint is available at <code>https://some-endpoint.example.com/bitcoin</code>, we can pass its data to Badgen using the following URL scheme:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/https/some-endpoint.example.com/bitcoin</code></pre>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://paper-attachments.dropbox.com/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646077993866_image.png\" alt=\"GitHub badge. On the left is a gray label with white text. On the right is a blue label with white text showing the price of Bitcoin.\"/><figcaption>The data for the cost of Bitcoin is served right to the GitHub badge.</figcaption></figure>\n\n\n\n<p>Even cooler now! But we still have to actually create the endpoint that provides the data for the GitHub badge. &#x1f914; Which brings us to…</p>\n\n\n\n<h3>Badgen + Napkin</h3>\n\n\n\n<p>There’s plenty of ways to get your own HTTPS endpoint. You could spin up a server with DigitalOcean or AWS EC2, or you could use a serverless option like Google Cloud Functions or AWS Lambda; however, those can all still become a bit complex and tedious for our simple use case. That’s why I’m suggesting <a href=\"https://www.napkin.io/sandbox\" rel=\"noopener\">Napkin’s in-browser function editor</a> to code and deploy an endpoint without any installs or configuration.</p>\n\n\n\n<p><a href=\"https://napkin.io/examples/bitcoin-badge\" rel=\"noopener\">Head over to Napkin’s Bitcoin badge example</a> to see an example endpoint. You can see the code to retrieve the current Bitcoin price and return it as JSON in the editor. You can run the code yourself from the editor or directly use the endpoint.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"1924\" height=\"1584\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?resize=1924%2C1584&#038;ssl=1\" alt=\"\" class=\"wp-image-365296\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?w=1924&amp;ssl=1 1924w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?resize=300%2C247&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?resize=1024%2C843&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?resize=768%2C632&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078055811_image.png?resize=1536%2C1265&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>To use the endpoint with Badgen, work with the same URL scheme from above, only this time with the Napkin endpoint:</p>\n\n\n\n<pre rel=\"\" class=\"wp-block-csstricks-code-block language-none\" data-line=\"\"><code markup=\"tt\">https://badgen.net/https/napkin-examples.npkn.net/bitcoin-badge</code></pre>\n\n\n\n<div class=\"wp-container-7 wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://badgen.net/https/napkin-examples.npkn.net/bitcoin-badge\" rel=\"noopener\">View the image</a></div>\n</div>\n\n\n\n<h3>More ways to customize GitHub badges</h3>\n\n\n\n<p>Next, let’s <a href=\"https://napkin.io/examples/bitcoin-badge\" rel=\"noopener\">fork this function</a> so we can add in our own custom code to it. Click the “Fork” button in the top-right to do so. You’ll be prompted to make an account with Napkin if you’re not already signed in.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2206\" height=\"1716\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=2206%2C1716&#038;ssl=1\" alt=\"\" class=\"wp-image-365297\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?w=2206&amp;ssl=1 2206w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=300%2C233&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=1024%2C797&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=768%2C597&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=1536%2C1195&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_B8566A65C3B54B4925AA95356D0F587C8DF1AECD038ACA37CAE66F824D5268C4_1646341208463_ScreenShot2022-03-03at12.59.41PM.png?resize=2048%2C1593&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Once we’ve successfully forked the function, we can add whatever code we want, using any npm modules we want. Let’s add the <a href=\"https://www.npmjs.com/package/moment/v/1.1.0\" rel=\"noopener\">Moment.js npm package</a> and update the endpoint response to show the time that the price of Bitcoin was last updated directly in our GitHub badge:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import fetch from 'node-fetch'\nimport moment from 'moment'\n\nconst bitcoinPrice = async () => {\n  const res = await fetch(\"&lt;https://blockchain.info/ticker>\")\n  const json = await res.json()\n  const lastPrice = json.USD.last+\"\"\n\n  const [ints, decimals] = lastPrice.split(\".\")\n\n  return ints.slice(0, -3) + \",\" + ints.slice(-3) + \".\" + decimals\n}\n\nexport default async (req, res) => {\n  const btc = await bitcoinPrice()\n\n  res.json({\n    icon: 'bitcoin',\n    subject: `Bitcoin Price USD (${moment().format('h:mma')})`,\n    color: 'blue',\n    status: `\\\\$${btc}`\n  })\n}</code></pre>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"618\" height=\"160\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078157051_image.png?resize=618%2C160&#038;ssl=1\" alt=\"\" class=\"wp-image-365298\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078157051_image.png?w=618&amp;ssl=1 618w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078157051_image.png?resize=300%2C78&amp;ssl=1 300w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /><figcaption>Deploy the function, update your URL, and now we get this.</figcaption></figure>\n\n\n\n<p>You might notice that the badge takes some time to refresh the next time you load up the README file over at GitHub. That’s is because GitHub uses a proxy mechanism to serve badge images.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2096\" height=\"680\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=2096%2C680&#038;ssl=1\" alt=\"\" class=\"wp-image-365299\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?w=2096&amp;ssl=1 2096w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=300%2C97&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=1024%2C332&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=768%2C249&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=1536%2C498&amp;ssl=1 1536w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078180837_image.png?resize=2048%2C664&amp;ssl=1 2048w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>GitHub serves the badge images this way to prevent abuse, like high request volume or JavaScript code injection. We can’t control GitHub’s proxy, but fortunately, it doesn’t cache too aggressively (or else that would kind of defeat the purpose of badges). In my experience, the TTL is around 5-10 minutes.</p>\n\n\n\n<p>OK, final boss time.</p>\n\n\n\n<h3>Custom SVG badges with Napkin</h3>\n\n\n\n<p>For our final trick, let’s use Napkin to send back a completely new SVG, so we can use custom images like we saw on the Next.js repo.</p>\n\n\n\n<p>A common use case for GitHub badges is showing the current status for a website. Let’s do that. Here are the two states our badge will support:</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"292\" height=\"170\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078219526_image.png?resize=292%2C170&#038;ssl=1\" alt=\"\" class=\"wp-image-365300\" data-recalc-dims=\"1\"/></figure>\n\n\n\n<p>Badgen doesn’t support custom SVGs, so instead, we’ll have our badge talk directly to our Napkin endpoint. Let’s create a new Napkin function for this called <code>site-status-badge</code>.</p>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"2020\" height=\"1008\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?resize=2020%2C1008&#038;ssl=1\" alt=\"\" class=\"wp-image-365301\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?w=2020&amp;ssl=1 2020w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?resize=300%2C150&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?resize=1024%2C511&amp;ssl=1 1024w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?resize=768%2C383&amp;ssl=1 768w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078233922_image.png?resize=1536%2C766&amp;ssl=1 1536w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>The code in this function makes a request to <code>example.com</code>. If the request status is 200, it returns the green badge as an SVG file; otherwise, it returns the red badge. You can <a href=\"https://napkin.io/examples/site-status-badge\" rel=\"noopener\">check out the function</a>, but I’ll also include the code here for reference:</p>\n\n\n\n<pre rel=\"JavaScript\" class=\"wp-block-csstricks-code-block language-javascript\" data-line=\"\"><code markup=\"tt\">import fetch from 'node-fetch'\n\nconst site_url = \"&lt;https://example.com>\"\n\n// full SVGs at &lt;https://napkin.io/examples/site-status-badge>\nconst customUpBadge = ''\nconst customDownBadge = ''\n\nconst isSiteUp = async () => {\n  const res = await fetch(site_url)\n  return res.ok\n}\n\nexport default async (req, res) => {\n  const forceFail = req.path?.endsWith('/400')\n\n  const healthy = await isSiteUp()\n  res.set('content-type', 'image/svg+xml')\n  if (healthy &amp;&amp; !forceFail) {\n    res.send(Buffer.from(customUpBadge).toString('base64'))\n  } else {\n    res.send(Buffer.from(customDownBadge).toString('base64'))\n  }\n}</code></pre>\n\n\n\n<p>Odds are pretty low that the <code>example.com</code> site will ever go down, so I added the <code>forceFail</code> case to simulate that scenario. Now we can add a <code>/400</code> after the Napkin endpoint URL to try it:</p>\n\n\n\n<pre rel=\"HTML\" class=\"wp-block-csstricks-code-block language-markup\" data-line=\"\"><code markup=\"tt\">!\\[status up\\](https://napkin-examples.npkn.net/site-status-badge/)\n!\\[status down\\](https://napkin-examples.npkn.net/site-status-badge/400)</code></pre>\n\n\n\n<div class=\"wp-container-8 wp-block-buttons\">\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://napkin-examples.npkn.net/site-status-badge/\" rel=\"noopener\">View Status Up Badge</a></div>\n\n\n\n<div class=\"wp-block-button\"><a class=\"wp-block-button__link\" href=\"https://napkin-examples.npkn.net/site-status-badge/400\" rel=\"noopener\">View Status Down Badge</a></div>\n</div>\n\n\n\n<figure class=\"wp-block-image size-full\"><img loading=\"lazy\" width=\"992\" height=\"360\" src=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078282384_image.png?resize=992%2C360&#038;ssl=1\" alt=\"\" class=\"wp-image-365302\" srcset=\"https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078282384_image.png?w=992&amp;ssl=1 992w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078282384_image.png?resize=300%2C109&amp;ssl=1 300w, https://i0.wp.com/css-tricks.com/wp-content/uploads/2022/04/s_9F0CC63CF218EB9C1F2F5104DCFF578A8F7AEB2B5457045E8A2D68C0FF9F6EE8_1646078282384_image.png?resize=768%2C279&amp;ssl=1 768w\" sizes=\"(min-width: 735px) 864px, 96vw\" data-recalc-dims=\"1\" /></figure>\n\n\n\n<p>Very nice &#x1f60e;</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<p>And there we have it! Your GitHub badge training is complete. But the journey is far from over. There’s a million different things where badges like this are super helpful. Have fun experimenting and go make that README sparkle! &#x2728;</p>\n<hr />\n<p><small><a rel=\"nofollow\" href=\"https://css-tricks.com/adding-custom-github-badges-to-your-repo/\">Adding Custom GitHub Badges to Your Repo</a> originally published on <a rel=\"nofollow\" href=\"https://css-tricks.com\">CSS-Tricks</a>. You should <a href=\"https://css-tricks.com/newsletters/\">get the newsletter</a>.</p>\n"
        ],
        "wfw:commentRss": [
            "https://css-tricks.com/adding-custom-github-badges-to-your-repo/feed/"
        ],
        "slash:comments": [
            "0"
        ],
        "post-id": [
            {
                "_": "364932",
                "$": {
                    "xmlns": "com-wordpress:feed-additions:1"
                }
            }
        ],
        "plainDescription": "If you’ve spent time looking at open-source repos on GitHub, you’ve probably\nnoticed that most of them use badges in their README files. Take the official\nReact repository, for instance. There are Git...",
        "providerTitle": "CSS Tricks",
        "providerURL": "https://css-tricks.com",
        "providerIdx": 2
    },
    {
        "title": [
            "How to Create Emails that Foster Customer Loyalty"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss\"\n              title=\"How to Create Emails that Foster Customer Loyalty\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4.jpg\"\n        alt=\"How to Create Emails that Foster Customer Loyalty\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Email is a powerful marketing tool, but getting it right is an art. Learn practical tips for sending emails that foster customer loyalty.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss\">How to Create Emails that Foster Customer Loyalty</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/create-emails-that-foster-customer-loyalty/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=207793",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "Email Marketing",
            "Entrepreneur",
            "Web"
        ],
        "dc:creator": [
            "Anna Senkina"
        ],
        "pubDate": [
            "Mon, 08 Nov 2021 02:00:00 GMT"
        ],
        "plainDescription": "How to Create Emails that Foster Customer Loyalty\n[https://uploads.sitepoint.com/wp-content/uploads/2021/11/1636330665customer-loyalty4.jpg]\n[https://www.sitepoint.com/create-emails-that-foster-custom...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Build an MVP with React and Firebase"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss\"\n              title=\"How to Build an MVP with React and Firebase\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app.jpg\"\n        alt=\"How to Build an MVP with React and Firebase\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-300x172.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-1024x585.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app-768x439.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            MVPs are useful for testing markets before fully investing in your product. Learn how to build an MVP using React and Firebase.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss\">How to Build an MVP with React and Firebase</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/react-firebase-build-mvp/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=206781",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "JavaScript"
        ],
        "dc:creator": [
            "Michael Wanyoike"
        ],
        "pubDate": [
            "Tue, 28 Sep 2021 02:00:02 GMT"
        ],
        "plainDescription": "How to Build an MVP with React and Firebase\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1632802723react-firebase-mvp-app.jpg]\n[https://www.sitepoint.com/react-firebase-build-mvp/?utm_sou...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    },
    {
        "title": [
            "How to Record Audio Using the MediaStream API"
        ],
        "description": [
            "\n            <a\n              href=\"https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss\"\n              title=\"How to Record Audio Using the MediaStream API\"\n              rel=\"nofollow\"\n            >\n              <img\n        class=\"webfeedsFeaturedVisual\"\n        style=\"display: block; margin: auto; margin-bottom: 5px;max-width: 100%;\"\n        src=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4.jpg\"\n        alt=\"How to Record Audio Using the MediaStream API\"\n        srcset=\"https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-300x170.jpg 300w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-1024x580.jpg 1024w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4-768x435.jpg 768w, https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4.jpg 1200w\"\n        sizes=\"(max-width: 300px) 100vw, 300px\"\n      />\n            </a>\n            Learn how to set up the MediaStream API on your apps to allow users to record audio tracks, listen to them, and upload them to your site.\n            <p>\n              Continue reading\n              <a rel=\"nofollow\" href=\"https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss\">How to Record Audio Using the MediaStream API</a>\n              on <a rel=\"nofollow\" href=\"https://www.sitepoint.com\">SitePoint</a>.\n            </p>\n          "
        ],
        "link": [
            "https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=rss"
        ],
        "guid": [
            {
                "_": "/?p=203861",
                "$": {
                    "isPermaLink": "false"
                }
            }
        ],
        "category": [
            "APIs",
            "JavaScript"
        ],
        "dc:creator": [
            "Shahed Nasser"
        ],
        "pubDate": [
            "Mon, 13 Sep 2021 02:00:04 GMT"
        ],
        "plainDescription": "How to Record Audio Using the MediaStream API\n[https://uploads.sitepoint.com/wp-content/uploads/2021/09/1631435070microphone4.jpg]\n[https://www.sitepoint.com/mediastream-api-record-audio/?utm_source=r...",
        "providerTitle": "Sitepoint",
        "providerURL": "https://www.sitepoint.com",
        "providerIdx": 4
    }
]